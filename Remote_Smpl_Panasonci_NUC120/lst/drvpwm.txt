; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\drvpwm.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\drvpwm.d --cpu=Cortex-M0 --apcs=interwork -O0 -Otime -I.\ -I..\..\..\..\CMSIS\CM0\CoreSupport -I..\..\..\..\CMSIS\CM0\DeviceSupport\Nuvoton\NUC1xx -I..\..\..\Include -I..\..\..\Include\Driver -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\Nuvoton\NUC1xx -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\drvpwm.crf ..\..\..\Src\Driver\DrvPWM.c]
                          THUMB

                          AREA ||i.DrvPWM_ClearCaptureIntStatus||, CODE, READONLY, ALIGN=2

                  DrvPWM_ClearCaptureIntStatus PROC
;;;980    /*---------------------------------------------------------------------------------------------------------*/
;;;981    void DrvPWM_ClearCaptureIntStatus(uint8_t u8Capture, uint8_t u8IntType)
000000  b500              PUSH     {lr}
;;;982    {
;;;983        if (s_i32Option)
000002  4aa4              LDR      r2,|L1.660|
000004  6812              LDR      r2,[r2,#0]  ; s_i32Option
000006  2a00              CMP      r2,#0
000008  d075              BEQ      |L1.246|
;;;984        { 
;;;985            switch (u8Capture)
00000a  4602              MOV      r2,r0
00000c  3a10              SUBS     r2,r2,#0x10
00000e  0013              MOVS     r3,r2
000010  f7fffffe          BL       __ARM_common_switch8
000014  08051626          DCB      0x08,0x05,0x16,0x26
000018  37475868          DCB      0x37,0x47,0x58,0x68
00001c  7a8a              DCB      0x7a,0x8a
;;;986            {
;;;987                case DRVPWM_CAP0:
;;;988                    (u8IntType == DRVPWM_CAP_RISING_FLAG)? (outp32(&PWMA->CCR0, inp32(&PWMA->CCR0) & (CCR_MASK | BIT6))) : (outp32(&PWMA->CCR0, inp32(&PWMA->CCR0) & (CCR_MASK | BIT7)));
00001e  2906              CMP      r1,#6
000020  d106              BNE      |L1.48|
000022  4a9d              LDR      r2,|L1.664|
000024  6912              LDR      r2,[r2,#0x10]
000026  4b9d              LDR      r3,|L1.668|
000028  401a              ANDS     r2,r2,r3
00002a  4b9b              LDR      r3,|L1.664|
00002c  611a              STR      r2,[r3,#0x10]
00002e  e006              B        |L1.62|
                  |L1.48|
000030  4a99              LDR      r2,|L1.664|
000032  6912              LDR      r2,[r2,#0x10]
000034  4b99              LDR      r3,|L1.668|
000036  3340              ADDS     r3,r3,#0x40
000038  401a              ANDS     r2,r2,r3
00003a  4b97              LDR      r3,|L1.664|
00003c  611a              STR      r2,[r3,#0x10]
                  |L1.62|
;;;989                    break;
00003e  e073              B        |L1.296|
;;;990                case DRVPWM_CAP1:
;;;991                    (u8IntType == DRVPWM_CAP_RISING_FLAG)? (outp32(&PWMA->CCR0, inp32(&PWMA->CCR0) & (CCR_MASK | BIT22))) : (outp32(&PWMA->CCR0, inp32(&PWMA->CCR0) & (CCR_MASK | BIT23)));
000040  2906              CMP      r1,#6
000042  d106              BNE      |L1.82|
000044  4a94              LDR      r2,|L1.664|
000046  6912              LDR      r2,[r2,#0x10]
000048  4b95              LDR      r3,|L1.672|
00004a  401a              ANDS     r2,r2,r3
00004c  4b92              LDR      r3,|L1.664|
00004e  611a              STR      r2,[r3,#0x10]
000050  e005              B        |L1.94|
                  |L1.82|
000052  4a91              LDR      r2,|L1.664|
000054  6912              LDR      r2,[r2,#0x10]
000056  4b93              LDR      r3,|L1.676|
000058  401a              ANDS     r2,r2,r3
00005a  4b8f              LDR      r3,|L1.664|
00005c  611a              STR      r2,[r3,#0x10]
                  |L1.94|
;;;992                    break;
00005e  e063              B        |L1.296|
;;;993                case DRVPWM_CAP2:
;;;994                    (u8IntType == DRVPWM_CAP_RISING_FLAG)? (outp32(&PWMA->CCR2, inp32(&PWMA->CCR2) & (CCR_MASK | BIT6))) : (outp32(&PWMA->CCR2, inp32(&PWMA->CCR2) & (CCR_MASK | BIT7)));
000060  2906              CMP      r1,#6
000062  d106              BNE      |L1.114|
000064  4a8c              LDR      r2,|L1.664|
000066  6952              LDR      r2,[r2,#0x14]
000068  4b8c              LDR      r3,|L1.668|
00006a  401a              ANDS     r2,r2,r3
00006c  4b8a              LDR      r3,|L1.664|
00006e  615a              STR      r2,[r3,#0x14]
000070  e006              B        |L1.128|
                  |L1.114|
000072  4a89              LDR      r2,|L1.664|
000074  6952              LDR      r2,[r2,#0x14]
000076  4b89              LDR      r3,|L1.668|
000078  3340              ADDS     r3,r3,#0x40
00007a  401a              ANDS     r2,r2,r3
00007c  4b86              LDR      r3,|L1.664|
00007e  615a              STR      r2,[r3,#0x14]
                  |L1.128|
;;;995                    break;
000080  e052              B        |L1.296|
;;;996                case DRVPWM_CAP3:
;;;997                    (u8IntType == DRVPWM_CAP_RISING_FLAG)? (outp32(&PWMA->CCR2, inp32(&PWMA->CCR2) & (CCR_MASK | BIT22))) : (outp32(&PWMA->CCR2, inp32(&PWMA->CCR2) & (CCR_MASK | BIT23)));
000082  2906              CMP      r1,#6
000084  d106              BNE      |L1.148|
000086  4a84              LDR      r2,|L1.664|
000088  6952              LDR      r2,[r2,#0x14]
00008a  4b85              LDR      r3,|L1.672|
00008c  401a              ANDS     r2,r2,r3
00008e  4b82              LDR      r3,|L1.664|
000090  615a              STR      r2,[r3,#0x14]
000092  e005              B        |L1.160|
                  |L1.148|
000094  4a80              LDR      r2,|L1.664|
000096  6952              LDR      r2,[r2,#0x14]
000098  4b82              LDR      r3,|L1.676|
00009a  401a              ANDS     r2,r2,r3
00009c  4b7e              LDR      r3,|L1.664|
00009e  615a              STR      r2,[r3,#0x14]
                  |L1.160|
;;;998                    break;
0000a0  e042              B        |L1.296|
;;;999    
;;;1000               case DRVPWM_CAP4:
;;;1001                   (u8IntType == DRVPWM_CAP_RISING_FLAG)? (outp32(&PWMB->CCR0, inp32(&PWMB->CCR0) & (CCR_MASK | BIT6))) : (outp32(&PWMB->CCR0, inp32(&PWMB->CCR0) & (CCR_MASK | BIT7)));
0000a2  2906              CMP      r1,#6
0000a4  d106              BNE      |L1.180|
0000a6  4a80              LDR      r2,|L1.680|
0000a8  6912              LDR      r2,[r2,#0x10]
0000aa  4b7c              LDR      r3,|L1.668|
0000ac  401a              ANDS     r2,r2,r3
0000ae  4b7e              LDR      r3,|L1.680|
0000b0  611a              STR      r2,[r3,#0x10]
0000b2  e006              B        |L1.194|
                  |L1.180|
0000b4  4a7c              LDR      r2,|L1.680|
0000b6  6912              LDR      r2,[r2,#0x10]
0000b8  4b78              LDR      r3,|L1.668|
0000ba  3340              ADDS     r3,r3,#0x40
0000bc  401a              ANDS     r2,r2,r3
0000be  4b7a              LDR      r3,|L1.680|
0000c0  611a              STR      r2,[r3,#0x10]
                  |L1.194|
;;;1002                   break;
0000c2  e031              B        |L1.296|
;;;1003               case DRVPWM_CAP5:
;;;1004                   (u8IntType == DRVPWM_CAP_RISING_FLAG)? (outp32(&PWMB->CCR0, inp32(&PWMB->CCR0) & (CCR_MASK | BIT22))) : (outp32(&PWMB->CCR0, inp32(&PWMB->CCR0) & (CCR_MASK | BIT23)));
0000c4  2906              CMP      r1,#6
0000c6  d106              BNE      |L1.214|
0000c8  4a77              LDR      r2,|L1.680|
0000ca  6912              LDR      r2,[r2,#0x10]
0000cc  4b74              LDR      r3,|L1.672|
0000ce  401a              ANDS     r2,r2,r3
0000d0  4b75              LDR      r3,|L1.680|
0000d2  611a              STR      r2,[r3,#0x10]
0000d4  e005              B        |L1.226|
                  |L1.214|
0000d6  4a74              LDR      r2,|L1.680|
0000d8  6912              LDR      r2,[r2,#0x10]
0000da  4b72              LDR      r3,|L1.676|
0000dc  401a              ANDS     r2,r2,r3
0000de  4b72              LDR      r3,|L1.680|
0000e0  611a              STR      r2,[r3,#0x10]
                  |L1.226|
;;;1005                   break;
0000e2  e021              B        |L1.296|
;;;1006               case DRVPWM_CAP6:
;;;1007                   (u8IntType == DRVPWM_CAP_RISING_FLAG)? (outp32(&PWMB->CCR2, inp32(&PWMB->CCR2) & (CCR_MASK | BIT6))) : (outp32(&PWMB->CCR2, inp32(&PWMB->CCR2) & (CCR_MASK | BIT7)));
0000e4  2906              CMP      r1,#6
0000e6  d107              BNE      |L1.248|
0000e8  4a6f              LDR      r2,|L1.680|
0000ea  6952              LDR      r2,[r2,#0x14]
0000ec  4b6b              LDR      r3,|L1.668|
0000ee  401a              ANDS     r2,r2,r3
0000f0  4b6d              LDR      r3,|L1.680|
0000f2  615a              STR      r2,[r3,#0x14]
0000f4  e007              B        |L1.262|
                  |L1.246|
0000f6  e018              B        |L1.298|
                  |L1.248|
0000f8  4a6b              LDR      r2,|L1.680|
0000fa  6952              LDR      r2,[r2,#0x14]
0000fc  4b67              LDR      r3,|L1.668|
0000fe  3340              ADDS     r3,r3,#0x40
000100  401a              ANDS     r2,r2,r3
000102  4b69              LDR      r3,|L1.680|
000104  615a              STR      r2,[r3,#0x14]
                  |L1.262|
;;;1008                   break;
000106  e00f              B        |L1.296|
;;;1009               case DRVPWM_CAP7:
;;;1010                   (u8IntType == DRVPWM_CAP_RISING_FLAG)? (outp32(&PWMB->CCR2, inp32(&PWMB->CCR2) & (CCR_MASK | BIT22))) : (outp32(&PWMB->CCR2, inp32(&PWMB->CCR2) & (CCR_MASK | BIT23)));
000108  2906              CMP      r1,#6
00010a  d106              BNE      |L1.282|
00010c  4a66              LDR      r2,|L1.680|
00010e  6952              LDR      r2,[r2,#0x14]
000110  4b63              LDR      r3,|L1.672|
000112  401a              ANDS     r2,r2,r3
000114  4b64              LDR      r3,|L1.680|
000116  615a              STR      r2,[r3,#0x14]
000118  e005              B        |L1.294|
                  |L1.282|
00011a  4a63              LDR      r2,|L1.680|
00011c  6952              LDR      r2,[r2,#0x14]
00011e  4b61              LDR      r3,|L1.676|
000120  401a              ANDS     r2,r2,r3
000122  4b61              LDR      r3,|L1.680|
000124  615a              STR      r2,[r3,#0x14]
                  |L1.294|
;;;1011                   break;
000126  bf00              NOP      
                  |L1.296|
000128  e0b2              B        |L1.656|
                  |L1.298|
;;;1012           }
;;;1013       }
;;;1014       else
;;;1015       {
;;;1016           switch (u8Capture)
00012a  4602              MOV      r2,r0
00012c  3a10              SUBS     r2,r2,#0x10
00012e  0013              MOVS     r3,r2
000130  f7fffffe          BL       __ARM_common_switch8
000134  0805192f          DCB      0x08,0x05,0x19,0x2f
000138  43596d83          DCB      0x43,0x59,0x6d,0x83
00013c  97ad              DCB      0x97,0xad
;;;1017           {
;;;1018               case DRVPWM_CAP0:
;;;1019                   (u8IntType == DRVPWM_CAP_RISING_FLAG)? (outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & ~(BIT4 | BIT20)) & ~BIT6)) : (outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & ~(BIT4 | BIT20)) & ~BIT7));
00013e  2906              CMP      r1,#6
000140  d108              BNE      |L1.340|
000142  4a55              LDR      r2,|L1.664|
000144  6912              LDR      r2,[r2,#0x10]
000146  4b59              LDR      r3,|L1.684|
000148  401a              ANDS     r2,r2,r3
00014a  2340              MOVS     r3,#0x40
00014c  439a              BICS     r2,r2,r3
00014e  4b52              LDR      r3,|L1.664|
000150  611a              STR      r2,[r3,#0x10]
000152  e007              B        |L1.356|
                  |L1.340|
000154  4a50              LDR      r2,|L1.664|
000156  6912              LDR      r2,[r2,#0x10]
000158  4b54              LDR      r3,|L1.684|
00015a  401a              ANDS     r2,r2,r3
00015c  2380              MOVS     r3,#0x80
00015e  439a              BICS     r2,r2,r3
000160  4b4d              LDR      r3,|L1.664|
000162  611a              STR      r2,[r3,#0x10]
                  |L1.356|
;;;1020                   break;
000164  e093              B        |L1.654|
;;;1021               case DRVPWM_CAP1:
;;;1022                   (u8IntType == DRVPWM_CAP_RISING_FLAG)? (outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & ~(BIT4 | BIT20)) & ~BIT22)) : (outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & ~(BIT4 | BIT20)) & ~BIT23));
000166  2906              CMP      r1,#6
000168  d109              BNE      |L1.382|
00016a  4a4b              LDR      r2,|L1.664|
00016c  6912              LDR      r2,[r2,#0x10]
00016e  4b4f              LDR      r3,|L1.684|
000170  401a              ANDS     r2,r2,r3
000172  2301              MOVS     r3,#1
000174  059b              LSLS     r3,r3,#22
000176  439a              BICS     r2,r2,r3
000178  4b47              LDR      r3,|L1.664|
00017a  611a              STR      r2,[r3,#0x10]
00017c  e008              B        |L1.400|
                  |L1.382|
00017e  4a46              LDR      r2,|L1.664|
000180  6912              LDR      r2,[r2,#0x10]
000182  4b4a              LDR      r3,|L1.684|
000184  401a              ANDS     r2,r2,r3
000186  2301              MOVS     r3,#1
000188  05db              LSLS     r3,r3,#23
00018a  439a              BICS     r2,r2,r3
00018c  4b42              LDR      r3,|L1.664|
00018e  611a              STR      r2,[r3,#0x10]
                  |L1.400|
;;;1023                   break;
000190  e07d              B        |L1.654|
;;;1024               case DRVPWM_CAP2:
;;;1025                   (u8IntType == DRVPWM_CAP_RISING_FLAG)? (outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & ~(BIT4 | BIT20)) & ~BIT6)) : (outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & ~(BIT4 | BIT20)) & ~BIT7));
000192  2906              CMP      r1,#6
000194  d108              BNE      |L1.424|
000196  4a40              LDR      r2,|L1.664|
000198  6952              LDR      r2,[r2,#0x14]
00019a  4b44              LDR      r3,|L1.684|
00019c  401a              ANDS     r2,r2,r3
00019e  2340              MOVS     r3,#0x40
0001a0  439a              BICS     r2,r2,r3
0001a2  4b3d              LDR      r3,|L1.664|
0001a4  615a              STR      r2,[r3,#0x14]
0001a6  e007              B        |L1.440|
                  |L1.424|
0001a8  4a3b              LDR      r2,|L1.664|
0001aa  6952              LDR      r2,[r2,#0x14]
0001ac  4b3f              LDR      r3,|L1.684|
0001ae  401a              ANDS     r2,r2,r3
0001b0  2380              MOVS     r3,#0x80
0001b2  439a              BICS     r2,r2,r3
0001b4  4b38              LDR      r3,|L1.664|
0001b6  615a              STR      r2,[r3,#0x14]
                  |L1.440|
;;;1026                   break;
0001b8  e069              B        |L1.654|
;;;1027               case DRVPWM_CAP3:
;;;1028                   (u8IntType == DRVPWM_CAP_RISING_FLAG)? (outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & ~(BIT4 | BIT20)) & ~BIT22)) : (outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & ~(BIT4 | BIT20)) & ~BIT23));
0001ba  2906              CMP      r1,#6
0001bc  d109              BNE      |L1.466|
0001be  4a36              LDR      r2,|L1.664|
0001c0  6952              LDR      r2,[r2,#0x14]
0001c2  4b3a              LDR      r3,|L1.684|
0001c4  401a              ANDS     r2,r2,r3
0001c6  2301              MOVS     r3,#1
0001c8  059b              LSLS     r3,r3,#22
0001ca  439a              BICS     r2,r2,r3
0001cc  4b32              LDR      r3,|L1.664|
0001ce  615a              STR      r2,[r3,#0x14]
0001d0  e008              B        |L1.484|
                  |L1.466|
0001d2  4a31              LDR      r2,|L1.664|
0001d4  6952              LDR      r2,[r2,#0x14]
0001d6  4b35              LDR      r3,|L1.684|
0001d8  401a              ANDS     r2,r2,r3
0001da  2301              MOVS     r3,#1
0001dc  05db              LSLS     r3,r3,#23
0001de  439a              BICS     r2,r2,r3
0001e0  4b2d              LDR      r3,|L1.664|
0001e2  615a              STR      r2,[r3,#0x14]
                  |L1.484|
;;;1029                   break;
0001e4  e053              B        |L1.654|
;;;1030   
;;;1031               case DRVPWM_CAP4:
;;;1032                   (u8IntType == DRVPWM_CAP_RISING_FLAG)? (outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & ~(BIT4 | BIT20)) & ~BIT6)) : (outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & ~(BIT4 | BIT20)) & ~BIT7));
0001e6  2906              CMP      r1,#6
0001e8  d108              BNE      |L1.508|
0001ea  4a2f              LDR      r2,|L1.680|
0001ec  6912              LDR      r2,[r2,#0x10]
0001ee  4b2f              LDR      r3,|L1.684|
0001f0  401a              ANDS     r2,r2,r3
0001f2  2340              MOVS     r3,#0x40
0001f4  439a              BICS     r2,r2,r3
0001f6  4b2c              LDR      r3,|L1.680|
0001f8  611a              STR      r2,[r3,#0x10]
0001fa  e007              B        |L1.524|
                  |L1.508|
0001fc  4a2a              LDR      r2,|L1.680|
0001fe  6912              LDR      r2,[r2,#0x10]
000200  4b2a              LDR      r3,|L1.684|
000202  401a              ANDS     r2,r2,r3
000204  2380              MOVS     r3,#0x80
000206  439a              BICS     r2,r2,r3
000208  4b27              LDR      r3,|L1.680|
00020a  611a              STR      r2,[r3,#0x10]
                  |L1.524|
;;;1033                   break;
00020c  e03f              B        |L1.654|
;;;1034               case DRVPWM_CAP5:
;;;1035                   (u8IntType == DRVPWM_CAP_RISING_FLAG)? (outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & ~(BIT4 | BIT20)) & ~BIT22)) : (outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & ~(BIT4 | BIT20)) & ~BIT23));
00020e  2906              CMP      r1,#6
000210  d109              BNE      |L1.550|
000212  4a25              LDR      r2,|L1.680|
000214  6912              LDR      r2,[r2,#0x10]
000216  4b25              LDR      r3,|L1.684|
000218  401a              ANDS     r2,r2,r3
00021a  2301              MOVS     r3,#1
00021c  059b              LSLS     r3,r3,#22
00021e  439a              BICS     r2,r2,r3
000220  4b21              LDR      r3,|L1.680|
000222  611a              STR      r2,[r3,#0x10]
000224  e008              B        |L1.568|
                  |L1.550|
000226  4a20              LDR      r2,|L1.680|
000228  6912              LDR      r2,[r2,#0x10]
00022a  4b20              LDR      r3,|L1.684|
00022c  401a              ANDS     r2,r2,r3
00022e  2301              MOVS     r3,#1
000230  05db              LSLS     r3,r3,#23
000232  439a              BICS     r2,r2,r3
000234  4b1c              LDR      r3,|L1.680|
000236  611a              STR      r2,[r3,#0x10]
                  |L1.568|
;;;1036                   break;
000238  e029              B        |L1.654|
;;;1037               case DRVPWM_CAP6:
;;;1038                   (u8IntType == DRVPWM_CAP_RISING_FLAG)? (outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & ~(BIT4 | BIT20)) & ~BIT6)) : (outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & ~(BIT4 | BIT20)) & ~BIT7));
00023a  2906              CMP      r1,#6
00023c  d108              BNE      |L1.592|
00023e  4a1a              LDR      r2,|L1.680|
000240  6952              LDR      r2,[r2,#0x14]
000242  4b1a              LDR      r3,|L1.684|
000244  401a              ANDS     r2,r2,r3
000246  2340              MOVS     r3,#0x40
000248  439a              BICS     r2,r2,r3
00024a  4b17              LDR      r3,|L1.680|
00024c  615a              STR      r2,[r3,#0x14]
00024e  e007              B        |L1.608|
                  |L1.592|
000250  4a15              LDR      r2,|L1.680|
000252  6952              LDR      r2,[r2,#0x14]
000254  4b15              LDR      r3,|L1.684|
000256  401a              ANDS     r2,r2,r3
000258  2380              MOVS     r3,#0x80
00025a  439a              BICS     r2,r2,r3
00025c  4b12              LDR      r3,|L1.680|
00025e  615a              STR      r2,[r3,#0x14]
                  |L1.608|
;;;1039                   break;
000260  e015              B        |L1.654|
;;;1040               case DRVPWM_CAP7:
;;;1041                   (u8IntType == DRVPWM_CAP_RISING_FLAG)? (outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & ~(BIT4 | BIT20)) & ~BIT22)) : (outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & ~(BIT4 | BIT20)) & ~BIT23));
000262  2906              CMP      r1,#6
000264  d109              BNE      |L1.634|
000266  4a10              LDR      r2,|L1.680|
000268  6952              LDR      r2,[r2,#0x14]
00026a  4b10              LDR      r3,|L1.684|
00026c  401a              ANDS     r2,r2,r3
00026e  2301              MOVS     r3,#1
000270  059b              LSLS     r3,r3,#22
000272  439a              BICS     r2,r2,r3
000274  4b0c              LDR      r3,|L1.680|
000276  615a              STR      r2,[r3,#0x14]
000278  e008              B        |L1.652|
                  |L1.634|
00027a  4a0b              LDR      r2,|L1.680|
00027c  6952              LDR      r2,[r2,#0x14]
00027e  4b0b              LDR      r3,|L1.684|
000280  401a              ANDS     r2,r2,r3
000282  2301              MOVS     r3,#1
000284  05db              LSLS     r3,r3,#23
000286  439a              BICS     r2,r2,r3
000288  4b07              LDR      r3,|L1.680|
00028a  615a              STR      r2,[r3,#0x14]
                  |L1.652|
;;;1042                   break;
00028c  bf00              NOP      
                  |L1.654|
00028e  bf00              NOP                            ;1020
                  |L1.656|
;;;1043           }   
;;;1044       }
;;;1045   }
000290  bd00              POP      {pc}
;;;1046   
                          ENDP

000292  0000              DCW      0x0000
                  |L1.660|
                          DCD      s_i32Option
                  |L1.664|
                          DCD      0x40040040
                  |L1.668|
                          DCD      0x000f004f
                  |L1.672|
                          DCD      0x004f000f
                  |L1.676|
                          DCD      0x008f000f
                  |L1.680|
                          DCD      0x40140040
                  |L1.684|
                          DCD      0xffefffef

                          AREA ||i.DrvPWM_ClearInt||, CODE, READONLY, ALIGN=2

                  DrvPWM_ClearInt PROC
;;;723    /*---------------------------------------------------------------------------------------------------------*/
;;;724    void DrvPWM_ClearInt(uint8_t u8Timer)
000000  b500              PUSH     {lr}
;;;725    {
;;;726        switch (u8Timer)
000002  0003              MOVS     r3,r0
000004  f7fffffe          BL       __ARM_common_switch8
000008  180d0e0f          DCB      0x18,0x0d,0x0e,0x0f
00000c  10151617          DCB      0x10,0x15,0x16,0x17
000010  18b2b2b2          DCB      0x18,0xb2,0xb2,0xb2
000014  b2b2b2b2          DCB      0xb2,0xb2,0xb2,0xb2
000018  b21e3143          DCB      0xb2,0x1e,0x31,0x43
00001c  56687b8d          DCB      0x56,0x68,0x7b,0x8d
000020  a0b2              DCB      0xa0,0xb2
;;;727        {
;;;728            case DRVPWM_TIMER0:
;;;729            case DRVPWM_TIMER1:
000022  bf00              NOP      
;;;730            case DRVPWM_TIMER2:
000024  bf00              NOP      
;;;731            case DRVPWM_TIMER3:
000026  bf00              NOP      
;;;732                outp32(&PWMA->PIIR, (1 << u8Timer) );
000028  2101              MOVS     r1,#1
00002a  4081              LSLS     r1,r1,r0
00002c  4a50              LDR      r2,|L2.368|
00002e  6051              STR      r1,[r2,#4]
;;;733                break;
000030  e09c              B        |L2.364|
;;;734            case DRVPWM_TIMER4:
;;;735            case DRVPWM_TIMER5:
000032  bf00              NOP      
;;;736            case DRVPWM_TIMER6:
000034  bf00              NOP      
;;;737            case DRVPWM_TIMER7:
000036  bf00              NOP      
;;;738                outp32(&PWMB->PIIR, (1 << (u8Timer-DRVPWM_TIMER4)) );
000038  1f01              SUBS     r1,r0,#4
00003a  2201              MOVS     r2,#1
00003c  408a              LSLS     r2,r2,r1
00003e  494d              LDR      r1,|L2.372|
000040  604a              STR      r2,[r1,#4]
;;;739                break;
000042  e093              B        |L2.364|
;;;740    
;;;741            case DRVPWM_CAP0:
;;;742                if (s_i32Option)
000044  494c              LDR      r1,|L2.376|
000046  6809              LDR      r1,[r1,#0]  ; s_i32Option
000048  2900              CMP      r1,#0
00004a  d006              BEQ      |L2.90|
;;;743                    outp32(&PWMA->CCR0, inp32(&PWMA->CCR0) & (CCR_MASK | BIT4));
00004c  4948              LDR      r1,|L2.368|
00004e  6909              LDR      r1,[r1,#0x10]
000050  4a4a              LDR      r2,|L2.380|
000052  4011              ANDS     r1,r1,r2
000054  4a46              LDR      r2,|L2.368|
000056  6111              STR      r1,[r2,#0x10]
000058  e006              B        |L2.104|
                  |L2.90|
;;;744                else
;;;745                    outp32(&PWMA->CCR0, inp32(&PWMA->CCR0) & ~BIT20);
00005a  4945              LDR      r1,|L2.368|
00005c  6909              LDR      r1,[r1,#0x10]
00005e  2201              MOVS     r2,#1
000060  0512              LSLS     r2,r2,#20
000062  4391              BICS     r1,r1,r2
000064  4a42              LDR      r2,|L2.368|
000066  6111              STR      r1,[r2,#0x10]
                  |L2.104|
;;;746                break;
000068  e080              B        |L2.364|
;;;747            case DRVPWM_CAP1:
;;;748                if (s_i32Option)
00006a  4943              LDR      r1,|L2.376|
00006c  6809              LDR      r1,[r1,#0]  ; s_i32Option
00006e  2900              CMP      r1,#0
000070  d006              BEQ      |L2.128|
;;;749                    outp32(&PWMA->CCR0, inp32(&PWMA->CCR0) & (CCR_MASK | BIT20));
000072  493f              LDR      r1,|L2.368|
000074  6909              LDR      r1,[r1,#0x10]
000076  4a42              LDR      r2,|L2.384|
000078  4011              ANDS     r1,r1,r2
00007a  4a3d              LDR      r2,|L2.368|
00007c  6111              STR      r1,[r2,#0x10]
00007e  e005              B        |L2.140|
                  |L2.128|
;;;750                else
;;;751                    outp32(&PWMA->CCR0, inp32(&PWMA->CCR0) & ~BIT4);
000080  493b              LDR      r1,|L2.368|
000082  6909              LDR      r1,[r1,#0x10]
000084  2210              MOVS     r2,#0x10
000086  4391              BICS     r1,r1,r2
000088  4a39              LDR      r2,|L2.368|
00008a  6111              STR      r1,[r2,#0x10]
                  |L2.140|
;;;752                break;
00008c  e06e              B        |L2.364|
;;;753            case DRVPWM_CAP2:
;;;754                if (s_i32Option)
00008e  493a              LDR      r1,|L2.376|
000090  6809              LDR      r1,[r1,#0]  ; s_i32Option
000092  2900              CMP      r1,#0
000094  d006              BEQ      |L2.164|
;;;755                    outp32(&PWMA->CCR2, inp32(&PWMA->CCR2) & (CCR_MASK | BIT4));
000096  4936              LDR      r1,|L2.368|
000098  6949              LDR      r1,[r1,#0x14]
00009a  4a38              LDR      r2,|L2.380|
00009c  4011              ANDS     r1,r1,r2
00009e  4a34              LDR      r2,|L2.368|
0000a0  6151              STR      r1,[r2,#0x14]
0000a2  e006              B        |L2.178|
                  |L2.164|
;;;756                else
;;;757                    outp32(&PWMA->CCR2, inp32(&PWMA->CCR2) & ~BIT20);
0000a4  4932              LDR      r1,|L2.368|
0000a6  6949              LDR      r1,[r1,#0x14]
0000a8  2201              MOVS     r2,#1
0000aa  0512              LSLS     r2,r2,#20
0000ac  4391              BICS     r1,r1,r2
0000ae  4a30              LDR      r2,|L2.368|
0000b0  6151              STR      r1,[r2,#0x14]
                  |L2.178|
;;;758                break;
0000b2  e05b              B        |L2.364|
;;;759            case DRVPWM_CAP3:
;;;760                if (s_i32Option)
0000b4  4930              LDR      r1,|L2.376|
0000b6  6809              LDR      r1,[r1,#0]  ; s_i32Option
0000b8  2900              CMP      r1,#0
0000ba  d006              BEQ      |L2.202|
;;;761                    outp32(&PWMA->CCR2, inp32(&PWMA->CCR2) & (CCR_MASK | BIT20));
0000bc  492c              LDR      r1,|L2.368|
0000be  6949              LDR      r1,[r1,#0x14]
0000c0  4a2f              LDR      r2,|L2.384|
0000c2  4011              ANDS     r1,r1,r2
0000c4  4a2a              LDR      r2,|L2.368|
0000c6  6151              STR      r1,[r2,#0x14]
0000c8  e005              B        |L2.214|
                  |L2.202|
;;;762                else
;;;763                    outp32(&PWMA->CCR2, inp32(&PWMA->CCR2) & ~BIT4);
0000ca  4929              LDR      r1,|L2.368|
0000cc  6949              LDR      r1,[r1,#0x14]
0000ce  2210              MOVS     r2,#0x10
0000d0  4391              BICS     r1,r1,r2
0000d2  4a27              LDR      r2,|L2.368|
0000d4  6151              STR      r1,[r2,#0x14]
                  |L2.214|
;;;764                break;
0000d6  e049              B        |L2.364|
;;;765            case DRVPWM_CAP4:
;;;766                if (s_i32Option)
0000d8  4927              LDR      r1,|L2.376|
0000da  6809              LDR      r1,[r1,#0]  ; s_i32Option
0000dc  2900              CMP      r1,#0
0000de  d006              BEQ      |L2.238|
;;;767                    outp32(&PWMB->CCR0, inp32(&PWMB->CCR0) & (CCR_MASK | BIT4));
0000e0  4924              LDR      r1,|L2.372|
0000e2  6909              LDR      r1,[r1,#0x10]
0000e4  4a25              LDR      r2,|L2.380|
0000e6  4011              ANDS     r1,r1,r2
0000e8  4a22              LDR      r2,|L2.372|
0000ea  6111              STR      r1,[r2,#0x10]
0000ec  e006              B        |L2.252|
                  |L2.238|
;;;768                else
;;;769                    outp32(&PWMB->CCR0, inp32(&PWMB->CCR0) & ~BIT20);
0000ee  4921              LDR      r1,|L2.372|
0000f0  6909              LDR      r1,[r1,#0x10]
0000f2  2201              MOVS     r2,#1
0000f4  0512              LSLS     r2,r2,#20
0000f6  4391              BICS     r1,r1,r2
0000f8  4a1e              LDR      r2,|L2.372|
0000fa  6111              STR      r1,[r2,#0x10]
                  |L2.252|
;;;770                break;
0000fc  e036              B        |L2.364|
;;;771            case DRVPWM_CAP5:
;;;772                if (s_i32Option)
0000fe  491e              LDR      r1,|L2.376|
000100  6809              LDR      r1,[r1,#0]  ; s_i32Option
000102  2900              CMP      r1,#0
000104  d006              BEQ      |L2.276|
;;;773                    outp32(&PWMB->CCR0, inp32(&PWMB->CCR0) & (CCR_MASK | BIT20));
000106  491b              LDR      r1,|L2.372|
000108  6909              LDR      r1,[r1,#0x10]
00010a  4a1d              LDR      r2,|L2.384|
00010c  4011              ANDS     r1,r1,r2
00010e  4a19              LDR      r2,|L2.372|
000110  6111              STR      r1,[r2,#0x10]
000112  e005              B        |L2.288|
                  |L2.276|
;;;774                else
;;;775                    outp32(&PWMB->CCR0, inp32(&PWMB->CCR0) & ~BIT4);
000114  4917              LDR      r1,|L2.372|
000116  6909              LDR      r1,[r1,#0x10]
000118  2210              MOVS     r2,#0x10
00011a  4391              BICS     r1,r1,r2
00011c  4a15              LDR      r2,|L2.372|
00011e  6111              STR      r1,[r2,#0x10]
                  |L2.288|
;;;776                break;
000120  e024              B        |L2.364|
;;;777            case DRVPWM_CAP6:
;;;778                if (s_i32Option)
000122  4915              LDR      r1,|L2.376|
000124  6809              LDR      r1,[r1,#0]  ; s_i32Option
000126  2900              CMP      r1,#0
000128  d006              BEQ      |L2.312|
;;;779                    outp32(&PWMB->CCR2, inp32(&PWMB->CCR2) & (CCR_MASK | BIT4));
00012a  4912              LDR      r1,|L2.372|
00012c  6949              LDR      r1,[r1,#0x14]
00012e  4a13              LDR      r2,|L2.380|
000130  4011              ANDS     r1,r1,r2
000132  4a10              LDR      r2,|L2.372|
000134  6151              STR      r1,[r2,#0x14]
000136  e006              B        |L2.326|
                  |L2.312|
;;;780                else
;;;781                    outp32(&PWMB->CCR2, inp32(&PWMB->CCR2) & ~BIT20);
000138  490e              LDR      r1,|L2.372|
00013a  6949              LDR      r1,[r1,#0x14]
00013c  2201              MOVS     r2,#1
00013e  0512              LSLS     r2,r2,#20
000140  4391              BICS     r1,r1,r2
000142  4a0c              LDR      r2,|L2.372|
000144  6151              STR      r1,[r2,#0x14]
                  |L2.326|
;;;782                break;
000146  e011              B        |L2.364|
;;;783            case DRVPWM_CAP7:
;;;784                if (s_i32Option)
000148  490b              LDR      r1,|L2.376|
00014a  6809              LDR      r1,[r1,#0]  ; s_i32Option
00014c  2900              CMP      r1,#0
00014e  d006              BEQ      |L2.350|
;;;785                    outp32(&PWMB->CCR2, inp32(&PWMB->CCR2) & (CCR_MASK | BIT20));
000150  4908              LDR      r1,|L2.372|
000152  6949              LDR      r1,[r1,#0x14]
000154  4a0a              LDR      r2,|L2.384|
000156  4011              ANDS     r1,r1,r2
000158  4a06              LDR      r2,|L2.372|
00015a  6151              STR      r1,[r2,#0x14]
00015c  e005              B        |L2.362|
                  |L2.350|
;;;786                else
;;;787                    outp32(&PWMB->CCR2, inp32(&PWMB->CCR2) & ~BIT4);
00015e  4905              LDR      r1,|L2.372|
000160  6949              LDR      r1,[r1,#0x14]
000162  2210              MOVS     r2,#0x10
000164  4391              BICS     r1,r1,r2
000166  4a03              LDR      r2,|L2.372|
000168  6151              STR      r1,[r2,#0x14]
                  |L2.362|
;;;788                break;
00016a  bf00              NOP      
                  |L2.364|
00016c  bf00              NOP                            ;733
;;;789        }
;;;790    }
00016e  bd00              POP      {pc}
;;;791    
                          ENDP

                  |L2.368|
                          DCD      0x40040040
                  |L2.372|
                          DCD      0x40140040
                  |L2.376|
                          DCD      s_i32Option
                  |L2.380|
                          DCD      0x000f001f
                  |L2.384|
                          DCD      0x001f000f

                          AREA ||i.DrvPWM_Close||, CODE, READONLY, ALIGN=2

                  DrvPWM_Close PROC
;;;1077   /*---------------------------------------------------------------------------------------------------------*/
;;;1078   void DrvPWM_Close(void)
000000  b510              PUSH     {r4,lr}
;;;1079   {
;;;1080       outp32(&PWMA->POE, 0);
000002  2000              MOVS     r0,#0
000004  4912              LDR      r1,|L3.80|
000006  63c8              STR      r0,[r1,#0x3c]
;;;1081       PWMA->CAPENR = 0;
000008  6388              STR      r0,[r1,#0x38]
;;;1082   
;;;1083       outp32(&PWMB->POE, 0);
00000a  4912              LDR      r1,|L3.84|
00000c  63c8              STR      r0,[r1,#0x3c]
;;;1084       PWMB->CAPENR = 0;
00000e  6388              STR      r0,[r1,#0x38]
;;;1085   
;;;1086       NVIC_DisableIRQ(PWMA_IRQn);
000010  2006              MOVS     r0,#6
000012  f7fffffe          BL       NVIC_DisableIRQ
;;;1087       NVIC_DisableIRQ(PWMB_IRQn);
000016  2007              MOVS     r0,#7
000018  f7fffffe          BL       NVIC_DisableIRQ
;;;1088       
;;;1089       outp32(&SYS->IPRSTC2, inp32(&SYS->IPRSTC2) | 0x00300000);
00001c  2005              MOVS     r0,#5
00001e  0700              LSLS     r0,r0,#28
000020  68c0              LDR      r0,[r0,#0xc]
000022  2103              MOVS     r1,#3
000024  0509              LSLS     r1,r1,#20
000026  4308              ORRS     r0,r0,r1
000028  2105              MOVS     r1,#5
00002a  0709              LSLS     r1,r1,#28
00002c  60c8              STR      r0,[r1,#0xc]
;;;1090       outp32(&SYS->IPRSTC2, inp32(&SYS->IPRSTC2) & ~0x00300000);
00002e  4608              MOV      r0,r1
000030  68c0              LDR      r0,[r0,#0xc]
000032  2103              MOVS     r1,#3
000034  0509              LSLS     r1,r1,#20
000036  4388              BICS     r0,r0,r1
000038  2105              MOVS     r1,#5
00003a  0709              LSLS     r1,r1,#28
00003c  60c8              STR      r0,[r1,#0xc]
;;;1091   
;;;1092       outp32(&SYSCLK->APBCLK, inp32(&SYSCLK->APBCLK) & ~0x00F00000);
00003e  4806              LDR      r0,|L3.88|
000040  6880              LDR      r0,[r0,#8]
000042  210f              MOVS     r1,#0xf
000044  0509              LSLS     r1,r1,#20
000046  4388              BICS     r0,r0,r1
000048  4903              LDR      r1,|L3.88|
00004a  6088              STR      r0,[r1,#8]
;;;1093   }
00004c  bd10              POP      {r4,pc}
;;;1094   
                          ENDP

00004e  0000              DCW      0x0000
                  |L3.80|
                          DCD      0x40040040
                  |L3.84|
                          DCD      0x40140040
                  |L3.88|
                          DCD      0x50000200

                          AREA ||i.DrvPWM_DisableInt||, CODE, READONLY, ALIGN=2

                  DrvPWM_DisableInt PROC
;;;601    /*---------------------------------------------------------------------------------------------------------*/
;;;602    void DrvPWM_DisableInt(uint8_t u8Timer)
000000  b500              PUSH     {lr}
;;;603    {       
;;;604        switch(u8Timer)
000002  0003              MOVS     r3,r0
000004  f7fffffe          BL       __ARM_common_switch8
000008  180d1925          DCB      0x18,0x0d,0x19,0x25
00000c  313d4955          DCB      0x31,0x3d,0x49,0x55
000010  61181818          DCB      0x61,0x18,0x18,0x18
000014  18181818          DCB      0x18,0x18,0x18,0x18
000018  186d86a1          DCB      0x18,0x6d,0x86,0xa1
00001c  bad5f1ef          DCB      0xba,0xd5,0xf1,0xef
000020  ee18              DCB      0xee,0x18
;;;605        {   
;;;606            case DRVPWM_TIMER0:
;;;607                PWMA->PIER.PWMIE0 = 0;
000022  499a              LDR      r1,|L4.652|
000024  6809              LDR      r1,[r1,#0]
000026  0849              LSRS     r1,r1,#1
000028  0049              LSLS     r1,r1,#1
00002a  4a98              LDR      r2,|L4.652|
00002c  6011              STR      r1,[r2,#0]
;;;608                outp32(&PWMA->PIIR, BIT0);
00002e  2101              MOVS     r1,#1
000030  6051              STR      r1,[r2,#4]
;;;609                g_sDrvPWMAHandler.pfnPWM0CallBack = NULL;
000032  2100              MOVS     r1,#0
000034  4a96              LDR      r2,|L4.656|
000036  6011              STR      r1,[r2,#0]  ; g_sDrvPWMAHandler
;;;610                break;
000038  e126              B        |L4.648|
;;;611            case DRVPWM_TIMER1:
;;;612                PWMA->PIER.PWMIE1 = 0;
00003a  4994              LDR      r1,|L4.652|
00003c  6809              LDR      r1,[r1,#0]
00003e  2202              MOVS     r2,#2
000040  4391              BICS     r1,r1,r2
000042  4a92              LDR      r2,|L4.652|
000044  6011              STR      r1,[r2,#0]
;;;613                outp32(&PWMA->PIIR, BIT1);
000046  2102              MOVS     r1,#2
000048  6051              STR      r1,[r2,#4]
;;;614                g_sDrvPWMAHandler.pfnPWM1CallBack = NULL;
00004a  2100              MOVS     r1,#0
00004c  4a90              LDR      r2,|L4.656|
00004e  6091              STR      r1,[r2,#8]  ; g_sDrvPWMAHandler
;;;615                break;          
000050  e11a              B        |L4.648|
;;;616            case DRVPWM_TIMER2:
;;;617                PWMA->PIER.PWMIE2 = 0;
000052  498e              LDR      r1,|L4.652|
000054  6809              LDR      r1,[r1,#0]
000056  2204              MOVS     r2,#4
000058  4391              BICS     r1,r1,r2
00005a  4a8c              LDR      r2,|L4.652|
00005c  6011              STR      r1,[r2,#0]
;;;618                outp32(&PWMA->PIIR, BIT2);
00005e  2104              MOVS     r1,#4
000060  6051              STR      r1,[r2,#4]
;;;619                g_sDrvPWMAHandler.pfnPWM2CallBack = NULL;
000062  2100              MOVS     r1,#0
000064  4a8a              LDR      r2,|L4.656|
000066  6111              STR      r1,[r2,#0x10]  ; g_sDrvPWMAHandler
;;;620                break;      
000068  e10e              B        |L4.648|
;;;621            case DRVPWM_TIMER3:
;;;622                PWMA->PIER.PWMIE3 = 0;
00006a  4988              LDR      r1,|L4.652|
00006c  6809              LDR      r1,[r1,#0]
00006e  2208              MOVS     r2,#8
000070  4391              BICS     r1,r1,r2
000072  4a86              LDR      r2,|L4.652|
000074  6011              STR      r1,[r2,#0]
;;;623                outp32(&PWMA->PIIR, BIT3);
000076  2108              MOVS     r1,#8
000078  6051              STR      r1,[r2,#4]
;;;624                g_sDrvPWMAHandler.pfnPWM3CallBack = NULL;
00007a  2100              MOVS     r1,#0
00007c  4a84              LDR      r2,|L4.656|
00007e  6191              STR      r1,[r2,#0x18]  ; g_sDrvPWMAHandler
;;;625                break;
000080  e102              B        |L4.648|
;;;626            case DRVPWM_TIMER4:
;;;627                PWMB->PIER.PWMIE0 = 0;
000082  4984              LDR      r1,|L4.660|
000084  6809              LDR      r1,[r1,#0]
000086  0849              LSRS     r1,r1,#1
000088  0049              LSLS     r1,r1,#1
00008a  4a82              LDR      r2,|L4.660|
00008c  6011              STR      r1,[r2,#0]
;;;628                outp32(&PWMB->PIIR, BIT0);
00008e  2101              MOVS     r1,#1
000090  6051              STR      r1,[r2,#4]
;;;629                g_sDrvPWMBHandler.pfnPWM0CallBack = NULL;
000092  2100              MOVS     r1,#0
000094  4a80              LDR      r2,|L4.664|
000096  6011              STR      r1,[r2,#0]  ; g_sDrvPWMBHandler
;;;630                break;
000098  e0f6              B        |L4.648|
;;;631            case DRVPWM_TIMER5:
;;;632                PWMB->PIER.PWMIE1 = 0;
00009a  497e              LDR      r1,|L4.660|
00009c  6809              LDR      r1,[r1,#0]
00009e  2202              MOVS     r2,#2
0000a0  4391              BICS     r1,r1,r2
0000a2  4a7c              LDR      r2,|L4.660|
0000a4  6011              STR      r1,[r2,#0]
;;;633                outp32(&PWMB->PIIR, BIT1);
0000a6  2102              MOVS     r1,#2
0000a8  6051              STR      r1,[r2,#4]
;;;634                g_sDrvPWMBHandler.pfnPWM1CallBack = NULL;
0000aa  2100              MOVS     r1,#0
0000ac  4a7a              LDR      r2,|L4.664|
0000ae  6091              STR      r1,[r2,#8]  ; g_sDrvPWMBHandler
;;;635                break;          
0000b0  e0ea              B        |L4.648|
;;;636            case DRVPWM_TIMER6:
;;;637                PWMB->PIER.PWMIE2 = 0;
0000b2  4978              LDR      r1,|L4.660|
0000b4  6809              LDR      r1,[r1,#0]
0000b6  2204              MOVS     r2,#4
0000b8  4391              BICS     r1,r1,r2
0000ba  4a76              LDR      r2,|L4.660|
0000bc  6011              STR      r1,[r2,#0]
;;;638                outp32(&PWMB->PIIR, BIT2);
0000be  2104              MOVS     r1,#4
0000c0  6051              STR      r1,[r2,#4]
;;;639                g_sDrvPWMBHandler.pfnPWM2CallBack = NULL;
0000c2  2100              MOVS     r1,#0
0000c4  4a74              LDR      r2,|L4.664|
0000c6  6111              STR      r1,[r2,#0x10]  ; g_sDrvPWMBHandler
;;;640                break;      
0000c8  e0de              B        |L4.648|
;;;641            case DRVPWM_TIMER7:
;;;642                PWMB->PIER.PWMIE3 = 0;
0000ca  4972              LDR      r1,|L4.660|
0000cc  6809              LDR      r1,[r1,#0]
0000ce  2208              MOVS     r2,#8
0000d0  4391              BICS     r1,r1,r2
0000d2  4a70              LDR      r2,|L4.660|
0000d4  6011              STR      r1,[r2,#0]
;;;643                outp32(&PWMB->PIIR, BIT3);
0000d6  2108              MOVS     r1,#8
0000d8  6051              STR      r1,[r2,#4]
;;;644                g_sDrvPWMBHandler.pfnPWM3CallBack = NULL;
0000da  2100              MOVS     r1,#0
0000dc  4a6e              LDR      r2,|L4.664|
0000de  6191              STR      r1,[r2,#0x18]  ; g_sDrvPWMBHandler
;;;645                break;
0000e0  e0d2              B        |L4.648|
;;;646            case DRVPWM_CAP0:
;;;647                if (s_i32Option)
0000e2  496e              LDR      r1,|L4.668|
0000e4  6809              LDR      r1,[r1,#0]  ; s_i32Option
0000e6  2900              CMP      r1,#0
0000e8  d008              BEQ      |L4.252|
;;;648                    outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & CCR_MASK) & ~(BIT1 | BIT2));
0000ea  4968              LDR      r1,|L4.652|
0000ec  6909              LDR      r1,[r1,#0x10]
0000ee  4a6c              LDR      r2,|L4.672|
0000f0  4011              ANDS     r1,r1,r2
0000f2  2206              MOVS     r2,#6
0000f4  4391              BICS     r1,r1,r2
0000f6  4a65              LDR      r2,|L4.652|
0000f8  6111              STR      r1,[r2,#0x10]
0000fa  e007              B        |L4.268|
                  |L4.252|
;;;649                else
;;;650                    outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & ~(BIT4 | BIT20)) & ~(BIT1 | BIT2));   
0000fc  4963              LDR      r1,|L4.652|
0000fe  6909              LDR      r1,[r1,#0x10]
000100  4a68              LDR      r2,|L4.676|
000102  4011              ANDS     r1,r1,r2
000104  2206              MOVS     r2,#6
000106  4391              BICS     r1,r1,r2
000108  4a60              LDR      r2,|L4.652|
00010a  6111              STR      r1,[r2,#0x10]
                  |L4.268|
;;;651                g_sDrvPWMAHandler.pfnCAP0CallBack = NULL;   
00010c  2100              MOVS     r1,#0
00010e  4a60              LDR      r2,|L4.656|
000110  6051              STR      r1,[r2,#4]  ; g_sDrvPWMAHandler
;;;652                break;              
000112  e0b9              B        |L4.648|
;;;653            case DRVPWM_CAP1:
;;;654                if (s_i32Option)
000114  4961              LDR      r1,|L4.668|
000116  6809              LDR      r1,[r1,#0]  ; s_i32Option
000118  2900              CMP      r1,#0
00011a  d009              BEQ      |L4.304|
;;;655                    outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & CCR_MASK) & ~(BIT17 | BIT18));
00011c  495b              LDR      r1,|L4.652|
00011e  6909              LDR      r1,[r1,#0x10]
000120  4a5f              LDR      r2,|L4.672|
000122  4011              ANDS     r1,r1,r2
000124  2203              MOVS     r2,#3
000126  0452              LSLS     r2,r2,#17
000128  4391              BICS     r1,r1,r2
00012a  4a58              LDR      r2,|L4.652|
00012c  6111              STR      r1,[r2,#0x10]
00012e  e008              B        |L4.322|
                  |L4.304|
;;;656                else
;;;657                    outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & ~(BIT4 | BIT20)) & ~(BIT17 | BIT18));
000130  4956              LDR      r1,|L4.652|
000132  6909              LDR      r1,[r1,#0x10]
000134  4a5b              LDR      r2,|L4.676|
000136  4011              ANDS     r1,r1,r2
000138  2203              MOVS     r2,#3
00013a  0452              LSLS     r2,r2,#17
00013c  4391              BICS     r1,r1,r2
00013e  4a53              LDR      r2,|L4.652|
000140  6111              STR      r1,[r2,#0x10]
                  |L4.322|
;;;658                g_sDrvPWMAHandler.pfnCAP1CallBack = NULL;   
000142  2100              MOVS     r1,#0
000144  4a52              LDR      r2,|L4.656|
000146  60d1              STR      r1,[r2,#0xc]  ; g_sDrvPWMAHandler
;;;659                break;      
000148  e09e              B        |L4.648|
;;;660            case DRVPWM_CAP2:
;;;661                if (s_i32Option)
00014a  4954              LDR      r1,|L4.668|
00014c  6809              LDR      r1,[r1,#0]  ; s_i32Option
00014e  2900              CMP      r1,#0
000150  d008              BEQ      |L4.356|
;;;662                    outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & CCR_MASK) & ~(BIT1 | BIT2));
000152  494e              LDR      r1,|L4.652|
000154  6949              LDR      r1,[r1,#0x14]
000156  4a52              LDR      r2,|L4.672|
000158  4011              ANDS     r1,r1,r2
00015a  2206              MOVS     r2,#6
00015c  4391              BICS     r1,r1,r2
00015e  4a4b              LDR      r2,|L4.652|
000160  6151              STR      r1,[r2,#0x14]
000162  e007              B        |L4.372|
                  |L4.356|
;;;663                else
;;;664                    outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & ~(BIT4 | BIT20)) & ~(BIT1 | BIT2));
000164  4949              LDR      r1,|L4.652|
000166  6949              LDR      r1,[r1,#0x14]
000168  4a4e              LDR      r2,|L4.676|
00016a  4011              ANDS     r1,r1,r2
00016c  2206              MOVS     r2,#6
00016e  4391              BICS     r1,r1,r2
000170  4a46              LDR      r2,|L4.652|
000172  6151              STR      r1,[r2,#0x14]
                  |L4.372|
;;;665                g_sDrvPWMAHandler.pfnCAP2CallBack = NULL;   
000174  2100              MOVS     r1,#0
000176  4a46              LDR      r2,|L4.656|
000178  6151              STR      r1,[r2,#0x14]  ; g_sDrvPWMAHandler
;;;666                break;
00017a  e085              B        |L4.648|
;;;667            case DRVPWM_CAP3:
;;;668                if (s_i32Option)
00017c  4947              LDR      r1,|L4.668|
00017e  6809              LDR      r1,[r1,#0]  ; s_i32Option
000180  2900              CMP      r1,#0
000182  d009              BEQ      |L4.408|
;;;669                    outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & CCR_MASK) & ~(BIT17 | BIT18));
000184  4941              LDR      r1,|L4.652|
000186  6949              LDR      r1,[r1,#0x14]
000188  4a45              LDR      r2,|L4.672|
00018a  4011              ANDS     r1,r1,r2
00018c  2203              MOVS     r2,#3
00018e  0452              LSLS     r2,r2,#17
000190  4391              BICS     r1,r1,r2
000192  4a3e              LDR      r2,|L4.652|
000194  6151              STR      r1,[r2,#0x14]
000196  e008              B        |L4.426|
                  |L4.408|
;;;670                else
;;;671                    outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & ~(BIT4 | BIT20)) & ~(BIT17 | BIT18));
000198  493c              LDR      r1,|L4.652|
00019a  6949              LDR      r1,[r1,#0x14]
00019c  4a41              LDR      r2,|L4.676|
00019e  4011              ANDS     r1,r1,r2
0001a0  2203              MOVS     r2,#3
0001a2  0452              LSLS     r2,r2,#17
0001a4  4391              BICS     r1,r1,r2
0001a6  4a39              LDR      r2,|L4.652|
0001a8  6151              STR      r1,[r2,#0x14]
                  |L4.426|
;;;672                g_sDrvPWMAHandler.pfnCAP3CallBack = NULL;   
0001aa  2100              MOVS     r1,#0
0001ac  4a38              LDR      r2,|L4.656|
0001ae  61d1              STR      r1,[r2,#0x1c]  ; g_sDrvPWMAHandler
;;;673                break; 
0001b0  e06a              B        |L4.648|
;;;674            case DRVPWM_CAP4:   
;;;675                if (s_i32Option)
0001b2  493a              LDR      r1,|L4.668|
0001b4  6809              LDR      r1,[r1,#0]  ; s_i32Option
0001b6  2900              CMP      r1,#0
0001b8  d008              BEQ      |L4.460|
;;;676                    outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & CCR_MASK) & ~(BIT1 | BIT2));
0001ba  4936              LDR      r1,|L4.660|
0001bc  6909              LDR      r1,[r1,#0x10]
0001be  4a38              LDR      r2,|L4.672|
0001c0  4011              ANDS     r1,r1,r2
0001c2  2206              MOVS     r2,#6
0001c4  4391              BICS     r1,r1,r2
0001c6  4a33              LDR      r2,|L4.660|
0001c8  6111              STR      r1,[r2,#0x10]
0001ca  e007              B        |L4.476|
                  |L4.460|
;;;677                else
;;;678                    outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & ~(BIT4 | BIT20)) & ~(BIT1 | BIT2));   
0001cc  4931              LDR      r1,|L4.660|
0001ce  6909              LDR      r1,[r1,#0x10]
0001d0  4a34              LDR      r2,|L4.676|
0001d2  4011              ANDS     r1,r1,r2
0001d4  2206              MOVS     r2,#6
0001d6  4391              BICS     r1,r1,r2
0001d8  4a2e              LDR      r2,|L4.660|
0001da  6111              STR      r1,[r2,#0x10]
                  |L4.476|
;;;679    
;;;680                g_sDrvPWMBHandler.pfnCAP0CallBack = NULL;   
0001dc  2100              MOVS     r1,#0
0001de  4a2e              LDR      r2,|L4.664|
0001e0  6051              STR      r1,[r2,#4]  ; g_sDrvPWMBHandler
;;;681                break;              
0001e2  e051              B        |L4.648|
0001e4  e035              B        |L4.594|
0001e6  e01b              B        |L4.544|
0001e8  e7ff              B        |L4.490|
                  |L4.490|
;;;682            case DRVPWM_CAP5:
;;;683                if (s_i32Option)
0001ea  492c              LDR      r1,|L4.668|
0001ec  6809              LDR      r1,[r1,#0]  ; s_i32Option
0001ee  2900              CMP      r1,#0
0001f0  d009              BEQ      |L4.518|
;;;684                    outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & CCR_MASK) & ~(BIT17 | BIT18));
0001f2  4928              LDR      r1,|L4.660|
0001f4  6909              LDR      r1,[r1,#0x10]
0001f6  4a2a              LDR      r2,|L4.672|
0001f8  4011              ANDS     r1,r1,r2
0001fa  2203              MOVS     r2,#3
0001fc  0452              LSLS     r2,r2,#17
0001fe  4391              BICS     r1,r1,r2
000200  4a24              LDR      r2,|L4.660|
000202  6111              STR      r1,[r2,#0x10]
000204  e008              B        |L4.536|
                  |L4.518|
;;;685                else
;;;686                    outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & ~(BIT4 | BIT20)) & ~(BIT17 | BIT18));
000206  4923              LDR      r1,|L4.660|
000208  6909              LDR      r1,[r1,#0x10]
00020a  4a26              LDR      r2,|L4.676|
00020c  4011              ANDS     r1,r1,r2
00020e  2203              MOVS     r2,#3
000210  0452              LSLS     r2,r2,#17
000212  4391              BICS     r1,r1,r2
000214  4a1f              LDR      r2,|L4.660|
000216  6111              STR      r1,[r2,#0x10]
                  |L4.536|
;;;687    
;;;688                g_sDrvPWMBHandler.pfnCAP1CallBack = NULL;   
000218  2100              MOVS     r1,#0
00021a  4a1f              LDR      r2,|L4.664|
00021c  60d1              STR      r1,[r2,#0xc]  ; g_sDrvPWMBHandler
;;;689                break;      
00021e  e033              B        |L4.648|
                  |L4.544|
;;;690            case DRVPWM_CAP6:
;;;691                if (s_i32Option)
000220  491e              LDR      r1,|L4.668|
000222  6809              LDR      r1,[r1,#0]  ; s_i32Option
000224  2900              CMP      r1,#0
000226  d008              BEQ      |L4.570|
;;;692                    outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & CCR_MASK) & ~(BIT1 | BIT2));
000228  491a              LDR      r1,|L4.660|
00022a  6949              LDR      r1,[r1,#0x14]
00022c  4a1c              LDR      r2,|L4.672|
00022e  4011              ANDS     r1,r1,r2
000230  2206              MOVS     r2,#6
000232  4391              BICS     r1,r1,r2
000234  4a17              LDR      r2,|L4.660|
000236  6151              STR      r1,[r2,#0x14]
000238  e007              B        |L4.586|
                  |L4.570|
;;;693                else
;;;694                    outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & ~(BIT4 | BIT20)) & ~(BIT1 | BIT2));
00023a  4916              LDR      r1,|L4.660|
00023c  6949              LDR      r1,[r1,#0x14]
00023e  4a19              LDR      r2,|L4.676|
000240  4011              ANDS     r1,r1,r2
000242  2206              MOVS     r2,#6
000244  4391              BICS     r1,r1,r2
000246  4a13              LDR      r2,|L4.660|
000248  6151              STR      r1,[r2,#0x14]
                  |L4.586|
;;;695    
;;;696                g_sDrvPWMBHandler.pfnCAP2CallBack = NULL;   
00024a  2100              MOVS     r1,#0
00024c  4a12              LDR      r2,|L4.664|
00024e  6151              STR      r1,[r2,#0x14]  ; g_sDrvPWMBHandler
;;;697                break;
000250  e01a              B        |L4.648|
                  |L4.594|
;;;698            case DRVPWM_CAP7:
;;;699                if (s_i32Option)
000252  4912              LDR      r1,|L4.668|
000254  6809              LDR      r1,[r1,#0]  ; s_i32Option
000256  2900              CMP      r1,#0
000258  d009              BEQ      |L4.622|
;;;700                    outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & CCR_MASK) & ~(BIT17 | BIT18));
00025a  490e              LDR      r1,|L4.660|
00025c  6949              LDR      r1,[r1,#0x14]
00025e  4a10              LDR      r2,|L4.672|
000260  4011              ANDS     r1,r1,r2
000262  2203              MOVS     r2,#3
000264  0452              LSLS     r2,r2,#17
000266  4391              BICS     r1,r1,r2
000268  4a0a              LDR      r2,|L4.660|
00026a  6151              STR      r1,[r2,#0x14]
00026c  e008              B        |L4.640|
                  |L4.622|
;;;701                else
;;;702                    outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & ~(BIT4 | BIT20)) & ~(BIT17 | BIT18));
00026e  4909              LDR      r1,|L4.660|
000270  6949              LDR      r1,[r1,#0x14]
000272  4a0c              LDR      r2,|L4.676|
000274  4011              ANDS     r1,r1,r2
000276  2203              MOVS     r2,#3
000278  0452              LSLS     r2,r2,#17
00027a  4391              BICS     r1,r1,r2
00027c  4a05              LDR      r2,|L4.660|
00027e  6151              STR      r1,[r2,#0x14]
                  |L4.640|
;;;703    
;;;704                g_sDrvPWMBHandler.pfnCAP3CallBack = NULL;   
000280  2100              MOVS     r1,#0
000282  4a05              LDR      r2,|L4.664|
000284  61d1              STR      r1,[r2,#0x1c]  ; g_sDrvPWMBHandler
;;;705                break; 
000286  bf00              NOP      
                  |L4.648|
000288  bf00              NOP                            ;610
;;;706        }
;;;707    }
00028a  bd00              POP      {pc}
;;;708    
                          ENDP

                  |L4.652|
                          DCD      0x40040040
                  |L4.656|
                          DCD      g_sDrvPWMAHandler
                  |L4.660|
                          DCD      0x40140040
                  |L4.664|
                          DCD      g_sDrvPWMBHandler
                  |L4.668|
                          DCD      s_i32Option
                  |L4.672|
                          DCD      0x000f000f
                  |L4.676|
                          DCD      0xffefffef

                          AREA ||i.DrvPWM_Enable||, CODE, READONLY, ALIGN=2

                  DrvPWM_Enable PROC
;;;1152   /*---------------------------------------------------------------------------------------------------------*/
;;;1153   void DrvPWM_Enable(uint8_t u8Timer, int32_t i32Enable)
000000  b510              PUSH     {r4,lr}
;;;1154   {
;;;1155       switch (u8Timer & 0x07)
000002  0742              LSLS     r2,r0,#29
000004  0f52              LSRS     r2,r2,#29
000006  0013              MOVS     r3,r2
000008  f7fffffe          BL       __ARM_common_switch8
00000c  08050607          DCB      0x08,0x05,0x06,0x07
000010  081b1c1d          DCB      0x08,0x1b,0x1c,0x1d
000014  1e35              DCB      0x1e,0x35
;;;1156       {
;;;1157           case DRVPWM_TIMER0:
;;;1158           case DRVPWM_TIMER1:
000016  bf00              NOP      
;;;1159           case DRVPWM_TIMER2:
000018  bf00              NOP      
;;;1160           case DRVPWM_TIMER3:
00001a  bf00              NOP      
;;;1161               outp32(&PWMA->PCR, (inp32(&PWMA->PCR) & ~(1 << ((u8Timer & 0x07) << 3) )) | (i32Enable?(1 << ((u8Timer & 0x07) << 3) ):0) );
00001c  4a8a              LDR      r2,|L5.584|
00001e  6892              LDR      r2,[r2,#8]
000020  0743              LSLS     r3,r0,#29
000022  0e9c              LSRS     r4,r3,#26
000024  2301              MOVS     r3,#1
000026  40a3              LSLS     r3,r3,r4
000028  439a              BICS     r2,r2,r3
00002a  2900              CMP      r1,#0
00002c  d004              BEQ      |L5.56|
00002e  0743              LSLS     r3,r0,#29
000030  0e9c              LSRS     r4,r3,#26
000032  2301              MOVS     r3,#1
000034  40a3              LSLS     r3,r3,r4
000036  e000              B        |L5.58|
                  |L5.56|
000038  2300              MOVS     r3,#0
                  |L5.58|
00003a  431a              ORRS     r2,r2,r3
00003c  4b82              LDR      r3,|L5.584|
00003e  609a              STR      r2,[r3,#8]
;;;1162               break;
000040  e019              B        |L5.118|
;;;1163           case DRVPWM_TIMER4:
;;;1164           case DRVPWM_TIMER5:
000042  bf00              NOP      
;;;1165           case DRVPWM_TIMER6:
000044  bf00              NOP      
;;;1166           case DRVPWM_TIMER7:
000046  bf00              NOP      
;;;1167               outp32(&PWMB->PCR, (inp32(&PWMB->PCR) & ~(1 << (((u8Timer & 0x07)-DRVPWM_TIMER4)<< 3) )) | (i32Enable?(1 << (((u8Timer & 0x07)-DRVPWM_TIMER4) << 3) ):0) );
000048  4a80              LDR      r2,|L5.588|
00004a  6892              LDR      r2,[r2,#8]
00004c  0743              LSLS     r3,r0,#29
00004e  0f5b              LSRS     r3,r3,#29
000050  1f1b              SUBS     r3,r3,#4
000052  00dc              LSLS     r4,r3,#3
000054  2301              MOVS     r3,#1
000056  40a3              LSLS     r3,r3,r4
000058  439a              BICS     r2,r2,r3
00005a  2900              CMP      r1,#0
00005c  d006              BEQ      |L5.108|
00005e  0743              LSLS     r3,r0,#29
000060  0f5b              LSRS     r3,r3,#29
000062  1f1b              SUBS     r3,r3,#4
000064  00dc              LSLS     r4,r3,#3
000066  2301              MOVS     r3,#1
000068  40a3              LSLS     r3,r3,r4
00006a  e000              B        |L5.110|
                  |L5.108|
00006c  2300              MOVS     r3,#0
                  |L5.110|
00006e  431a              ORRS     r2,r2,r3
000070  4b76              LDR      r3,|L5.588|
000072  609a              STR      r2,[r3,#8]
;;;1168               break;
000074  bf00              NOP      
                  |L5.118|
000076  bf00              NOP                            ;1162
;;;1169       }   
;;;1170   
;;;1171       if (u8Timer & 0x10)
000078  2210              MOVS     r2,#0x10
00007a  4210              TST      r0,r2
00007c  d074              BEQ      |L5.360|
;;;1172       {
;;;1173           switch (u8Timer)
00007e  1a82              SUBS     r2,r0,r2
000080  0013              MOVS     r3,r2
000082  f7fffffe          BL       __ARM_common_switch8
000086  0805              DCB      0x08,0x05
000088  1f3b5572          DCB      0x1f,0x3b,0x55,0x72
00008c  8ca8c2de          DCB      0x8c,0xa8,0xc2,0xde
;;;1174           {
;;;1175               case DRVPWM_CAP0:
;;;1176                   if (s_i32Option)
000090  4a6f              LDR      r2,|L5.592|
000092  6812              LDR      r2,[r2,#0]  ; s_i32Option
000094  2a00              CMP      r2,#0
000096  d00a              BEQ      |L5.174|
;;;1177                       outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & CCR_MASK) | BIT3);
000098  4a6b              LDR      r2,|L5.584|
00009a  3240              ADDS     r2,r2,#0x40
00009c  6912              LDR      r2,[r2,#0x10]
00009e  4b6d              LDR      r3,|L5.596|
0000a0  401a              ANDS     r2,r2,r3
0000a2  2308              MOVS     r3,#8
0000a4  431a              ORRS     r2,r2,r3
0000a6  4b68              LDR      r3,|L5.584|
0000a8  3340              ADDS     r3,r3,#0x40
0000aa  611a              STR      r2,[r3,#0x10]
0000ac  e009              B        |L5.194|
                  |L5.174|
;;;1178                   else
;;;1179                       outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & ~(BIT4 | BIT20)) | BIT3); 
0000ae  4a66              LDR      r2,|L5.584|
0000b0  3240              ADDS     r2,r2,#0x40
0000b2  6912              LDR      r2,[r2,#0x10]
0000b4  4b68              LDR      r3,|L5.600|
0000b6  401a              ANDS     r2,r2,r3
0000b8  2308              MOVS     r3,#8
0000ba  431a              ORRS     r2,r2,r3
0000bc  4b62              LDR      r3,|L5.584|
0000be  3340              ADDS     r3,r3,#0x40
0000c0  611a              STR      r2,[r3,#0x10]
                  |L5.194|
;;;1180                   break;
0000c2  e0be              B        |L5.578|
;;;1181               case DRVPWM_CAP1:
;;;1182                   if (s_i32Option)
0000c4  4a62              LDR      r2,|L5.592|
0000c6  6812              LDR      r2,[r2,#0]  ; s_i32Option
0000c8  2a00              CMP      r2,#0
0000ca  d00b              BEQ      |L5.228|
;;;1183                       outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & CCR_MASK) | BIT19);
0000cc  4a5e              LDR      r2,|L5.584|
0000ce  3240              ADDS     r2,r2,#0x40
0000d0  6912              LDR      r2,[r2,#0x10]
0000d2  4b60              LDR      r3,|L5.596|
0000d4  401a              ANDS     r2,r2,r3
0000d6  2301              MOVS     r3,#1
0000d8  04db              LSLS     r3,r3,#19
0000da  431a              ORRS     r2,r2,r3
0000dc  4b5a              LDR      r3,|L5.584|
0000de  3340              ADDS     r3,r3,#0x40
0000e0  611a              STR      r2,[r3,#0x10]
0000e2  e00a              B        |L5.250|
                  |L5.228|
;;;1184                   else
;;;1185                       outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & ~(BIT4 | BIT20)) | BIT19);    
0000e4  4a58              LDR      r2,|L5.584|
0000e6  3240              ADDS     r2,r2,#0x40
0000e8  6912              LDR      r2,[r2,#0x10]
0000ea  4b5b              LDR      r3,|L5.600|
0000ec  401a              ANDS     r2,r2,r3
0000ee  2301              MOVS     r3,#1
0000f0  04db              LSLS     r3,r3,#19
0000f2  431a              ORRS     r2,r2,r3
0000f4  4b54              LDR      r3,|L5.584|
0000f6  3340              ADDS     r3,r3,#0x40
0000f8  611a              STR      r2,[r3,#0x10]
                  |L5.250|
;;;1186                   break;
0000fa  e0a2              B        |L5.578|
;;;1187               case DRVPWM_CAP2:
;;;1188                   if (s_i32Option)
0000fc  4a54              LDR      r2,|L5.592|
0000fe  6812              LDR      r2,[r2,#0]  ; s_i32Option
000100  2a00              CMP      r2,#0
000102  d00a              BEQ      |L5.282|
;;;1189                       outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & CCR_MASK) | BIT3);
000104  4a50              LDR      r2,|L5.584|
000106  3240              ADDS     r2,r2,#0x40
000108  6952              LDR      r2,[r2,#0x14]
00010a  4b52              LDR      r3,|L5.596|
00010c  401a              ANDS     r2,r2,r3
00010e  2308              MOVS     r3,#8
000110  431a              ORRS     r2,r2,r3
000112  4b4d              LDR      r3,|L5.584|
000114  3340              ADDS     r3,r3,#0x40
000116  615a              STR      r2,[r3,#0x14]
000118  e009              B        |L5.302|
                  |L5.282|
;;;1190                   else
;;;1191                       outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & ~(BIT4 | BIT20)) | BIT3);     
00011a  4a4b              LDR      r2,|L5.584|
00011c  3240              ADDS     r2,r2,#0x40
00011e  6952              LDR      r2,[r2,#0x14]
000120  4b4d              LDR      r3,|L5.600|
000122  401a              ANDS     r2,r2,r3
000124  2308              MOVS     r3,#8
000126  431a              ORRS     r2,r2,r3
000128  4b47              LDR      r3,|L5.584|
00012a  3340              ADDS     r3,r3,#0x40
00012c  615a              STR      r2,[r3,#0x14]
                  |L5.302|
;;;1192                   break;                                                                    
00012e  e088              B        |L5.578|
;;;1193               case DRVPWM_CAP3:
;;;1194                   if (s_i32Option)
000130  4a47              LDR      r2,|L5.592|
000132  6812              LDR      r2,[r2,#0]  ; s_i32Option
000134  2a00              CMP      r2,#0
000136  d00b              BEQ      |L5.336|
;;;1195                       outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & CCR_MASK) | BIT19);
000138  4a43              LDR      r2,|L5.584|
00013a  3240              ADDS     r2,r2,#0x40
00013c  6952              LDR      r2,[r2,#0x14]
00013e  4b45              LDR      r3,|L5.596|
000140  401a              ANDS     r2,r2,r3
000142  2301              MOVS     r3,#1
000144  04db              LSLS     r3,r3,#19
000146  431a              ORRS     r2,r2,r3
000148  4b3f              LDR      r3,|L5.584|
00014a  3340              ADDS     r3,r3,#0x40
00014c  615a              STR      r2,[r3,#0x14]
00014e  e00a              B        |L5.358|
                  |L5.336|
;;;1196                   else
;;;1197                       outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & ~(BIT4 | BIT20)) | BIT19);
000150  4a3d              LDR      r2,|L5.584|
000152  3240              ADDS     r2,r2,#0x40
000154  6952              LDR      r2,[r2,#0x14]
000156  4b40              LDR      r3,|L5.600|
000158  401a              ANDS     r2,r2,r3
00015a  2301              MOVS     r3,#1
00015c  04db              LSLS     r3,r3,#19
00015e  431a              ORRS     r2,r2,r3
000160  4b39              LDR      r3,|L5.584|
000162  3340              ADDS     r3,r3,#0x40
000164  615a              STR      r2,[r3,#0x14]
                  |L5.358|
;;;1198                   break;
000166  e06c              B        |L5.578|
                  |L5.360|
000168  e06c              B        |L5.580|
;;;1199               case DRVPWM_CAP4:
;;;1200                   if (s_i32Option)
00016a  4a39              LDR      r2,|L5.592|
00016c  6812              LDR      r2,[r2,#0]  ; s_i32Option
00016e  2a00              CMP      r2,#0
000170  d00a              BEQ      |L5.392|
;;;1201                       outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & CCR_MASK) | BIT3);
000172  4a36              LDR      r2,|L5.588|
000174  3240              ADDS     r2,r2,#0x40
000176  6912              LDR      r2,[r2,#0x10]
000178  4b36              LDR      r3,|L5.596|
00017a  401a              ANDS     r2,r2,r3
00017c  2308              MOVS     r3,#8
00017e  431a              ORRS     r2,r2,r3
000180  4b32              LDR      r3,|L5.588|
000182  3340              ADDS     r3,r3,#0x40
000184  611a              STR      r2,[r3,#0x10]
000186  e009              B        |L5.412|
                  |L5.392|
;;;1202                   else
;;;1203                       outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & ~(BIT4 | BIT20)) | BIT3); 
000188  4a30              LDR      r2,|L5.588|
00018a  3240              ADDS     r2,r2,#0x40
00018c  6912              LDR      r2,[r2,#0x10]
00018e  4b32              LDR      r3,|L5.600|
000190  401a              ANDS     r2,r2,r3
000192  2308              MOVS     r3,#8
000194  431a              ORRS     r2,r2,r3
000196  4b2d              LDR      r3,|L5.588|
000198  3340              ADDS     r3,r3,#0x40
00019a  611a              STR      r2,[r3,#0x10]
                  |L5.412|
;;;1204                   break;
00019c  e051              B        |L5.578|
;;;1205               case DRVPWM_CAP5:
;;;1206                   if (s_i32Option)
00019e  4a2c              LDR      r2,|L5.592|
0001a0  6812              LDR      r2,[r2,#0]  ; s_i32Option
0001a2  2a00              CMP      r2,#0
0001a4  d00b              BEQ      |L5.446|
;;;1207                       outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & CCR_MASK) | BIT19);
0001a6  4a29              LDR      r2,|L5.588|
0001a8  3240              ADDS     r2,r2,#0x40
0001aa  6912              LDR      r2,[r2,#0x10]
0001ac  4b29              LDR      r3,|L5.596|
0001ae  401a              ANDS     r2,r2,r3
0001b0  2301              MOVS     r3,#1
0001b2  04db              LSLS     r3,r3,#19
0001b4  431a              ORRS     r2,r2,r3
0001b6  4b25              LDR      r3,|L5.588|
0001b8  3340              ADDS     r3,r3,#0x40
0001ba  611a              STR      r2,[r3,#0x10]
0001bc  e00a              B        |L5.468|
                  |L5.446|
;;;1208                   else
;;;1209                       outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & ~(BIT4 | BIT20)) | BIT19);    
0001be  4a23              LDR      r2,|L5.588|
0001c0  3240              ADDS     r2,r2,#0x40
0001c2  6912              LDR      r2,[r2,#0x10]
0001c4  4b24              LDR      r3,|L5.600|
0001c6  401a              ANDS     r2,r2,r3
0001c8  2301              MOVS     r3,#1
0001ca  04db              LSLS     r3,r3,#19
0001cc  431a              ORRS     r2,r2,r3
0001ce  4b1f              LDR      r3,|L5.588|
0001d0  3340              ADDS     r3,r3,#0x40
0001d2  611a              STR      r2,[r3,#0x10]
                  |L5.468|
;;;1210                   break;
0001d4  e035              B        |L5.578|
;;;1211               case DRVPWM_CAP6:
;;;1212                   if (s_i32Option)
0001d6  4a1e              LDR      r2,|L5.592|
0001d8  6812              LDR      r2,[r2,#0]  ; s_i32Option
0001da  2a00              CMP      r2,#0
0001dc  d00a              BEQ      |L5.500|
;;;1213                       outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & CCR_MASK) | BIT3);
0001de  4a1b              LDR      r2,|L5.588|
0001e0  3240              ADDS     r2,r2,#0x40
0001e2  6952              LDR      r2,[r2,#0x14]
0001e4  4b1b              LDR      r3,|L5.596|
0001e6  401a              ANDS     r2,r2,r3
0001e8  2308              MOVS     r3,#8
0001ea  431a              ORRS     r2,r2,r3
0001ec  4b17              LDR      r3,|L5.588|
0001ee  3340              ADDS     r3,r3,#0x40
0001f0  615a              STR      r2,[r3,#0x14]
0001f2  e009              B        |L5.520|
                  |L5.500|
;;;1214                   else
;;;1215                       outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & ~(BIT4 | BIT20)) | BIT3);     
0001f4  4a15              LDR      r2,|L5.588|
0001f6  3240              ADDS     r2,r2,#0x40
0001f8  6952              LDR      r2,[r2,#0x14]
0001fa  4b17              LDR      r3,|L5.600|
0001fc  401a              ANDS     r2,r2,r3
0001fe  2308              MOVS     r3,#8
000200  431a              ORRS     r2,r2,r3
000202  4b12              LDR      r3,|L5.588|
000204  3340              ADDS     r3,r3,#0x40
000206  615a              STR      r2,[r3,#0x14]
                  |L5.520|
;;;1216                   break;                                                                    
000208  e01b              B        |L5.578|
;;;1217               case DRVPWM_CAP7:
;;;1218                   if (s_i32Option)
00020a  4a11              LDR      r2,|L5.592|
00020c  6812              LDR      r2,[r2,#0]  ; s_i32Option
00020e  2a00              CMP      r2,#0
000210  d00b              BEQ      |L5.554|
;;;1219                       outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & CCR_MASK) | BIT19);
000212  4a0e              LDR      r2,|L5.588|
000214  3240              ADDS     r2,r2,#0x40
000216  6952              LDR      r2,[r2,#0x14]
000218  4b0e              LDR      r3,|L5.596|
00021a  401a              ANDS     r2,r2,r3
00021c  2301              MOVS     r3,#1
00021e  04db              LSLS     r3,r3,#19
000220  431a              ORRS     r2,r2,r3
000222  4b0a              LDR      r3,|L5.588|
000224  3340              ADDS     r3,r3,#0x40
000226  615a              STR      r2,[r3,#0x14]
000228  e00a              B        |L5.576|
                  |L5.554|
;;;1220                   else
;;;1221                       outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & ~(BIT4 | BIT20)) | BIT19);
00022a  4a08              LDR      r2,|L5.588|
00022c  3240              ADDS     r2,r2,#0x40
00022e  6952              LDR      r2,[r2,#0x14]
000230  4b09              LDR      r3,|L5.600|
000232  401a              ANDS     r2,r2,r3
000234  2301              MOVS     r3,#1
000236  04db              LSLS     r3,r3,#19
000238  431a              ORRS     r2,r2,r3
00023a  4b04              LDR      r3,|L5.588|
00023c  3340              ADDS     r3,r3,#0x40
00023e  615a              STR      r2,[r3,#0x14]
                  |L5.576|
;;;1222                   break;  
000240  bf00              NOP      
                  |L5.578|
000242  bf00              NOP                            ;1180
                  |L5.580|
;;;1223           }
;;;1224       }
;;;1225   }
000244  bd10              POP      {r4,pc}
;;;1226   
                          ENDP

000246  0000              DCW      0x0000
                  |L5.584|
                          DCD      0x40040000
                  |L5.588|
                          DCD      0x40140000
                  |L5.592|
                          DCD      s_i32Option
                  |L5.596|
                          DCD      0x000f000f
                  |L5.600|
                          DCD      0xffefffef

                          AREA ||i.DrvPWM_EnableDeadZone||, CODE, READONLY, ALIGN=2

                  DrvPWM_EnableDeadZone PROC
;;;1109   /*---------------------------------------------------------------------------------------------------------*/
;;;1110   void DrvPWM_EnableDeadZone(uint8_t u8Timer, uint8_t u8Length, int32_t i32EnableDeadZone)
000000  b530              PUSH     {r4,r5,lr}
;;;1111   {
;;;1112       switch (u8Timer & 0x07)
000002  0744              LSLS     r4,r0,#29
000004  0f64              LSRS     r4,r4,#29
000006  0023              MOVS     r3,r4
000008  f7fffffe          BL       __ARM_common_switch8
00000c  0805061d          DCB      0x08,0x05,0x06,0x1d
000010  1e33344b          DCB      0x1e,0x33,0x34,0x4b
000014  4c61              DCB      0x4c,0x61
;;;1113       {
;;;1114           case DRVPWM_TIMER0:
;;;1115           case DRVPWM_TIMER1:
000016  bf00              NOP      
;;;1116               PWMA->PPR.DZI01  = u8Length;
000018  4b2e              LDR      r3,|L6.212|
00001a  681b              LDR      r3,[r3,#0]
00001c  24ff              MOVS     r4,#0xff
00001e  0424              LSLS     r4,r4,#16
000020  43a3              BICS     r3,r3,r4
000022  040c              LSLS     r4,r1,#16
000024  25ff              MOVS     r5,#0xff
000026  042d              LSLS     r5,r5,#16
000028  402c              ANDS     r4,r4,r5
00002a  4323              ORRS     r3,r3,r4
00002c  4c29              LDR      r4,|L6.212|
00002e  6023              STR      r3,[r4,#0]
;;;1117               PWMA->PCR.DZEN01 = i32EnableDeadZone;
000030  4623              MOV      r3,r4
000032  689b              LDR      r3,[r3,#8]
000034  2410              MOVS     r4,#0x10
000036  43a3              BICS     r3,r3,r4
000038  0114              LSLS     r4,r2,#4
00003a  2510              MOVS     r5,#0x10
00003c  402c              ANDS     r4,r4,r5
00003e  4323              ORRS     r3,r3,r4
000040  4c24              LDR      r4,|L6.212|
000042  60a3              STR      r3,[r4,#8]
;;;1118               break;
000044  e043              B        |L6.206|
;;;1119           case DRVPWM_TIMER2:
;;;1120           case DRVPWM_TIMER3:
000046  bf00              NOP      
;;;1121               PWMA->PPR.DZI23  = u8Length;
000048  4b22              LDR      r3,|L6.212|
00004a  681b              LDR      r3,[r3,#0]
00004c  021b              LSLS     r3,r3,#8
00004e  0a1b              LSRS     r3,r3,#8
000050  060c              LSLS     r4,r1,#24
000052  0e24              LSRS     r4,r4,#24
000054  0624              LSLS     r4,r4,#24
000056  4323              ORRS     r3,r3,r4
000058  4c1e              LDR      r4,|L6.212|
00005a  6023              STR      r3,[r4,#0]
;;;1122               PWMA->PCR.DZEN23 = i32EnableDeadZone;
00005c  4623              MOV      r3,r4
00005e  689b              LDR      r3,[r3,#8]
000060  2420              MOVS     r4,#0x20
000062  43a3              BICS     r3,r3,r4
000064  0154              LSLS     r4,r2,#5
000066  2520              MOVS     r5,#0x20
000068  402c              ANDS     r4,r4,r5
00006a  4323              ORRS     r3,r3,r4
00006c  4c19              LDR      r4,|L6.212|
00006e  60a3              STR      r3,[r4,#8]
;;;1123               break;
000070  e02d              B        |L6.206|
;;;1124           case DRVPWM_TIMER4:
;;;1125           case DRVPWM_TIMER5:
000072  bf00              NOP      
;;;1126               PWMB->PPR.DZI01  = u8Length;
000074  4b18              LDR      r3,|L6.216|
000076  681b              LDR      r3,[r3,#0]
000078  24ff              MOVS     r4,#0xff
00007a  0424              LSLS     r4,r4,#16
00007c  43a3              BICS     r3,r3,r4
00007e  040c              LSLS     r4,r1,#16
000080  25ff              MOVS     r5,#0xff
000082  042d              LSLS     r5,r5,#16
000084  402c              ANDS     r4,r4,r5
000086  4323              ORRS     r3,r3,r4
000088  4c13              LDR      r4,|L6.216|
00008a  6023              STR      r3,[r4,#0]
;;;1127               PWMB->PCR.DZEN01 = i32EnableDeadZone;
00008c  4623              MOV      r3,r4
00008e  689b              LDR      r3,[r3,#8]
000090  2410              MOVS     r4,#0x10
000092  43a3              BICS     r3,r3,r4
000094  0114              LSLS     r4,r2,#4
000096  2510              MOVS     r5,#0x10
000098  402c              ANDS     r4,r4,r5
00009a  4323              ORRS     r3,r3,r4
00009c  4c0e              LDR      r4,|L6.216|
00009e  60a3              STR      r3,[r4,#8]
;;;1128               break;
0000a0  e015              B        |L6.206|
;;;1129           case DRVPWM_TIMER6:
;;;1130           case DRVPWM_TIMER7:
0000a2  bf00              NOP      
;;;1131               PWMB->PPR.DZI23  = u8Length;
0000a4  4b0c              LDR      r3,|L6.216|
0000a6  681b              LDR      r3,[r3,#0]
0000a8  021b              LSLS     r3,r3,#8
0000aa  0a1b              LSRS     r3,r3,#8
0000ac  060c              LSLS     r4,r1,#24
0000ae  0e24              LSRS     r4,r4,#24
0000b0  0624              LSLS     r4,r4,#24
0000b2  4323              ORRS     r3,r3,r4
0000b4  4c08              LDR      r4,|L6.216|
0000b6  6023              STR      r3,[r4,#0]
;;;1132               PWMB->PCR.DZEN23 = i32EnableDeadZone;
0000b8  4623              MOV      r3,r4
0000ba  689b              LDR      r3,[r3,#8]
0000bc  2420              MOVS     r4,#0x20
0000be  43a3              BICS     r3,r3,r4
0000c0  0154              LSLS     r4,r2,#5
0000c2  2520              MOVS     r5,#0x20
0000c4  402c              ANDS     r4,r4,r5
0000c6  4323              ORRS     r3,r3,r4
0000c8  4c03              LDR      r4,|L6.216|
0000ca  60a3              STR      r3,[r4,#8]
;;;1133               break;
0000cc  bf00              NOP      
                  |L6.206|
0000ce  bf00              NOP                            ;1118
;;;1134       }   
;;;1135   }
0000d0  bd30              POP      {r4,r5,pc}
;;;1136   
                          ENDP

0000d2  0000              DCW      0x0000
                  |L6.212|
                          DCD      0x40040000
                  |L6.216|
                          DCD      0x40140000

                          AREA ||i.DrvPWM_EnableInt||, CODE, READONLY, ALIGN=2

                  DrvPWM_EnableInt PROC
;;;391    /*---------------------------------------------------------------------------------------------------------*/
;;;392    void DrvPWM_EnableInt(uint8_t u8Timer, uint8_t u8Int, PFN_DRVPWM_CALLBACK pfncallback)
000000  b5f7              PUSH     {r0-r2,r4-r7,lr}
;;;393    {
000002  4607              MOV      r7,r0
000004  4614              MOV      r4,r2
;;;394        int32_t Rflag, Fflag;   
;;;395    
;;;396        Rflag = u8Int & 0x01;
000006  9801              LDR      r0,[sp,#4]
000008  07c5              LSLS     r5,r0,#31
00000a  0fed              LSRS     r5,r5,#31
;;;397        Fflag = u8Int & 0x02;
00000c  2102              MOVS     r1,#2
00000e  9801              LDR      r0,[sp,#4]
000010  4008              ANDS     r0,r0,r1
000012  4606              MOV      r6,r0
;;;398            
;;;399        switch (u8Timer)
000014  003b              MOVS     r3,r7
000016  f7fffffe          BL       __ARM_common_switch8
00001a  180d              DCB      0x18,0x0d
00001c  4887c2fc          DCB      0x48,0x87,0xc2,0xfc
000020  fbfaf916          DCB      0xfb,0xfa,0xf9,0x16
000024  16161616          DCB      0x16,0x16,0x16,0x16
000028  16161617          DCB      0x16,0x16,0x16,0x17
00002c  5291ccf8          DCB      0x52,0x91,0xcc,0xf8
000030  f7f6f516          DCB      0xf7,0xf6,0xf5,0x16
;;;400        {   
;;;401            case DRVPWM_TIMER0:
;;;402                PWMA->PIER.PWMIE0 = 1;
000034  48fd              LDR      r0,|L7.1068|
000036  6800              LDR      r0,[r0,#0]
000038  0840              LSRS     r0,r0,#1
00003a  0040              LSLS     r0,r0,#1
00003c  1c40              ADDS     r0,r0,#1
00003e  49fb              LDR      r1,|L7.1068|
000040  6008              STR      r0,[r1,#0]
;;;403                g_sDrvPWMAHandler.pfnPWM0CallBack = pfncallback;
000042  48fb              LDR      r0,|L7.1072|
000044  6004              STR      r4,[r0,#0]  ; g_sDrvPWMAHandler
;;;404                break;
000046  e1e5              B        |L7.1044|
;;;405            case DRVPWM_CAP0:           
;;;406                if (Rflag)
000048  2d00              CMP      r5,#0
00004a  d014              BEQ      |L7.118|
;;;407                {
;;;408                    if (s_i32Option)
00004c  48f9              LDR      r0,|L7.1076|
00004e  6800              LDR      r0,[r0,#0]  ; s_i32Option
000050  2800              CMP      r0,#0
000052  d008              BEQ      |L7.102|
;;;409                        outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & CCR_MASK) | BIT1);
000054  48f5              LDR      r0,|L7.1068|
000056  6900              LDR      r0,[r0,#0x10]
000058  49f7              LDR      r1,|L7.1080|
00005a  4008              ANDS     r0,r0,r1
00005c  2102              MOVS     r1,#2
00005e  4308              ORRS     r0,r0,r1
000060  49f2              LDR      r1,|L7.1068|
000062  6108              STR      r0,[r1,#0x10]
000064  e007              B        |L7.118|
                  |L7.102|
;;;410                    else
;;;411                        outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & ~(BIT4 | BIT20)) | BIT1); 
000066  48f1              LDR      r0,|L7.1068|
000068  6900              LDR      r0,[r0,#0x10]
00006a  49f4              LDR      r1,|L7.1084|
00006c  4008              ANDS     r0,r0,r1
00006e  2102              MOVS     r1,#2
000070  4308              ORRS     r0,r0,r1
000072  49ee              LDR      r1,|L7.1068|
000074  6108              STR      r0,[r1,#0x10]
                  |L7.118|
;;;412                }
;;;413                if (Fflag)
000076  2e00              CMP      r6,#0
000078  d014              BEQ      |L7.164|
;;;414                {
;;;415                    if (s_i32Option)
00007a  48ee              LDR      r0,|L7.1076|
00007c  6800              LDR      r0,[r0,#0]  ; s_i32Option
00007e  2800              CMP      r0,#0
000080  d008              BEQ      |L7.148|
;;;416                        outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & CCR_MASK) | BIT2);
000082  48ea              LDR      r0,|L7.1068|
000084  6900              LDR      r0,[r0,#0x10]
000086  49ec              LDR      r1,|L7.1080|
000088  4008              ANDS     r0,r0,r1
00008a  2104              MOVS     r1,#4
00008c  4308              ORRS     r0,r0,r1
00008e  49e7              LDR      r1,|L7.1068|
000090  6108              STR      r0,[r1,#0x10]
000092  e007              B        |L7.164|
                  |L7.148|
;;;417                    else
;;;418                        outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & ~(BIT4 | BIT20)) | BIT2);
000094  48e5              LDR      r0,|L7.1068|
000096  6900              LDR      r0,[r0,#0x10]
000098  49e8              LDR      r1,|L7.1084|
00009a  4008              ANDS     r0,r0,r1
00009c  2104              MOVS     r1,#4
00009e  4308              ORRS     r0,r0,r1
0000a0  49e2              LDR      r1,|L7.1068|
0000a2  6108              STR      r0,[r1,#0x10]
                  |L7.164|
;;;419                }
;;;420                g_sDrvPWMAHandler.pfnCAP0CallBack = pfncallback;
0000a4  48e2              LDR      r0,|L7.1072|
0000a6  6044              STR      r4,[r0,#4]  ; g_sDrvPWMAHandler
;;;421                break;  
0000a8  e1b4              B        |L7.1044|
;;;422            case DRVPWM_TIMER1:
;;;423                PWMA->PIER.PWMIE1 = 1;
0000aa  48e0              LDR      r0,|L7.1068|
0000ac  6800              LDR      r0,[r0,#0]
0000ae  2102              MOVS     r1,#2
0000b0  4388              BICS     r0,r0,r1
0000b2  1c80              ADDS     r0,r0,#2
0000b4  49dd              LDR      r1,|L7.1068|
0000b6  6008              STR      r0,[r1,#0]
;;;424                g_sDrvPWMAHandler.pfnPWM1CallBack = pfncallback;
0000b8  48dd              LDR      r0,|L7.1072|
0000ba  6084              STR      r4,[r0,#8]  ; g_sDrvPWMAHandler
;;;425                break;
0000bc  e1aa              B        |L7.1044|
;;;426            case DRVPWM_CAP1:           
;;;427                if (Rflag)
0000be  2d00              CMP      r5,#0
0000c0  d016              BEQ      |L7.240|
;;;428                {
;;;429                    if (s_i32Option)
0000c2  48dc              LDR      r0,|L7.1076|
0000c4  6800              LDR      r0,[r0,#0]  ; s_i32Option
0000c6  2800              CMP      r0,#0
0000c8  d009              BEQ      |L7.222|
;;;430                        outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & CCR_MASK) | BIT17);
0000ca  48d8              LDR      r0,|L7.1068|
0000cc  6900              LDR      r0,[r0,#0x10]
0000ce  49da              LDR      r1,|L7.1080|
0000d0  4008              ANDS     r0,r0,r1
0000d2  2101              MOVS     r1,#1
0000d4  0449              LSLS     r1,r1,#17
0000d6  4308              ORRS     r0,r0,r1
0000d8  49d4              LDR      r1,|L7.1068|
0000da  6108              STR      r0,[r1,#0x10]
0000dc  e008              B        |L7.240|
                  |L7.222|
;;;431                    else
;;;432                        outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & ~(BIT4 | BIT20)) | BIT17);            
0000de  48d3              LDR      r0,|L7.1068|
0000e0  6900              LDR      r0,[r0,#0x10]
0000e2  49d6              LDR      r1,|L7.1084|
0000e4  4008              ANDS     r0,r0,r1
0000e6  2101              MOVS     r1,#1
0000e8  0449              LSLS     r1,r1,#17
0000ea  4308              ORRS     r0,r0,r1
0000ec  49cf              LDR      r1,|L7.1068|
0000ee  6108              STR      r0,[r1,#0x10]
                  |L7.240|
;;;433                }
;;;434                if (Fflag)
0000f0  2e00              CMP      r6,#0
0000f2  d016              BEQ      |L7.290|
;;;435                {
;;;436                    if (s_i32Option)
0000f4  48cf              LDR      r0,|L7.1076|
0000f6  6800              LDR      r0,[r0,#0]  ; s_i32Option
0000f8  2800              CMP      r0,#0
0000fa  d009              BEQ      |L7.272|
;;;437                        outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & CCR_MASK) | BIT18);
0000fc  48cb              LDR      r0,|L7.1068|
0000fe  6900              LDR      r0,[r0,#0x10]
000100  49cd              LDR      r1,|L7.1080|
000102  4008              ANDS     r0,r0,r1
000104  2101              MOVS     r1,#1
000106  0489              LSLS     r1,r1,#18
000108  4308              ORRS     r0,r0,r1
00010a  49c8              LDR      r1,|L7.1068|
00010c  6108              STR      r0,[r1,#0x10]
00010e  e008              B        |L7.290|
                  |L7.272|
;;;438                    else
;;;439                        outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & ~(BIT4 | BIT20)) | BIT18);            
000110  48c6              LDR      r0,|L7.1068|
000112  6900              LDR      r0,[r0,#0x10]
000114  49c9              LDR      r1,|L7.1084|
000116  4008              ANDS     r0,r0,r1
000118  2101              MOVS     r1,#1
00011a  0489              LSLS     r1,r1,#18
00011c  4308              ORRS     r0,r0,r1
00011e  49c3              LDR      r1,|L7.1068|
000120  6108              STR      r0,[r1,#0x10]
                  |L7.290|
;;;440                }
;;;441                g_sDrvPWMAHandler.pfnCAP1CallBack = pfncallback;
000122  48c3              LDR      r0,|L7.1072|
000124  60c4              STR      r4,[r0,#0xc]  ; g_sDrvPWMAHandler
;;;442                break;
000126  e175              B        |L7.1044|
;;;443            case DRVPWM_TIMER2:
;;;444                PWMA->PIER.PWMIE2 = 1;
000128  48c0              LDR      r0,|L7.1068|
00012a  6800              LDR      r0,[r0,#0]
00012c  2104              MOVS     r1,#4
00012e  4388              BICS     r0,r0,r1
000130  1d00              ADDS     r0,r0,#4
000132  49be              LDR      r1,|L7.1068|
000134  6008              STR      r0,[r1,#0]
;;;445                g_sDrvPWMAHandler.pfnPWM2CallBack = pfncallback;
000136  48be              LDR      r0,|L7.1072|
000138  6104              STR      r4,[r0,#0x10]  ; g_sDrvPWMAHandler
;;;446                break;
00013a  e16b              B        |L7.1044|
;;;447            case DRVPWM_CAP2:           
;;;448                if (Rflag)
00013c  2d00              CMP      r5,#0
00013e  d014              BEQ      |L7.362|
;;;449                {
;;;450                    if (s_i32Option)
000140  48bc              LDR      r0,|L7.1076|
000142  6800              LDR      r0,[r0,#0]  ; s_i32Option
000144  2800              CMP      r0,#0
000146  d008              BEQ      |L7.346|
;;;451                        outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & CCR_MASK) | BIT1);
000148  48b8              LDR      r0,|L7.1068|
00014a  6940              LDR      r0,[r0,#0x14]
00014c  49ba              LDR      r1,|L7.1080|
00014e  4008              ANDS     r0,r0,r1
000150  2102              MOVS     r1,#2
000152  4308              ORRS     r0,r0,r1
000154  49b5              LDR      r1,|L7.1068|
000156  6148              STR      r0,[r1,#0x14]
000158  e007              B        |L7.362|
                  |L7.346|
;;;452                    else
;;;453                        outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & ~(BIT4 | BIT20)) | BIT1);             
00015a  48b4              LDR      r0,|L7.1068|
00015c  6940              LDR      r0,[r0,#0x14]
00015e  49b7              LDR      r1,|L7.1084|
000160  4008              ANDS     r0,r0,r1
000162  2102              MOVS     r1,#2
000164  4308              ORRS     r0,r0,r1
000166  49b1              LDR      r1,|L7.1068|
000168  6148              STR      r0,[r1,#0x14]
                  |L7.362|
;;;454                }
;;;455                if (Fflag)
00016a  2e00              CMP      r6,#0
00016c  d014              BEQ      |L7.408|
;;;456                {
;;;457                    if (s_i32Option)
00016e  48b1              LDR      r0,|L7.1076|
000170  6800              LDR      r0,[r0,#0]  ; s_i32Option
000172  2800              CMP      r0,#0
000174  d008              BEQ      |L7.392|
;;;458                        outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & CCR_MASK) | BIT2);
000176  48ad              LDR      r0,|L7.1068|
000178  6940              LDR      r0,[r0,#0x14]
00017a  49af              LDR      r1,|L7.1080|
00017c  4008              ANDS     r0,r0,r1
00017e  2104              MOVS     r1,#4
000180  4308              ORRS     r0,r0,r1
000182  49aa              LDR      r1,|L7.1068|
000184  6148              STR      r0,[r1,#0x14]
000186  e007              B        |L7.408|
                  |L7.392|
;;;459                    else
;;;460                        outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & ~(BIT4 | BIT20)) | BIT2);         
000188  48a8              LDR      r0,|L7.1068|
00018a  6940              LDR      r0,[r0,#0x14]
00018c  49ab              LDR      r1,|L7.1084|
00018e  4008              ANDS     r0,r0,r1
000190  2104              MOVS     r1,#4
000192  4308              ORRS     r0,r0,r1
000194  49a5              LDR      r1,|L7.1068|
000196  6148              STR      r0,[r1,#0x14]
                  |L7.408|
;;;461                }
;;;462                g_sDrvPWMAHandler.pfnCAP2CallBack = pfncallback;
000198  48a5              LDR      r0,|L7.1072|
00019a  6144              STR      r4,[r0,#0x14]  ; g_sDrvPWMAHandler
;;;463                break;
00019c  e13a              B        |L7.1044|
;;;464            case DRVPWM_TIMER3:
;;;465                PWMA->PIER.PWMIE3 = 1;
00019e  48a3              LDR      r0,|L7.1068|
0001a0  6800              LDR      r0,[r0,#0]
0001a2  2108              MOVS     r1,#8
0001a4  4388              BICS     r0,r0,r1
0001a6  3008              ADDS     r0,r0,#8
0001a8  49a0              LDR      r1,|L7.1068|
0001aa  6008              STR      r0,[r1,#0]
;;;466                g_sDrvPWMAHandler.pfnPWM3CallBack = pfncallback;
0001ac  48a0              LDR      r0,|L7.1072|
0001ae  6184              STR      r4,[r0,#0x18]  ; g_sDrvPWMAHandler
;;;467                break;
0001b0  e130              B        |L7.1044|
;;;468            case DRVPWM_CAP3:           
;;;469                if (Rflag)
0001b2  2d00              CMP      r5,#0
0001b4  d016              BEQ      |L7.484|
;;;470                {
;;;471                    if (s_i32Option)
0001b6  489f              LDR      r0,|L7.1076|
0001b8  6800              LDR      r0,[r0,#0]  ; s_i32Option
0001ba  2800              CMP      r0,#0
0001bc  d009              BEQ      |L7.466|
;;;472                        outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & CCR_MASK) | BIT17);
0001be  489b              LDR      r0,|L7.1068|
0001c0  6940              LDR      r0,[r0,#0x14]
0001c2  499d              LDR      r1,|L7.1080|
0001c4  4008              ANDS     r0,r0,r1
0001c6  2101              MOVS     r1,#1
0001c8  0449              LSLS     r1,r1,#17
0001ca  4308              ORRS     r0,r0,r1
0001cc  4997              LDR      r1,|L7.1068|
0001ce  6148              STR      r0,[r1,#0x14]
0001d0  e008              B        |L7.484|
                  |L7.466|
;;;473                    else
;;;474                        outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & ~(BIT4 | BIT20)) | BIT17);                
0001d2  4896              LDR      r0,|L7.1068|
0001d4  6940              LDR      r0,[r0,#0x14]
0001d6  4999              LDR      r1,|L7.1084|
0001d8  4008              ANDS     r0,r0,r1
0001da  2101              MOVS     r1,#1
0001dc  0449              LSLS     r1,r1,#17
0001de  4308              ORRS     r0,r0,r1
0001e0  4992              LDR      r1,|L7.1068|
0001e2  6148              STR      r0,[r1,#0x14]
                  |L7.484|
;;;475                }
;;;476                if (Fflag)
0001e4  2e00              CMP      r6,#0
0001e6  d01e              BEQ      |L7.550|
;;;477                {
;;;478                    if (s_i32Option)
0001e8  4892              LDR      r0,|L7.1076|
0001ea  6800              LDR      r0,[r0,#0]  ; s_i32Option
0001ec  2800              CMP      r0,#0
0001ee  d011              BEQ      |L7.532|
;;;479                        outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & CCR_MASK) | BIT18);
0001f0  488e              LDR      r0,|L7.1068|
0001f2  6940              LDR      r0,[r0,#0x14]
0001f4  4990              LDR      r1,|L7.1080|
0001f6  4008              ANDS     r0,r0,r1
0001f8  2101              MOVS     r1,#1
0001fa  0489              LSLS     r1,r1,#18
0001fc  4308              ORRS     r0,r0,r1
0001fe  498b              LDR      r1,|L7.1068|
000200  6148              STR      r0,[r1,#0x14]
000202  e010              B        |L7.550|
000204  e0d1              B        |L7.938|
000206  e095              B        |L7.820|
000208  e055              B        |L7.694|
00020a  e019              B        |L7.576|
00020c  e0c3              B        |L7.918|
00020e  e087              B        |L7.800|
000210  e047              B        |L7.674|
000212  e00b              B        |L7.556|
                  |L7.532|
;;;480                    else
;;;481                        outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & ~(BIT4 | BIT20)) | BIT18);                
000214  4885              LDR      r0,|L7.1068|
000216  6940              LDR      r0,[r0,#0x14]
000218  4988              LDR      r1,|L7.1084|
00021a  4008              ANDS     r0,r0,r1
00021c  2101              MOVS     r1,#1
00021e  0489              LSLS     r1,r1,#18
000220  4308              ORRS     r0,r0,r1
000222  4982              LDR      r1,|L7.1068|
000224  6148              STR      r0,[r1,#0x14]
                  |L7.550|
;;;482                }
;;;483                g_sDrvPWMAHandler.pfnCAP3CallBack = pfncallback;
000226  4882              LDR      r0,|L7.1072|
000228  61c4              STR      r4,[r0,#0x1c]  ; g_sDrvPWMAHandler
;;;484                break;          
00022a  e0f3              B        |L7.1044|
                  |L7.556|
;;;485                
;;;486            case DRVPWM_TIMER4:
;;;487                PWMB->PIER.PWMIE0 = 1;
00022c  4884              LDR      r0,|L7.1088|
00022e  6800              LDR      r0,[r0,#0]
000230  0840              LSRS     r0,r0,#1
000232  0040              LSLS     r0,r0,#1
000234  1c40              ADDS     r0,r0,#1
000236  4982              LDR      r1,|L7.1088|
000238  6008              STR      r0,[r1,#0]
;;;488                g_sDrvPWMBHandler.pfnPWM0CallBack = pfncallback;
00023a  4882              LDR      r0,|L7.1092|
00023c  6004              STR      r4,[r0,#0]  ; g_sDrvPWMBHandler
;;;489                break;
00023e  e0e9              B        |L7.1044|
                  |L7.576|
;;;490            case DRVPWM_CAP4:           
;;;491                if (Rflag)
000240  2d00              CMP      r5,#0
000242  d014              BEQ      |L7.622|
;;;492                {
;;;493                    if (s_i32Option)
000244  487b              LDR      r0,|L7.1076|
000246  6800              LDR      r0,[r0,#0]  ; s_i32Option
000248  2800              CMP      r0,#0
00024a  d008              BEQ      |L7.606|
;;;494                        outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & CCR_MASK) | BIT1);
00024c  487c              LDR      r0,|L7.1088|
00024e  6900              LDR      r0,[r0,#0x10]
000250  4979              LDR      r1,|L7.1080|
000252  4008              ANDS     r0,r0,r1
000254  2102              MOVS     r1,#2
000256  4308              ORRS     r0,r0,r1
000258  4979              LDR      r1,|L7.1088|
00025a  6108              STR      r0,[r1,#0x10]
00025c  e007              B        |L7.622|
                  |L7.606|
;;;495                    else
;;;496                        outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & ~(BIT4 | BIT20)) | BIT1); 
00025e  4878              LDR      r0,|L7.1088|
000260  6900              LDR      r0,[r0,#0x10]
000262  4976              LDR      r1,|L7.1084|
000264  4008              ANDS     r0,r0,r1
000266  2102              MOVS     r1,#2
000268  4308              ORRS     r0,r0,r1
00026a  4975              LDR      r1,|L7.1088|
00026c  6108              STR      r0,[r1,#0x10]
                  |L7.622|
;;;497                }
;;;498                if (Fflag)
00026e  2e00              CMP      r6,#0
000270  d014              BEQ      |L7.668|
;;;499                {
;;;500                    if (s_i32Option)
000272  4870              LDR      r0,|L7.1076|
000274  6800              LDR      r0,[r0,#0]  ; s_i32Option
000276  2800              CMP      r0,#0
000278  d008              BEQ      |L7.652|
;;;501                        outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & CCR_MASK) | BIT2);
00027a  4871              LDR      r0,|L7.1088|
00027c  6900              LDR      r0,[r0,#0x10]
00027e  496e              LDR      r1,|L7.1080|
000280  4008              ANDS     r0,r0,r1
000282  2104              MOVS     r1,#4
000284  4308              ORRS     r0,r0,r1
000286  496e              LDR      r1,|L7.1088|
000288  6108              STR      r0,[r1,#0x10]
00028a  e007              B        |L7.668|
                  |L7.652|
;;;502                    else
;;;503                        outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & ~(BIT4 | BIT20)) | BIT2);
00028c  486c              LDR      r0,|L7.1088|
00028e  6900              LDR      r0,[r0,#0x10]
000290  496a              LDR      r1,|L7.1084|
000292  4008              ANDS     r0,r0,r1
000294  2104              MOVS     r1,#4
000296  4308              ORRS     r0,r0,r1
000298  4969              LDR      r1,|L7.1088|
00029a  6108              STR      r0,[r1,#0x10]
                  |L7.668|
;;;504                }
;;;505    
;;;506                g_sDrvPWMBHandler.pfnCAP0CallBack = pfncallback;
00029c  4869              LDR      r0,|L7.1092|
00029e  6044              STR      r4,[r0,#4]  ; g_sDrvPWMBHandler
;;;507                break;  
0002a0  e0b8              B        |L7.1044|
                  |L7.674|
;;;508            case DRVPWM_TIMER5:
;;;509                PWMB->PIER.PWMIE1 = 1;
0002a2  4867              LDR      r0,|L7.1088|
0002a4  6800              LDR      r0,[r0,#0]
0002a6  2102              MOVS     r1,#2
0002a8  4388              BICS     r0,r0,r1
0002aa  1c80              ADDS     r0,r0,#2
0002ac  4964              LDR      r1,|L7.1088|
0002ae  6008              STR      r0,[r1,#0]
;;;510                g_sDrvPWMBHandler.pfnPWM1CallBack = pfncallback;
0002b0  4864              LDR      r0,|L7.1092|
0002b2  6084              STR      r4,[r0,#8]  ; g_sDrvPWMBHandler
;;;511                break;
0002b4  e0ae              B        |L7.1044|
                  |L7.694|
;;;512            case DRVPWM_CAP5:           
;;;513                if (Rflag)
0002b6  2d00              CMP      r5,#0
0002b8  d016              BEQ      |L7.744|
;;;514                {
;;;515                    if (s_i32Option)
0002ba  485e              LDR      r0,|L7.1076|
0002bc  6800              LDR      r0,[r0,#0]  ; s_i32Option
0002be  2800              CMP      r0,#0
0002c0  d009              BEQ      |L7.726|
;;;516                        outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & CCR_MASK) | BIT17);
0002c2  485f              LDR      r0,|L7.1088|
0002c4  6900              LDR      r0,[r0,#0x10]
0002c6  495c              LDR      r1,|L7.1080|
0002c8  4008              ANDS     r0,r0,r1
0002ca  2101              MOVS     r1,#1
0002cc  0449              LSLS     r1,r1,#17
0002ce  4308              ORRS     r0,r0,r1
0002d0  495b              LDR      r1,|L7.1088|
0002d2  6108              STR      r0,[r1,#0x10]
0002d4  e008              B        |L7.744|
                  |L7.726|
;;;517                    else
;;;518                        outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & ~(BIT4 | BIT20)) | BIT17);            
0002d6  485a              LDR      r0,|L7.1088|
0002d8  6900              LDR      r0,[r0,#0x10]
0002da  4958              LDR      r1,|L7.1084|
0002dc  4008              ANDS     r0,r0,r1
0002de  2101              MOVS     r1,#1
0002e0  0449              LSLS     r1,r1,#17
0002e2  4308              ORRS     r0,r0,r1
0002e4  4956              LDR      r1,|L7.1088|
0002e6  6108              STR      r0,[r1,#0x10]
                  |L7.744|
;;;519                }
;;;520                if (Fflag)
0002e8  2e00              CMP      r6,#0
0002ea  d016              BEQ      |L7.794|
;;;521                {
;;;522                    if (s_i32Option)
0002ec  4851              LDR      r0,|L7.1076|
0002ee  6800              LDR      r0,[r0,#0]  ; s_i32Option
0002f0  2800              CMP      r0,#0
0002f2  d009              BEQ      |L7.776|
;;;523                        outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & CCR_MASK) | BIT18);
0002f4  4852              LDR      r0,|L7.1088|
0002f6  6900              LDR      r0,[r0,#0x10]
0002f8  494f              LDR      r1,|L7.1080|
0002fa  4008              ANDS     r0,r0,r1
0002fc  2101              MOVS     r1,#1
0002fe  0489              LSLS     r1,r1,#18
000300  4308              ORRS     r0,r0,r1
000302  494f              LDR      r1,|L7.1088|
000304  6108              STR      r0,[r1,#0x10]
000306  e008              B        |L7.794|
                  |L7.776|
;;;524                    else
;;;525                        outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & ~(BIT4 | BIT20)) | BIT18);            
000308  484d              LDR      r0,|L7.1088|
00030a  6900              LDR      r0,[r0,#0x10]
00030c  494b              LDR      r1,|L7.1084|
00030e  4008              ANDS     r0,r0,r1
000310  2101              MOVS     r1,#1
000312  0489              LSLS     r1,r1,#18
000314  4308              ORRS     r0,r0,r1
000316  494a              LDR      r1,|L7.1088|
000318  6108              STR      r0,[r1,#0x10]
                  |L7.794|
;;;526                }
;;;527    
;;;528                g_sDrvPWMBHandler.pfnCAP1CallBack = pfncallback;
00031a  484a              LDR      r0,|L7.1092|
00031c  60c4              STR      r4,[r0,#0xc]  ; g_sDrvPWMBHandler
;;;529                break;
00031e  e079              B        |L7.1044|
                  |L7.800|
;;;530            case DRVPWM_TIMER6:
;;;531                PWMB->PIER.PWMIE2 = 1;
000320  4847              LDR      r0,|L7.1088|
000322  6800              LDR      r0,[r0,#0]
000324  2104              MOVS     r1,#4
000326  4388              BICS     r0,r0,r1
000328  1d00              ADDS     r0,r0,#4
00032a  4945              LDR      r1,|L7.1088|
00032c  6008              STR      r0,[r1,#0]
;;;532                g_sDrvPWMBHandler.pfnPWM2CallBack = pfncallback;
00032e  4845              LDR      r0,|L7.1092|
000330  6104              STR      r4,[r0,#0x10]  ; g_sDrvPWMBHandler
;;;533                break;
000332  e06f              B        |L7.1044|
                  |L7.820|
;;;534            case DRVPWM_CAP6:           
;;;535                if (Rflag)
000334  2d00              CMP      r5,#0
000336  d014              BEQ      |L7.866|
;;;536                {
;;;537                    if (s_i32Option)
000338  483e              LDR      r0,|L7.1076|
00033a  6800              LDR      r0,[r0,#0]  ; s_i32Option
00033c  2800              CMP      r0,#0
00033e  d008              BEQ      |L7.850|
;;;538                        outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & CCR_MASK) | BIT1);
000340  483f              LDR      r0,|L7.1088|
000342  6940              LDR      r0,[r0,#0x14]
000344  493c              LDR      r1,|L7.1080|
000346  4008              ANDS     r0,r0,r1
000348  2102              MOVS     r1,#2
00034a  4308              ORRS     r0,r0,r1
00034c  493c              LDR      r1,|L7.1088|
00034e  6148              STR      r0,[r1,#0x14]
000350  e007              B        |L7.866|
                  |L7.850|
;;;539                    else
;;;540                        outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & ~(BIT4 | BIT20)) | BIT1);             
000352  483b              LDR      r0,|L7.1088|
000354  6940              LDR      r0,[r0,#0x14]
000356  4939              LDR      r1,|L7.1084|
000358  4008              ANDS     r0,r0,r1
00035a  2102              MOVS     r1,#2
00035c  4308              ORRS     r0,r0,r1
00035e  4938              LDR      r1,|L7.1088|
000360  6148              STR      r0,[r1,#0x14]
                  |L7.866|
;;;541                }
;;;542                if (Fflag)
000362  2e00              CMP      r6,#0
000364  d014              BEQ      |L7.912|
;;;543                {
;;;544                    if (s_i32Option)
000366  4833              LDR      r0,|L7.1076|
000368  6800              LDR      r0,[r0,#0]  ; s_i32Option
00036a  2800              CMP      r0,#0
00036c  d008              BEQ      |L7.896|
;;;545                        outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & CCR_MASK) | BIT2);
00036e  4834              LDR      r0,|L7.1088|
000370  6940              LDR      r0,[r0,#0x14]
000372  4931              LDR      r1,|L7.1080|
000374  4008              ANDS     r0,r0,r1
000376  2104              MOVS     r1,#4
000378  4308              ORRS     r0,r0,r1
00037a  4931              LDR      r1,|L7.1088|
00037c  6148              STR      r0,[r1,#0x14]
00037e  e007              B        |L7.912|
                  |L7.896|
;;;546                    else
;;;547                        outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & ~(BIT4 | BIT20)) | BIT2);         
000380  482f              LDR      r0,|L7.1088|
000382  6940              LDR      r0,[r0,#0x14]
000384  492d              LDR      r1,|L7.1084|
000386  4008              ANDS     r0,r0,r1
000388  2104              MOVS     r1,#4
00038a  4308              ORRS     r0,r0,r1
00038c  492c              LDR      r1,|L7.1088|
00038e  6148              STR      r0,[r1,#0x14]
                  |L7.912|
;;;548                }
;;;549                g_sDrvPWMBHandler.pfnCAP2CallBack = pfncallback;
000390  482c              LDR      r0,|L7.1092|
000392  6144              STR      r4,[r0,#0x14]  ; g_sDrvPWMBHandler
;;;550                break;
000394  e03e              B        |L7.1044|
                  |L7.918|
;;;551            case DRVPWM_TIMER7:
;;;552                PWMB->PIER.PWMIE3 = 1;
000396  482a              LDR      r0,|L7.1088|
000398  6800              LDR      r0,[r0,#0]
00039a  2108              MOVS     r1,#8
00039c  4388              BICS     r0,r0,r1
00039e  3008              ADDS     r0,r0,#8
0003a0  4927              LDR      r1,|L7.1088|
0003a2  6008              STR      r0,[r1,#0]
;;;553                g_sDrvPWMBHandler.pfnPWM3CallBack = pfncallback;
0003a4  4827              LDR      r0,|L7.1092|
0003a6  6184              STR      r4,[r0,#0x18]  ; g_sDrvPWMBHandler
;;;554                break;
0003a8  e034              B        |L7.1044|
                  |L7.938|
;;;555            case DRVPWM_CAP7:           
;;;556                if (Rflag)
0003aa  2d00              CMP      r5,#0
0003ac  d016              BEQ      |L7.988|
;;;557                {
;;;558                    if (s_i32Option)
0003ae  4821              LDR      r0,|L7.1076|
0003b0  6800              LDR      r0,[r0,#0]  ; s_i32Option
0003b2  2800              CMP      r0,#0
0003b4  d009              BEQ      |L7.970|
;;;559                        outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & CCR_MASK) | BIT17);
0003b6  4822              LDR      r0,|L7.1088|
0003b8  6940              LDR      r0,[r0,#0x14]
0003ba  491f              LDR      r1,|L7.1080|
0003bc  4008              ANDS     r0,r0,r1
0003be  2101              MOVS     r1,#1
0003c0  0449              LSLS     r1,r1,#17
0003c2  4308              ORRS     r0,r0,r1
0003c4  491e              LDR      r1,|L7.1088|
0003c6  6148              STR      r0,[r1,#0x14]
0003c8  e008              B        |L7.988|
                  |L7.970|
;;;560                    else
;;;561                        outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & ~(BIT4 | BIT20)) | BIT17);                
0003ca  481d              LDR      r0,|L7.1088|
0003cc  6940              LDR      r0,[r0,#0x14]
0003ce  491b              LDR      r1,|L7.1084|
0003d0  4008              ANDS     r0,r0,r1
0003d2  2101              MOVS     r1,#1
0003d4  0449              LSLS     r1,r1,#17
0003d6  4308              ORRS     r0,r0,r1
0003d8  4919              LDR      r1,|L7.1088|
0003da  6148              STR      r0,[r1,#0x14]
                  |L7.988|
;;;562                }
;;;563                if (Fflag)
0003dc  2e00              CMP      r6,#0
0003de  d016              BEQ      |L7.1038|
;;;564                {
;;;565                    if (s_i32Option)
0003e0  4814              LDR      r0,|L7.1076|
0003e2  6800              LDR      r0,[r0,#0]  ; s_i32Option
0003e4  2800              CMP      r0,#0
0003e6  d009              BEQ      |L7.1020|
;;;566                        outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & CCR_MASK) | BIT18);
0003e8  4815              LDR      r0,|L7.1088|
0003ea  6940              LDR      r0,[r0,#0x14]
0003ec  4912              LDR      r1,|L7.1080|
0003ee  4008              ANDS     r0,r0,r1
0003f0  2101              MOVS     r1,#1
0003f2  0489              LSLS     r1,r1,#18
0003f4  4308              ORRS     r0,r0,r1
0003f6  4912              LDR      r1,|L7.1088|
0003f8  6148              STR      r0,[r1,#0x14]
0003fa  e008              B        |L7.1038|
                  |L7.1020|
;;;567                    else
;;;568                        outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & ~(BIT4 | BIT20)) | BIT18);                
0003fc  4810              LDR      r0,|L7.1088|
0003fe  6940              LDR      r0,[r0,#0x14]
000400  490e              LDR      r1,|L7.1084|
000402  4008              ANDS     r0,r0,r1
000404  2101              MOVS     r1,#1
000406  0489              LSLS     r1,r1,#18
000408  4308              ORRS     r0,r0,r1
00040a  490d              LDR      r1,|L7.1088|
00040c  6148              STR      r0,[r1,#0x14]
                  |L7.1038|
;;;569                }
;;;570    
;;;571                g_sDrvPWMBHandler.pfnCAP3CallBack = pfncallback;
00040e  480d              LDR      r0,|L7.1092|
000410  61c4              STR      r4,[r0,#0x1c]  ; g_sDrvPWMBHandler
;;;572                break;              
000412  bf00              NOP      
                  |L7.1044|
000414  bf00              NOP                            ;404
;;;573        }                           
;;;574            
;;;575        if (u8Timer & 0x04)
000416  2004              MOVS     r0,#4
000418  4207              TST      r7,r0
00041a  d015              BEQ      |L7.1096|
;;;576        {
;;;577            NVIC_SetPriority(PWMB_IRQn, (1<<__NVIC_PRIO_BITS) - 2);
00041c  2102              MOVS     r1,#2
00041e  2007              MOVS     r0,#7
000420  f7fffffe          BL       NVIC_SetPriority
;;;578            NVIC_EnableIRQ(PWMB_IRQn);
000424  2007              MOVS     r0,#7
000426  f7fffffe          BL       NVIC_EnableIRQ
00042a  e014              B        |L7.1110|
                  |L7.1068|
                          DCD      0x40040040
                  |L7.1072|
                          DCD      g_sDrvPWMAHandler
                  |L7.1076|
                          DCD      s_i32Option
                  |L7.1080|
                          DCD      0x000f000f
                  |L7.1084|
                          DCD      0xffefffef
                  |L7.1088|
                          DCD      0x40140040
                  |L7.1092|
                          DCD      g_sDrvPWMBHandler
                  |L7.1096|
;;;579        }
;;;580        else
;;;581        {
;;;582            NVIC_SetPriority(PWMA_IRQn, (1<<__NVIC_PRIO_BITS) - 2);
000448  2102              MOVS     r1,#2
00044a  2006              MOVS     r0,#6
00044c  f7fffffe          BL       NVIC_SetPriority
;;;583            NVIC_EnableIRQ(PWMA_IRQn);           
000450  2006              MOVS     r0,#6
000452  f7fffffe          BL       NVIC_EnableIRQ
                  |L7.1110|
;;;584        }
;;;585    }
000456  bdfe              POP      {r1-r7,pc}
;;;586    
                          ENDP


                          AREA ||i.DrvPWM_GetCaptureIntStatus||, CODE, READONLY, ALIGN=2

                  DrvPWM_GetCaptureIntStatus PROC
;;;929    /*---------------------------------------------------------------------------------------------------------*/
;;;930    int32_t DrvPWM_GetCaptureIntStatus(uint8_t u8Capture, uint8_t u8IntType)
000000  b510              PUSH     {r4,lr}
;;;931    {   
000002  4602              MOV      r2,r0
;;;932        int32_t status;
;;;933    
;;;934        status = 0; 
000004  2000              MOVS     r0,#0
;;;935    
;;;936        switch (u8Capture)
000006  4614              MOV      r4,r2
000008  3c10              SUBS     r4,r4,#0x10
00000a  0023              MOVS     r3,r4
00000c  f7fffffe          BL       __ARM_common_switch8
000010  0805121f          DCB      0x08,0x05,0x12,0x1f
000014  2c394653          DCB      0x2c,0x39,0x46,0x53
000018  606d              DCB      0x60,0x6d
;;;937        {
;;;938            case DRVPWM_CAP0:
;;;939                status = (u8IntType == DRVPWM_CAP_RISING_FLAG)? PWMA->CCR0.CRLRI0 : PWMA->CCR0.CFLRI0;
00001a  2906              CMP      r1,#6
00001c  d104              BNE      |L8.40|
00001e  4b34              LDR      r3,|L8.240|
000020  691b              LDR      r3,[r3,#0x10]
000022  065b              LSLS     r3,r3,#25
000024  0fdb              LSRS     r3,r3,#31
000026  e003              B        |L8.48|
                  |L8.40|
000028  4b31              LDR      r3,|L8.240|
00002a  691b              LDR      r3,[r3,#0x10]
00002c  061b              LSLS     r3,r3,#24
00002e  0fdb              LSRS     r3,r3,#31
                  |L8.48|
000030  4618              MOV      r0,r3
;;;940                break;
000032  e05a              B        |L8.234|
;;;941            case DRVPWM_CAP1:
;;;942                status = (u8IntType == DRVPWM_CAP_RISING_FLAG)? PWMA->CCR0.CRLRI1 : PWMA->CCR0.CFLRI1;
000034  2906              CMP      r1,#6
000036  d104              BNE      |L8.66|
000038  4b2d              LDR      r3,|L8.240|
00003a  691b              LDR      r3,[r3,#0x10]
00003c  025b              LSLS     r3,r3,#9
00003e  0fdb              LSRS     r3,r3,#31
000040  e003              B        |L8.74|
                  |L8.66|
000042  4b2b              LDR      r3,|L8.240|
000044  691b              LDR      r3,[r3,#0x10]
000046  021b              LSLS     r3,r3,#8
000048  0fdb              LSRS     r3,r3,#31
                  |L8.74|
00004a  4618              MOV      r0,r3
;;;943                break;
00004c  e04d              B        |L8.234|
;;;944            case DRVPWM_CAP2:
;;;945                status = (u8IntType == DRVPWM_CAP_RISING_FLAG)? PWMA->CCR2.CRLRI2 : PWMA->CCR2.CFLRI2;
00004e  2906              CMP      r1,#6
000050  d104              BNE      |L8.92|
000052  4b27              LDR      r3,|L8.240|
000054  695b              LDR      r3,[r3,#0x14]
000056  065b              LSLS     r3,r3,#25
000058  0fdb              LSRS     r3,r3,#31
00005a  e003              B        |L8.100|
                  |L8.92|
00005c  4b24              LDR      r3,|L8.240|
00005e  695b              LDR      r3,[r3,#0x14]
000060  061b              LSLS     r3,r3,#24
000062  0fdb              LSRS     r3,r3,#31
                  |L8.100|
000064  4618              MOV      r0,r3
;;;946                break;
000066  e040              B        |L8.234|
;;;947            case DRVPWM_CAP3:
;;;948                status = (u8IntType == DRVPWM_CAP_RISING_FLAG)? PWMA->CCR2.CRLRI3 : PWMA->CCR2.CFLRI3;
000068  2906              CMP      r1,#6
00006a  d104              BNE      |L8.118|
00006c  4b20              LDR      r3,|L8.240|
00006e  695b              LDR      r3,[r3,#0x14]
000070  025b              LSLS     r3,r3,#9
000072  0fdb              LSRS     r3,r3,#31
000074  e003              B        |L8.126|
                  |L8.118|
000076  4b1e              LDR      r3,|L8.240|
000078  695b              LDR      r3,[r3,#0x14]
00007a  021b              LSLS     r3,r3,#8
00007c  0fdb              LSRS     r3,r3,#31
                  |L8.126|
00007e  4618              MOV      r0,r3
;;;949                break;
000080  e033              B        |L8.234|
;;;950            case DRVPWM_CAP4:
;;;951                status = (u8IntType == DRVPWM_CAP_RISING_FLAG)? PWMB->CCR0.CRLRI0 : PWMB->CCR0.CFLRI0;
000082  2906              CMP      r1,#6
000084  d104              BNE      |L8.144|
000086  4b1b              LDR      r3,|L8.244|
000088  691b              LDR      r3,[r3,#0x10]
00008a  065b              LSLS     r3,r3,#25
00008c  0fdb              LSRS     r3,r3,#31
00008e  e003              B        |L8.152|
                  |L8.144|
000090  4b18              LDR      r3,|L8.244|
000092  691b              LDR      r3,[r3,#0x10]
000094  061b              LSLS     r3,r3,#24
000096  0fdb              LSRS     r3,r3,#31
                  |L8.152|
000098  4618              MOV      r0,r3
;;;952                break;
00009a  e026              B        |L8.234|
;;;953            case DRVPWM_CAP5:
;;;954                status = (u8IntType == DRVPWM_CAP_RISING_FLAG)? PWMB->CCR0.CRLRI1 : PWMB->CCR0.CFLRI1;
00009c  2906              CMP      r1,#6
00009e  d104              BNE      |L8.170|
0000a0  4b14              LDR      r3,|L8.244|
0000a2  691b              LDR      r3,[r3,#0x10]
0000a4  025b              LSLS     r3,r3,#9
0000a6  0fdb              LSRS     r3,r3,#31
0000a8  e003              B        |L8.178|
                  |L8.170|
0000aa  4b12              LDR      r3,|L8.244|
0000ac  691b              LDR      r3,[r3,#0x10]
0000ae  021b              LSLS     r3,r3,#8
0000b0  0fdb              LSRS     r3,r3,#31
                  |L8.178|
0000b2  4618              MOV      r0,r3
;;;955                break;
0000b4  e019              B        |L8.234|
;;;956            case DRVPWM_CAP6:
;;;957                status = (u8IntType == DRVPWM_CAP_RISING_FLAG)? PWMB->CCR2.CRLRI2 : PWMB->CCR2.CFLRI2;
0000b6  2906              CMP      r1,#6
0000b8  d104              BNE      |L8.196|
0000ba  4b0e              LDR      r3,|L8.244|
0000bc  695b              LDR      r3,[r3,#0x14]
0000be  065b              LSLS     r3,r3,#25
0000c0  0fdb              LSRS     r3,r3,#31
0000c2  e003              B        |L8.204|
                  |L8.196|
0000c4  4b0b              LDR      r3,|L8.244|
0000c6  695b              LDR      r3,[r3,#0x14]
0000c8  061b              LSLS     r3,r3,#24
0000ca  0fdb              LSRS     r3,r3,#31
                  |L8.204|
0000cc  4618              MOV      r0,r3
;;;958                break;
0000ce  e00c              B        |L8.234|
;;;959            case DRVPWM_CAP7:
;;;960                status = (u8IntType == DRVPWM_CAP_RISING_FLAG)? PWMB->CCR2.CRLRI3 : PWMB->CCR2.CFLRI3;
0000d0  2906              CMP      r1,#6
0000d2  d104              BNE      |L8.222|
0000d4  4b07              LDR      r3,|L8.244|
0000d6  695b              LDR      r3,[r3,#0x14]
0000d8  025b              LSLS     r3,r3,#9
0000da  0fdb              LSRS     r3,r3,#31
0000dc  e003              B        |L8.230|
                  |L8.222|
0000de  4b05              LDR      r3,|L8.244|
0000e0  695b              LDR      r3,[r3,#0x14]
0000e2  021b              LSLS     r3,r3,#8
0000e4  0fdb              LSRS     r3,r3,#31
                  |L8.230|
0000e6  4618              MOV      r0,r3
;;;961                break;
0000e8  bf00              NOP      
                  |L8.234|
0000ea  bf00              NOP                            ;940
;;;962        }
;;;963        
;;;964        return status;
;;;965    }
0000ec  bd10              POP      {r4,pc}
;;;966    
                          ENDP

0000ee  0000              DCW      0x0000
                  |L8.240|
                          DCD      0x40040040
                  |L8.244|
                          DCD      0x40140040

                          AREA ||i.DrvPWM_GetFallingCounter||, CODE, READONLY, ALIGN=2

                  DrvPWM_GetFallingCounter PROC
;;;899    /*---------------------------------------------------------------------------------------------------------*/
;;;900    uint16_t DrvPWM_GetFallingCounter(uint8_t u8Capture)
000000  4601              MOV      r1,r0
;;;901    {
;;;902        uint32_t u32Reg = 0;
000002  2200              MOVS     r2,#0
;;;903        
;;;904        if (u8Capture >= DRVPWM_CAP4)
000004  2914              CMP      r1,#0x14
000006  db06              BLT      |L9.22|
;;;905        {
;;;906            u32Reg = *((__IO uint32_t *) (PWMB_CFLR0 + ((u8Capture - DRVPWM_CAP4) << 3)));
000008  4608              MOV      r0,r1
00000a  3814              SUBS     r0,r0,#0x14
00000c  00c0              LSLS     r0,r0,#3
00000e  4b05              LDR      r3,|L9.36|
000010  18c0              ADDS     r0,r0,r3
000012  69c2              LDR      r2,[r0,#0x1c]
000014  e004              B        |L9.32|
                  |L9.22|
;;;907        }
;;;908        else
;;;909        {
;;;910            u32Reg = *((__IO uint32_t *) (PWMA_CFLR0 + ((u8Capture & 0x7) << 3)));  
000016  0748              LSLS     r0,r1,#29
000018  0e80              LSRS     r0,r0,#26
00001a  4b03              LDR      r3,|L9.40|
00001c  18c0              ADDS     r0,r0,r3
00001e  69c2              LDR      r2,[r0,#0x1c]
                  |L9.32|
;;;911        }
;;;912    
;;;913        return u32Reg;
000020  b290              UXTH     r0,r2
;;;914    }
000022  4770              BX       lr
;;;915    
                          ENDP

                  |L9.36|
                          DCD      0x40140040
                  |L9.40|
                          DCD      0x40040040

                          AREA ||i.DrvPWM_GetIntFlag||, CODE, READONLY, ALIGN=2

                  DrvPWM_GetIntFlag PROC
;;;806    /*---------------------------------------------------------------------------------------------------------*/
;;;807    int32_t DrvPWM_GetIntFlag(uint8_t u8Timer)
000000  b510              PUSH     {r4,lr}
;;;808    {
000002  4601              MOV      r1,r0
;;;809        int32_t status = 0;
000004  2000              MOVS     r0,#0
;;;810        
;;;811        switch (u8Timer)
000006  000b              MOVS     r3,r1
000008  f7fffffe          BL       __ARM_common_switch8
00000c  180d0e0f          DCB      0x18,0x0d,0x0e,0x0f
000010  101b1c1d          DCB      0x10,0x1b,0x1c,0x1d
000014  1e525252          DCB      0x1e,0x52,0x52,0x52
000018  52525252          DCB      0x52,0x52,0x52,0x52
00001c  522a2f34          DCB      0x52,0x2a,0x2f,0x34
000020  393e4348          DCB      0x39,0x3e,0x43,0x48
000024  4d52              DCB      0x4d,0x52
;;;812        {
;;;813            case DRVPWM_TIMER0:
;;;814            case DRVPWM_TIMER1:
000026  bf00              NOP      
;;;815            case DRVPWM_TIMER2:
000028  bf00              NOP      
;;;816            case DRVPWM_TIMER3:
00002a  bf00              NOP      
;;;817                status = ( inp32(&PWMA->PIIR) & (1<<u8Timer) )? 1 : 0;
00002c  4a21              LDR      r2,|L10.180|
00002e  6852              LDR      r2,[r2,#4]
000030  2301              MOVS     r3,#1
000032  408b              LSLS     r3,r3,r1
000034  421a              TST      r2,r3
000036  d001              BEQ      |L10.60|
000038  2201              MOVS     r2,#1
00003a  e000              B        |L10.62|
                  |L10.60|
00003c  2200              MOVS     r2,#0
                  |L10.62|
00003e  4610              MOV      r0,r2
;;;818                break;
000040  e036              B        |L10.176|
;;;819            case DRVPWM_TIMER4:
;;;820            case DRVPWM_TIMER5:
000042  bf00              NOP      
;;;821            case DRVPWM_TIMER6:
000044  bf00              NOP      
;;;822            case DRVPWM_TIMER7:
000046  bf00              NOP      
;;;823                status = ( inp32(&PWMB->PIIR) & (1<<(u8Timer-DRVPWM_TIMER4)) )? 1 : 0;
000048  4a1b              LDR      r2,|L10.184|
00004a  6852              LDR      r2,[r2,#4]
00004c  1f0b              SUBS     r3,r1,#4
00004e  2401              MOVS     r4,#1
000050  409c              LSLS     r4,r4,r3
000052  4222              TST      r2,r4
000054  d001              BEQ      |L10.90|
000056  2201              MOVS     r2,#1
000058  e000              B        |L10.92|
                  |L10.90|
00005a  2200              MOVS     r2,#0
                  |L10.92|
00005c  4610              MOV      r0,r2
;;;824                break;
00005e  e027              B        |L10.176|
;;;825    
;;;826            case DRVPWM_CAP0:
;;;827                status = PWMA->CCR0.CAPIF0;
000060  4a14              LDR      r2,|L10.180|
000062  6912              LDR      r2,[r2,#0x10]
000064  06d2              LSLS     r2,r2,#27
000066  0fd0              LSRS     r0,r2,#31
;;;828                break;
000068  e022              B        |L10.176|
;;;829            case DRVPWM_CAP1:
;;;830                status = PWMA->CCR0.CAPIF1;             
00006a  4a12              LDR      r2,|L10.180|
00006c  6912              LDR      r2,[r2,#0x10]
00006e  02d2              LSLS     r2,r2,#11
000070  0fd0              LSRS     r0,r2,#31
;;;831                break;
000072  e01d              B        |L10.176|
;;;832            case DRVPWM_CAP2:
;;;833                status = PWMA->CCR2.CAPIF2;
000074  4a0f              LDR      r2,|L10.180|
000076  6952              LDR      r2,[r2,#0x14]
000078  06d2              LSLS     r2,r2,#27
00007a  0fd0              LSRS     r0,r2,#31
;;;834                break;
00007c  e018              B        |L10.176|
;;;835            case DRVPWM_CAP3:
;;;836                status = PWMA->CCR2.CAPIF3;
00007e  4a0d              LDR      r2,|L10.180|
000080  6952              LDR      r2,[r2,#0x14]
000082  02d2              LSLS     r2,r2,#11
000084  0fd0              LSRS     r0,r2,#31
;;;837                break;
000086  e013              B        |L10.176|
;;;838            case DRVPWM_CAP4:
;;;839                status = PWMB->CCR0.CAPIF0;
000088  4a0b              LDR      r2,|L10.184|
00008a  6912              LDR      r2,[r2,#0x10]
00008c  06d2              LSLS     r2,r2,#27
00008e  0fd0              LSRS     r0,r2,#31
;;;840                break;
000090  e00e              B        |L10.176|
;;;841            case DRVPWM_CAP5:
;;;842                status = PWMB->CCR0.CAPIF1;             
000092  4a09              LDR      r2,|L10.184|
000094  6912              LDR      r2,[r2,#0x10]
000096  02d2              LSLS     r2,r2,#11
000098  0fd0              LSRS     r0,r2,#31
;;;843                break;
00009a  e009              B        |L10.176|
;;;844            case DRVPWM_CAP6:
;;;845                status = PWMB->CCR2.CAPIF2;
00009c  4a06              LDR      r2,|L10.184|
00009e  6952              LDR      r2,[r2,#0x14]
0000a0  06d2              LSLS     r2,r2,#27
0000a2  0fd0              LSRS     r0,r2,#31
;;;846                break;
0000a4  e004              B        |L10.176|
;;;847            case DRVPWM_CAP7:
;;;848                status = PWMB->CCR2.CAPIF3;
0000a6  4a04              LDR      r2,|L10.184|
0000a8  6952              LDR      r2,[r2,#0x14]
0000aa  02d2              LSLS     r2,r2,#11
0000ac  0fd0              LSRS     r0,r2,#31
;;;849                break;
0000ae  bf00              NOP      
                  |L10.176|
0000b0  bf00              NOP                            ;818
;;;850        }   
;;;851    
;;;852        return status;      
;;;853    }
0000b2  bd10              POP      {r4,pc}
;;;854    
                          ENDP

                  |L10.180|
                          DCD      0x40040040
                  |L10.184|
                          DCD      0x40140040

                          AREA ||i.DrvPWM_GetRisingCounter||, CODE, READONLY, ALIGN=2

                  DrvPWM_GetRisingCounter PROC
;;;869    /*---------------------------------------------------------------------------------------------------------*/
;;;870    uint16_t DrvPWM_GetRisingCounter(uint8_t u8Capture)
000000  4601              MOV      r1,r0
;;;871    {
;;;872        uint32_t u32Reg = 0;
000002  2200              MOVS     r2,#0
;;;873        
;;;874        if (u8Capture >= DRVPWM_CAP4)
000004  2914              CMP      r1,#0x14
000006  db06              BLT      |L11.22|
;;;875        {
;;;876            u32Reg = *((__IO uint32_t *) (PWMB_CRLR0 + ((u8Capture - DRVPWM_CAP4) << 3)));
000008  4608              MOV      r0,r1
00000a  3814              SUBS     r0,r0,#0x14
00000c  00c0              LSLS     r0,r0,#3
00000e  4b05              LDR      r3,|L11.36|
000010  18c0              ADDS     r0,r0,r3
000012  6982              LDR      r2,[r0,#0x18]
000014  e004              B        |L11.32|
                  |L11.22|
;;;877        }
;;;878        else
;;;879        {
;;;880            u32Reg = *((__IO uint32_t *) (PWMA_CRLR0 + ((u8Capture & 0x7) << 3)));  
000016  0748              LSLS     r0,r1,#29
000018  0e80              LSRS     r0,r0,#26
00001a  4b03              LDR      r3,|L11.40|
00001c  18c0              ADDS     r0,r0,r3
00001e  6982              LDR      r2,[r0,#0x18]
                  |L11.32|
;;;881        }
;;;882    
;;;883        return u32Reg;
000020  b290              UXTH     r0,r2
;;;884    }
000022  4770              BX       lr
;;;885    
                          ENDP

                  |L11.36|
                          DCD      0x40140040
                  |L11.40|
                          DCD      0x40040040

                          AREA ||i.DrvPWM_GetTimerCounter||, CODE, READONLY, ALIGN=2

                  DrvPWM_GetTimerCounter PROC
;;;354    /*---------------------------------------------------------------------------------------------------------*/
;;;355    uint32_t DrvPWM_GetTimerCounter(uint8_t u8Timer)
000000  4601              MOV      r1,r0
;;;356    {
;;;357        uint32_t u32Reg = 0;
000002  bf00              NOP      
;;;358        
;;;359        u8Timer &= 0x0F;
000004  0709              LSLS     r1,r1,#28
000006  0f09              LSRS     r1,r1,#28
;;;360        
;;;361        if (u8Timer >= DRVPWM_TIMER4)
000008  2904              CMP      r1,#4
00000a  db06              BLT      |L12.26|
;;;362        {
;;;363            u32Reg = *((__IO uint32_t *) (PWMB_PDR0 + (u8Timer - DRVPWM_TIMER4) * 12));
00000c  1f0a              SUBS     r2,r1,#4
00000e  230c              MOVS     r3,#0xc
000010  435a              MULS     r2,r3,r2
000012  4b06              LDR      r3,|L12.44|
000014  18d2              ADDS     r2,r2,r3
000016  6950              LDR      r0,[r2,#0x14]
000018  e006              B        |L12.40|
                  |L12.26|
;;;364        }
;;;365        else
;;;366        {
;;;367            u32Reg = *((__IO uint32_t *) (PWMA_PDR0 + (u8Timer & 0x7) * 12));   
00001a  074a              LSLS     r2,r1,#29
00001c  0f52              LSRS     r2,r2,#29
00001e  230c              MOVS     r3,#0xc
000020  435a              MULS     r2,r3,r2
000022  4b03              LDR      r3,|L12.48|
000024  18d2              ADDS     r2,r2,r3
000026  6950              LDR      r0,[r2,#0x14]
                  |L12.40|
;;;368        }
;;;369    
;;;370        return u32Reg;
;;;371    }
000028  4770              BX       lr
;;;372    
                          ENDP

00002a  0000              DCW      0x0000
                  |L12.44|
                          DCD      0x40140000
                  |L12.48|
                          DCD      0x40040000

                          AREA ||i.DrvPWM_GetVersion||, CODE, READONLY, ALIGN=2

                  DrvPWM_GetVersion PROC
;;;49     /*---------------------------------------------------------------------------------------------------------*/
;;;50     uint32_t DrvPWM_GetVersion(void)
000000  4800              LDR      r0,|L13.4|
;;;51     {
;;;52         return DRVPWM_VERSION_NUM;
;;;53     }
000002  4770              BX       lr
;;;54     
                          ENDP

                  |L13.4|
                          DCD      0x00010302

                          AREA ||i.DrvPWM_IsTimerEnabled||, CODE, READONLY, ALIGN=2

                  DrvPWM_IsTimerEnabled PROC
;;;289    /*---------------------------------------------------------------------------------------------------------*/
;;;290    int32_t DrvPWM_IsTimerEnabled(uint8_t u8Timer)
000000  b510              PUSH     {r4,lr}
;;;291    {
000002  4601              MOV      r1,r0
;;;292        int32_t status;
;;;293    
;;;294        status = 0;
000004  2000              MOVS     r0,#0
;;;295        
;;;296        switch (u8Timer)
000006  000b              MOVS     r3,r1
000008  f7fffffe          BL       __ARM_common_switch8
00000c  08050607          DCB      0x08,0x05,0x06,0x07
000010  08141516          DCB      0x08,0x14,0x15,0x16
000014  1724              DCB      0x17,0x24
;;;297        {
;;;298            case DRVPWM_TIMER0:
;;;299            case DRVPWM_TIMER1:
000016  bf00              NOP      
;;;300            case DRVPWM_TIMER2:
000018  bf00              NOP      
;;;301            case DRVPWM_TIMER3:
00001a  bf00              NOP      
;;;302                status = ( inp32(&PWMA->PCR) & (1 << (u8Timer<<3) ) )? 1 : 0;
00001c  4a0e              LDR      r2,|L14.88|
00001e  6892              LDR      r2,[r2,#8]
000020  00cc              LSLS     r4,r1,#3
000022  2301              MOVS     r3,#1
000024  40a3              LSLS     r3,r3,r4
000026  421a              TST      r2,r3
000028  d001              BEQ      |L14.46|
00002a  2201              MOVS     r2,#1
00002c  e000              B        |L14.48|
                  |L14.46|
00002e  2200              MOVS     r2,#0
                  |L14.48|
000030  4610              MOV      r0,r2
;;;303                break;      
000032  e00f              B        |L14.84|
;;;304            case DRVPWM_TIMER4:
;;;305            case DRVPWM_TIMER5:
000034  bf00              NOP      
;;;306            case DRVPWM_TIMER6:
000036  bf00              NOP      
;;;307            case DRVPWM_TIMER7:
000038  bf00              NOP      
;;;308                status = ( inp32(&PWMB->PCR) & (1 << ((u8Timer-DRVPWM_TIMER4)<<3) ) )? 1 : 0;
00003a  4a08              LDR      r2,|L14.92|
00003c  6892              LDR      r2,[r2,#8]
00003e  1f0b              SUBS     r3,r1,#4
000040  00dc              LSLS     r4,r3,#3
000042  2301              MOVS     r3,#1
000044  40a3              LSLS     r3,r3,r4
000046  421a              TST      r2,r3
000048  d001              BEQ      |L14.78|
00004a  2201              MOVS     r2,#1
00004c  e000              B        |L14.80|
                  |L14.78|
00004e  2200              MOVS     r2,#0
                  |L14.80|
000050  4610              MOV      r0,r2
;;;309                break;  
000052  bf00              NOP      
                  |L14.84|
000054  bf00              NOP                            ;303
;;;310        }
;;;311        return status;
;;;312    }
000056  bd10              POP      {r4,pc}
;;;313    
                          ENDP

                  |L14.88|
                          DCD      0x40040000
                  |L14.92|
                          DCD      0x40140000

                          AREA ||i.DrvPWM_Open||, CODE, READONLY, ALIGN=2

                  DrvPWM_Open PROC
;;;1058   /*---------------------------------------------------------------------------------------------------------*/
;;;1059   void DrvPWM_Open(void)
000000  480c              LDR      r0,|L15.52|
;;;1060   { 
;;;1061       outp32(&SYSCLK->APBCLK, inp32(&SYSCLK->APBCLK) | 0x00F00000);
000002  6880              LDR      r0,[r0,#8]
000004  210f              MOVS     r1,#0xf
000006  0509              LSLS     r1,r1,#20
000008  4308              ORRS     r0,r0,r1
00000a  490a              LDR      r1,|L15.52|
00000c  6088              STR      r0,[r1,#8]
;;;1062       outp32(&SYS->IPRSTC2, inp32(&SYS->IPRSTC2) | 0x00300000);
00000e  2005              MOVS     r0,#5
000010  0700              LSLS     r0,r0,#28
000012  68c0              LDR      r0,[r0,#0xc]
000014  2103              MOVS     r1,#3
000016  0509              LSLS     r1,r1,#20
000018  4308              ORRS     r0,r0,r1
00001a  2105              MOVS     r1,#5
00001c  0709              LSLS     r1,r1,#28
00001e  60c8              STR      r0,[r1,#0xc]
;;;1063       outp32(&SYS->IPRSTC2, inp32(&SYS->IPRSTC2) & ~0x00300000);
000020  4608              MOV      r0,r1
000022  68c0              LDR      r0,[r0,#0xc]
000024  2103              MOVS     r1,#3
000026  0509              LSLS     r1,r1,#20
000028  4388              BICS     r0,r0,r1
00002a  2105              MOVS     r1,#5
00002c  0709              LSLS     r1,r1,#28
00002e  60c8              STR      r0,[r1,#0xc]
;;;1064   }
000030  4770              BX       lr
;;;1065   
                          ENDP

000032  0000              DCW      0x0000
                  |L15.52|
                          DCD      0x50000200

                          AREA ||i.DrvPWM_SelectClearLatchFlagOption||, CODE, READONLY, ALIGN=2

                  DrvPWM_SelectClearLatchFlagOption PROC
;;;1688   /*---------------------------------------------------------------------------------------------------------*/
;;;1689   int32_t DrvPWM_SelectClearLatchFlagOption(int32_t i32option)
000000  4601              MOV      r1,r0
;;;1690   {
;;;1691       PWMA->PBCR.BCn = 0;
000002  4811              LDR      r0,|L16.72|
000004  6bc0              LDR      r0,[r0,#0x3c]
000006  0840              LSRS     r0,r0,#1
000008  0040              LSLS     r0,r0,#1
00000a  4a0f              LDR      r2,|L16.72|
00000c  63d0              STR      r0,[r2,#0x3c]
;;;1692       if (PWMA->PBCR.BCn)
00000e  4610              MOV      r0,r2
000010  6bc0              LDR      r0,[r0,#0x3c]
000012  07c0              LSLS     r0,r0,#31
000014  0fc0              LSRS     r0,r0,#31
000016  d001              BEQ      |L16.28|
;;;1693       {
;;;1694           return E_DRVPWM_ERR_NO_SUPPORT;
000018  480c              LDR      r0,|L16.76|
                  |L16.26|
;;;1695       }
;;;1696       else
;;;1697       {
;;;1698           PWMA->PBCR.BCn = i32option;
;;;1699           PWMB->PBCR.BCn = i32option;
;;;1700           s_i32Option = i32option;        
;;;1701           return E_SUCCESS;
;;;1702       }
;;;1703   }
00001a  4770              BX       lr
                  |L16.28|
00001c  480a              LDR      r0,|L16.72|
00001e  6bc0              LDR      r0,[r0,#0x3c]         ;1698
000020  0840              LSRS     r0,r0,#1              ;1698
000022  0040              LSLS     r0,r0,#1              ;1698
000024  07ca              LSLS     r2,r1,#31             ;1698
000026  0fd2              LSRS     r2,r2,#31             ;1698
000028  4310              ORRS     r0,r0,r2              ;1698
00002a  4a07              LDR      r2,|L16.72|
00002c  63d0              STR      r0,[r2,#0x3c]         ;1698
00002e  4808              LDR      r0,|L16.80|
000030  6bc0              LDR      r0,[r0,#0x3c]         ;1699
000032  0840              LSRS     r0,r0,#1              ;1699
000034  0040              LSLS     r0,r0,#1              ;1699
000036  07ca              LSLS     r2,r1,#31             ;1699
000038  0fd2              LSRS     r2,r2,#31             ;1699
00003a  4310              ORRS     r0,r0,r2              ;1699
00003c  4a04              LDR      r2,|L16.80|
00003e  63d0              STR      r0,[r2,#0x3c]         ;1699
000040  4804              LDR      r0,|L16.84|
000042  6001              STR      r1,[r0,#0]            ;1700  ; s_i32Option
000044  2000              MOVS     r0,#0                 ;1701
000046  e7e8              B        |L16.26|
;;;1704   
                          ENDP

                  |L16.72|
                          DCD      0x40040000
                  |L16.76|
                          DCD      0xffff9102
                  |L16.80|
                          DCD      0x40140000
                  |L16.84|
                          DCD      s_i32Option

                          AREA ||i.DrvPWM_SelectClockSource||, CODE, READONLY, ALIGN=2

                  DrvPWM_SelectClockSource PROC
;;;1647   /*---------------------------------------------------------------------------------------------------------*/
;;;1648   void DrvPWM_SelectClockSource(uint8_t u8Timer, uint8_t u8ClockSourceSelector)
000000  b510              PUSH     {r4,lr}
;;;1649   {
;;;1650       switch (u8Timer & 0x07)
000002  0742              LSLS     r2,r0,#29
000004  0f52              LSRS     r2,r2,#29
000006  0013              MOVS     r3,r2
000008  f7fffffe          BL       __ARM_common_switch8
00000c  08050613          DCB      0x08,0x05,0x06,0x13
000010  141f202b          DCB      0x14,0x1f,0x20,0x2b
000014  2c37              DCB      0x2c,0x37
;;;1651       {
;;;1652           case DRVPWM_TIMER0:
;;;1653           case DRVPWM_TIMER1:
000016  bf00              NOP      
;;;1654               SYSCLK->CLKSEL1.PWM01_S = u8ClockSourceSelector;                
000018  4a19              LDR      r2,|L17.128|
00001a  6952              LDR      r2,[r2,#0x14]
00001c  2303              MOVS     r3,#3
00001e  071b              LSLS     r3,r3,#28
000020  439a              BICS     r2,r2,r3
000022  070b              LSLS     r3,r1,#28
000024  2403              MOVS     r4,#3
000026  0724              LSLS     r4,r4,#28
000028  4023              ANDS     r3,r3,r4
00002a  431a              ORRS     r2,r2,r3
00002c  4b14              LDR      r3,|L17.128|
00002e  615a              STR      r2,[r3,#0x14]
;;;1655               break;
000030  e023              B        |L17.122|
;;;1656           case DRVPWM_TIMER2:
;;;1657           case DRVPWM_TIMER3:
000032  bf00              NOP      
;;;1658               SYSCLK->CLKSEL1.PWM23_S = u8ClockSourceSelector;
000034  4a12              LDR      r2,|L17.128|
000036  6952              LDR      r2,[r2,#0x14]
000038  0092              LSLS     r2,r2,#2
00003a  0892              LSRS     r2,r2,#2
00003c  078b              LSLS     r3,r1,#30
00003e  0f9b              LSRS     r3,r3,#30
000040  079b              LSLS     r3,r3,#30
000042  431a              ORRS     r2,r2,r3
000044  4b0e              LDR      r3,|L17.128|
000046  615a              STR      r2,[r3,#0x14]
;;;1659               break;      
000048  e017              B        |L17.122|
;;;1660           case DRVPWM_TIMER4:
;;;1661           case DRVPWM_TIMER5:
00004a  bf00              NOP      
;;;1662               SYSCLK->CLKSEL2.PWM45_S = u8ClockSourceSelector;
00004c  4a0c              LDR      r2,|L17.128|
00004e  69d2              LDR      r2,[r2,#0x1c]
000050  2330              MOVS     r3,#0x30
000052  439a              BICS     r2,r2,r3
000054  010b              LSLS     r3,r1,#4
000056  2430              MOVS     r4,#0x30
000058  4023              ANDS     r3,r3,r4
00005a  431a              ORRS     r2,r2,r3
00005c  4b08              LDR      r3,|L17.128|
00005e  61da              STR      r2,[r3,#0x1c]
;;;1663               break;
000060  e00b              B        |L17.122|
;;;1664           case DRVPWM_TIMER6:
;;;1665           case DRVPWM_TIMER7:
000062  bf00              NOP      
;;;1666               SYSCLK->CLKSEL2.PWM67_S = u8ClockSourceSelector;
000064  4a06              LDR      r2,|L17.128|
000066  69d2              LDR      r2,[r2,#0x1c]
000068  23c0              MOVS     r3,#0xc0
00006a  439a              BICS     r2,r2,r3
00006c  018b              LSLS     r3,r1,#6
00006e  24c0              MOVS     r4,#0xc0
000070  4023              ANDS     r3,r3,r4
000072  431a              ORRS     r2,r2,r3
000074  4b02              LDR      r3,|L17.128|
000076  61da              STR      r2,[r3,#0x1c]
;;;1667               break;  
000078  bf00              NOP      
                  |L17.122|
00007a  bf00              NOP                            ;1655
;;;1668       }
;;;1669   }
00007c  bd10              POP      {r4,pc}
;;;1670   
                          ENDP

00007e  0000              DCW      0x0000
                  |L17.128|
                          DCD      0x50000200

                          AREA ||i.DrvPWM_SetTimerClk||, CODE, READONLY, ALIGN=2

                  DrvPWM_SetTimerClk PROC
;;;1258   /*---------------------------------------------------------------------------------------------------------*/
;;;1259   uint32_t DrvPWM_SetTimerClk(uint8_t u8Timer, S_DRVPWM_TIME_DATA_T *sPt)
000000  b5f0              PUSH     {r4-r7,lr}
;;;1260   {
000002  b089              SUB      sp,sp,#0x24
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
;;;1261       uint32_t    u32Frequency;
;;;1262       uint32_t    u32Freqout;
;;;1263       uint16_t    u16Duty, u16cnrData, u16cmrData;
;;;1264       uint8_t     u8EngineClk = 0;
000008  2000              MOVS     r0,#0
00000a  9003              STR      r0,[sp,#0xc]
;;;1265            
;;;1266       switch (u8Timer & 0x07)
00000c  0768              LSLS     r0,r5,#29
00000e  0f40              LSRS     r0,r0,#29
000010  0003              MOVS     r3,r0
000012  f7fffffe          BL       __ARM_common_switch8
000016  0805              DCB      0x08,0x05
000018  060c0d12          DCB      0x06,0x0c,0x0d,0x12
00001c  13191a20          DCB      0x13,0x19,0x1a,0x20
;;;1267       {
;;;1268           case DRVPWM_TIMER0:
;;;1269           case DRVPWM_TIMER1:
000020  bf00              NOP      
;;;1270               u8EngineClk = SYSCLK->CLKSEL1.PWM01_S;              
000022  48fc              LDR      r0,|L18.1044|
000024  6940              LDR      r0,[r0,#0x14]
000026  0080              LSLS     r0,r0,#2
000028  0f80              LSRS     r0,r0,#30
00002a  9003              STR      r0,[sp,#0xc]
;;;1271               break;
00002c  e013              B        |L18.86|
;;;1272           case DRVPWM_TIMER2:
;;;1273           case DRVPWM_TIMER3:
00002e  bf00              NOP      
;;;1274               u8EngineClk = SYSCLK->CLKSEL1.PWM23_S;
000030  48f8              LDR      r0,|L18.1044|
000032  6940              LDR      r0,[r0,#0x14]
000034  0f80              LSRS     r0,r0,#30
000036  9003              STR      r0,[sp,#0xc]
;;;1275               break;      
000038  e00d              B        |L18.86|
;;;1276           case DRVPWM_TIMER4:
;;;1277           case DRVPWM_TIMER5:
00003a  bf00              NOP      
;;;1278               u8EngineClk = SYSCLK->CLKSEL2.PWM45_S;              
00003c  48f5              LDR      r0,|L18.1044|
00003e  69c0              LDR      r0,[r0,#0x1c]
000040  0680              LSLS     r0,r0,#26
000042  0f80              LSRS     r0,r0,#30
000044  9003              STR      r0,[sp,#0xc]
;;;1279               break;
000046  e006              B        |L18.86|
;;;1280           case DRVPWM_TIMER6:
;;;1281           case DRVPWM_TIMER7:
000048  bf00              NOP      
;;;1282               u8EngineClk = SYSCLK->CLKSEL2.PWM67_S;
00004a  48f2              LDR      r0,|L18.1044|
00004c  69c0              LDR      r0,[r0,#0x1c]
00004e  0600              LSLS     r0,r0,#24
000050  0f80              LSRS     r0,r0,#30
000052  9003              STR      r0,[sp,#0xc]
;;;1283               break;  
000054  bf00              NOP      
                  |L18.86|
000056  bf00              NOP                            ;1271
;;;1284       }
;;;1285   
;;;1286   
;;;1287       if (u8EngineClk == 0)        /* external 12MHz crystal clock    */
000058  9803              LDR      r0,[sp,#0xc]
00005a  2800              CMP      r0,#0
00005c  d102              BNE      |L18.100|
;;;1288       {
;;;1289           u32Freqout = __XTAL;    
00005e  48ee              LDR      r0,|L18.1048|
000060  9007              STR      r0,[sp,#0x1c]
000062  e00e              B        |L18.130|
                  |L18.100|
;;;1290       }
;;;1291       else if(u8EngineClk == 1)    /* external 32KHz crystal clock */
000064  9803              LDR      r0,[sp,#0xc]
000066  2801              CMP      r0,#1
000068  d102              BNE      |L18.112|
;;;1292       {
;;;1293           u32Freqout = __RTC_XTAL;
00006a  03c0              LSLS     r0,r0,#15
00006c  9007              STR      r0,[sp,#0x1c]
00006e  e008              B        |L18.130|
                  |L18.112|
;;;1294       }
;;;1295       else if(u8EngineClk == 2)    /* HCLK clock */
000070  9803              LDR      r0,[sp,#0xc]
000072  2802              CMP      r0,#2
000074  d103              BNE      |L18.126|
;;;1296       {
;;;1297           u32Freqout = SystemCoreClock;
000076  48e9              LDR      r0,|L18.1052|
000078  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
00007a  9007              STR      r0,[sp,#0x1c]
00007c  e001              B        |L18.130|
                  |L18.126|
;;;1298       }
;;;1299       else                         /* internal 22MHz oscillator clock */
;;;1300       {
;;;1301           u32Freqout = __IRC22M;  
00007e  48e8              LDR      r0,|L18.1056|
000080  9007              STR      r0,[sp,#0x1c]
                  |L18.130|
;;;1302       }
;;;1303   
;;;1304       switch (u8Timer)
000082  002b              MOVS     r3,r5
000084  f7fffffe          BL       __ARM_common_switch8
000088  180d0e0f          DCB      0x18,0x0d,0x0e,0x0f
00008c  10242526          DCB      0x10,0x24,0x25,0x26
000090  27232323          DCB      0x27,0x23,0x23,0x23
000094  23232323          DCB      0x23,0x23,0x23,0x23
000098  233d6187          DCB      0x23,0x3d,0x61,0x87
00009c  abd1f8f0          DCB      0xab,0xd1,0xf8,0xf0
0000a0  ef23              DCB      0xef,0x23
;;;1305       {
;;;1306           case DRVPWM_TIMER0:
;;;1307           case DRVPWM_TIMER1:
0000a2  bf00              NOP      
;;;1308           case DRVPWM_TIMER2:
0000a4  bf00              NOP      
;;;1309           case DRVPWM_TIMER3:
0000a6  bf00              NOP      
;;;1310               outp32(&PWMA->PCR, (inp32(&PWMA->PCR) & ~(1 << (((u8Timer ) << 3) + 2) )) |(sPt->i32Inverter?(1 << ((u8Timer << 3) + 2)):0));
0000a8  48de              LDR      r0,|L18.1060|
0000aa  6880              LDR      r0,[r0,#8]
0000ac  00ea              LSLS     r2,r5,#3
0000ae  1c92              ADDS     r2,r2,#2
0000b0  2101              MOVS     r1,#1
0000b2  4091              LSLS     r1,r1,r2
0000b4  4388              BICS     r0,r0,r1
0000b6  68e1              LDR      r1,[r4,#0xc]
0000b8  2900              CMP      r1,#0
0000ba  d004              BEQ      |L18.198|
0000bc  00ea              LSLS     r2,r5,#3
0000be  1c92              ADDS     r2,r2,#2
0000c0  2101              MOVS     r1,#1
0000c2  4091              LSLS     r1,r1,r2
0000c4  e000              B        |L18.200|
                  |L18.198|
0000c6  2100              MOVS     r1,#0
                  |L18.200|
0000c8  4308              ORRS     r0,r0,r1
0000ca  49d6              LDR      r1,|L18.1060|
0000cc  6088              STR      r0,[r1,#8]
;;;1311               break;
0000ce  e143              B        |L18.856|
;;;1312           case DRVPWM_TIMER4:
;;;1313           case DRVPWM_TIMER5:
0000d0  bf00              NOP      
;;;1314           case DRVPWM_TIMER6:
0000d2  bf00              NOP      
;;;1315           case DRVPWM_TIMER7:
0000d4  bf00              NOP      
;;;1316               outp32(&PWMB->PCR, (inp32(&PWMB->PCR) & ~(1 << (((u8Timer-DRVPWM_TIMER4) << 3) + 2) )) |(sPt->i32Inverter?(1 << (((u8Timer-DRVPWM_TIMER4) << 3) + 2)):0));
0000d6  48d4              LDR      r0,|L18.1064|
0000d8  6880              LDR      r0,[r0,#8]
0000da  1f29              SUBS     r1,r5,#4
0000dc  00ca              LSLS     r2,r1,#3
0000de  1c92              ADDS     r2,r2,#2
0000e0  2101              MOVS     r1,#1
0000e2  4091              LSLS     r1,r1,r2
0000e4  4388              BICS     r0,r0,r1
0000e6  68e1              LDR      r1,[r4,#0xc]
0000e8  2900              CMP      r1,#0
0000ea  d005              BEQ      |L18.248|
0000ec  1f29              SUBS     r1,r5,#4
0000ee  00ca              LSLS     r2,r1,#3
0000f0  1c92              ADDS     r2,r2,#2
0000f2  2101              MOVS     r1,#1
0000f4  4091              LSLS     r1,r1,r2
0000f6  e000              B        |L18.250|
                  |L18.248|
0000f8  2100              MOVS     r1,#0
                  |L18.250|
0000fa  4308              ORRS     r0,r0,r1
0000fc  49ca              LDR      r1,|L18.1064|
0000fe  6088              STR      r0,[r1,#8]
;;;1317               break;
000100  e12a              B        |L18.856|
;;;1318   
;;;1319           case DRVPWM_CAP0:
;;;1320               if (s_i32Option)
000102  48ca              LDR      r0,|L18.1068|
000104  6800              LDR      r0,[r0,#0]  ; s_i32Option
000106  2800              CMP      r0,#0
000108  d00f              BEQ      |L18.298|
;;;1321                   outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & CCR_MASK) | (sPt->i32Inverter? BIT0 : 0) );
00010a  48c6              LDR      r0,|L18.1060|
00010c  3040              ADDS     r0,r0,#0x40
00010e  6900              LDR      r0,[r0,#0x10]
000110  49c7              LDR      r1,|L18.1072|
000112  4008              ANDS     r0,r0,r1
000114  68e1              LDR      r1,[r4,#0xc]
000116  2900              CMP      r1,#0
000118  d001              BEQ      |L18.286|
00011a  2101              MOVS     r1,#1
00011c  e000              B        |L18.288|
                  |L18.286|
00011e  2100              MOVS     r1,#0
                  |L18.288|
000120  4308              ORRS     r0,r0,r1
000122  49c0              LDR      r1,|L18.1060|
000124  3140              ADDS     r1,r1,#0x40
000126  6108              STR      r0,[r1,#0x10]
000128  e00e              B        |L18.328|
                  |L18.298|
;;;1322               else
;;;1323                   outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & ~(BIT4 | BIT20)) | (sPt->i32Inverter? BIT0 : 0)); 
00012a  48be              LDR      r0,|L18.1060|
00012c  3040              ADDS     r0,r0,#0x40
00012e  6900              LDR      r0,[r0,#0x10]
000130  49c0              LDR      r1,|L18.1076|
000132  4008              ANDS     r0,r0,r1
000134  68e1              LDR      r1,[r4,#0xc]
000136  2900              CMP      r1,#0
000138  d001              BEQ      |L18.318|
00013a  2101              MOVS     r1,#1
00013c  e000              B        |L18.320|
                  |L18.318|
00013e  2100              MOVS     r1,#0
                  |L18.320|
000140  4308              ORRS     r0,r0,r1
000142  49b8              LDR      r1,|L18.1060|
000144  3140              ADDS     r1,r1,#0x40
000146  6108              STR      r0,[r1,#0x10]
                  |L18.328|
;;;1324               break;
000148  e106              B        |L18.856|
;;;1325           case DRVPWM_CAP1:
;;;1326               if (s_i32Option)
00014a  48b8              LDR      r0,|L18.1068|
00014c  6800              LDR      r0,[r0,#0]  ; s_i32Option
00014e  2800              CMP      r0,#0
000150  d010              BEQ      |L18.372|
;;;1327                   outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & CCR_MASK) | (sPt->i32Inverter? BIT16 : 0));
000152  48b4              LDR      r0,|L18.1060|
000154  3040              ADDS     r0,r0,#0x40
000156  6900              LDR      r0,[r0,#0x10]
000158  49b5              LDR      r1,|L18.1072|
00015a  4008              ANDS     r0,r0,r1
00015c  68e1              LDR      r1,[r4,#0xc]
00015e  2900              CMP      r1,#0
000160  d002              BEQ      |L18.360|
000162  2101              MOVS     r1,#1
000164  0409              LSLS     r1,r1,#16
000166  e000              B        |L18.362|
                  |L18.360|
000168  2100              MOVS     r1,#0
                  |L18.362|
00016a  4308              ORRS     r0,r0,r1
00016c  49ad              LDR      r1,|L18.1060|
00016e  3140              ADDS     r1,r1,#0x40
000170  6108              STR      r0,[r1,#0x10]
000172  e00f              B        |L18.404|
                  |L18.372|
;;;1328               else
;;;1329                   outp32(&PWMA->CCR0, (inp32(&PWMA->CCR0) & ~(BIT4 | BIT20)) | (sPt->i32Inverter? BIT16 : 0));    
000174  48ab              LDR      r0,|L18.1060|
000176  3040              ADDS     r0,r0,#0x40
000178  6900              LDR      r0,[r0,#0x10]
00017a  49ae              LDR      r1,|L18.1076|
00017c  4008              ANDS     r0,r0,r1
00017e  68e1              LDR      r1,[r4,#0xc]
000180  2900              CMP      r1,#0
000182  d002              BEQ      |L18.394|
000184  2101              MOVS     r1,#1
000186  0409              LSLS     r1,r1,#16
000188  e000              B        |L18.396|
                  |L18.394|
00018a  2100              MOVS     r1,#0
                  |L18.396|
00018c  4308              ORRS     r0,r0,r1
00018e  49a5              LDR      r1,|L18.1060|
000190  3140              ADDS     r1,r1,#0x40
000192  6108              STR      r0,[r1,#0x10]
                  |L18.404|
;;;1330               break;
000194  e0e0              B        |L18.856|
;;;1331           case DRVPWM_CAP2:
;;;1332               if (s_i32Option)
000196  48a5              LDR      r0,|L18.1068|
000198  6800              LDR      r0,[r0,#0]  ; s_i32Option
00019a  2800              CMP      r0,#0
00019c  d00f              BEQ      |L18.446|
;;;1333                   outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & CCR_MASK) | (sPt->i32Inverter? BIT0 : 0));
00019e  48a1              LDR      r0,|L18.1060|
0001a0  3040              ADDS     r0,r0,#0x40
0001a2  6940              LDR      r0,[r0,#0x14]
0001a4  49a2              LDR      r1,|L18.1072|
0001a6  4008              ANDS     r0,r0,r1
0001a8  68e1              LDR      r1,[r4,#0xc]
0001aa  2900              CMP      r1,#0
0001ac  d001              BEQ      |L18.434|
0001ae  2101              MOVS     r1,#1
0001b0  e000              B        |L18.436|
                  |L18.434|
0001b2  2100              MOVS     r1,#0
                  |L18.436|
0001b4  4308              ORRS     r0,r0,r1
0001b6  499b              LDR      r1,|L18.1060|
0001b8  3140              ADDS     r1,r1,#0x40
0001ba  6148              STR      r0,[r1,#0x14]
0001bc  e00e              B        |L18.476|
                  |L18.446|
;;;1334               else
;;;1335                   outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & ~(BIT4 | BIT20)) | (sPt->i32Inverter? BIT0 : 0)); 
0001be  4899              LDR      r0,|L18.1060|
0001c0  3040              ADDS     r0,r0,#0x40
0001c2  6940              LDR      r0,[r0,#0x14]
0001c4  499b              LDR      r1,|L18.1076|
0001c6  4008              ANDS     r0,r0,r1
0001c8  68e1              LDR      r1,[r4,#0xc]
0001ca  2900              CMP      r1,#0
0001cc  d001              BEQ      |L18.466|
0001ce  2101              MOVS     r1,#1
0001d0  e000              B        |L18.468|
                  |L18.466|
0001d2  2100              MOVS     r1,#0
                  |L18.468|
0001d4  4308              ORRS     r0,r0,r1
0001d6  4993              LDR      r1,|L18.1060|
0001d8  3140              ADDS     r1,r1,#0x40
0001da  6148              STR      r0,[r1,#0x14]
                  |L18.476|
;;;1336               break;
0001dc  e0bc              B        |L18.856|
;;;1337           case DRVPWM_CAP3:
;;;1338               if (s_i32Option)
0001de  4893              LDR      r0,|L18.1068|
0001e0  6800              LDR      r0,[r0,#0]  ; s_i32Option
0001e2  2800              CMP      r0,#0
0001e4  d010              BEQ      |L18.520|
;;;1339                   outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & CCR_MASK) | (sPt->i32Inverter? BIT16 : 0));
0001e6  488f              LDR      r0,|L18.1060|
0001e8  3040              ADDS     r0,r0,#0x40
0001ea  6940              LDR      r0,[r0,#0x14]
0001ec  4990              LDR      r1,|L18.1072|
0001ee  4008              ANDS     r0,r0,r1
0001f0  68e1              LDR      r1,[r4,#0xc]
0001f2  2900              CMP      r1,#0
0001f4  d002              BEQ      |L18.508|
0001f6  2101              MOVS     r1,#1
0001f8  0409              LSLS     r1,r1,#16
0001fa  e000              B        |L18.510|
                  |L18.508|
0001fc  2100              MOVS     r1,#0
                  |L18.510|
0001fe  4308              ORRS     r0,r0,r1
000200  4988              LDR      r1,|L18.1060|
000202  3140              ADDS     r1,r1,#0x40
000204  6148              STR      r0,[r1,#0x14]
000206  e00f              B        |L18.552|
                  |L18.520|
;;;1340               else
;;;1341                   outp32(&PWMA->CCR2, (inp32(&PWMA->CCR2) & ~(BIT4 | BIT20)) | (sPt->i32Inverter? BIT16 : 0));
000208  4886              LDR      r0,|L18.1060|
00020a  3040              ADDS     r0,r0,#0x40
00020c  6940              LDR      r0,[r0,#0x14]
00020e  4989              LDR      r1,|L18.1076|
000210  4008              ANDS     r0,r0,r1
000212  68e1              LDR      r1,[r4,#0xc]
000214  2900              CMP      r1,#0
000216  d002              BEQ      |L18.542|
000218  2101              MOVS     r1,#1
00021a  0409              LSLS     r1,r1,#16
00021c  e000              B        |L18.544|
                  |L18.542|
00021e  2100              MOVS     r1,#0
                  |L18.544|
000220  4308              ORRS     r0,r0,r1
000222  4980              LDR      r1,|L18.1060|
000224  3140              ADDS     r1,r1,#0x40
000226  6148              STR      r0,[r1,#0x14]
                  |L18.552|
;;;1342               break;
000228  e096              B        |L18.856|
;;;1343           case DRVPWM_CAP4:
;;;1344               if (s_i32Option)
00022a  4880              LDR      r0,|L18.1068|
00022c  6800              LDR      r0,[r0,#0]  ; s_i32Option
00022e  2800              CMP      r0,#0
000230  d00f              BEQ      |L18.594|
;;;1345                   outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & CCR_MASK) | (sPt->i32Inverter? BIT0 : 0) );
000232  487d              LDR      r0,|L18.1064|
000234  3040              ADDS     r0,r0,#0x40
000236  6900              LDR      r0,[r0,#0x10]
000238  497d              LDR      r1,|L18.1072|
00023a  4008              ANDS     r0,r0,r1
00023c  68e1              LDR      r1,[r4,#0xc]
00023e  2900              CMP      r1,#0
000240  d001              BEQ      |L18.582|
000242  2101              MOVS     r1,#1
000244  e000              B        |L18.584|
                  |L18.582|
000246  2100              MOVS     r1,#0
                  |L18.584|
000248  4308              ORRS     r0,r0,r1
00024a  4977              LDR      r1,|L18.1064|
00024c  3140              ADDS     r1,r1,#0x40
00024e  6108              STR      r0,[r1,#0x10]
000250  e011              B        |L18.630|
                  |L18.594|
;;;1346               else
;;;1347                   outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & ~(BIT4 | BIT20)) | (sPt->i32Inverter? BIT0 : 0)); 
000252  4875              LDR      r0,|L18.1064|
000254  3040              ADDS     r0,r0,#0x40
000256  6900              LDR      r0,[r0,#0x10]
000258  4976              LDR      r1,|L18.1076|
00025a  4008              ANDS     r0,r0,r1
00025c  68e1              LDR      r1,[r4,#0xc]
00025e  2900              CMP      r1,#0
000260  d004              BEQ      |L18.620|
000262  2101              MOVS     r1,#1
000264  e003              B        |L18.622|
000266  e051              B        |L18.780|
000268  e02c              B        |L18.708|
00026a  e005              B        |L18.632|
                  |L18.620|
00026c  2100              MOVS     r1,#0
                  |L18.622|
00026e  4308              ORRS     r0,r0,r1
000270  496d              LDR      r1,|L18.1064|
000272  3140              ADDS     r1,r1,#0x40
000274  6108              STR      r0,[r1,#0x10]
                  |L18.630|
;;;1348               break;
000276  e06f              B        |L18.856|
                  |L18.632|
;;;1349           case DRVPWM_CAP5:
;;;1350               if (s_i32Option)
000278  486c              LDR      r0,|L18.1068|
00027a  6800              LDR      r0,[r0,#0]  ; s_i32Option
00027c  2800              CMP      r0,#0
00027e  d010              BEQ      |L18.674|
;;;1351                   outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & CCR_MASK) | (sPt->i32Inverter? BIT16 : 0));
000280  4869              LDR      r0,|L18.1064|
000282  3040              ADDS     r0,r0,#0x40
000284  6900              LDR      r0,[r0,#0x10]
000286  496a              LDR      r1,|L18.1072|
000288  4008              ANDS     r0,r0,r1
00028a  68e1              LDR      r1,[r4,#0xc]
00028c  2900              CMP      r1,#0
00028e  d002              BEQ      |L18.662|
000290  2101              MOVS     r1,#1
000292  0409              LSLS     r1,r1,#16
000294  e000              B        |L18.664|
                  |L18.662|
000296  2100              MOVS     r1,#0
                  |L18.664|
000298  4308              ORRS     r0,r0,r1
00029a  4963              LDR      r1,|L18.1064|
00029c  3140              ADDS     r1,r1,#0x40
00029e  6108              STR      r0,[r1,#0x10]
0002a0  e00f              B        |L18.706|
                  |L18.674|
;;;1352               else
;;;1353                   outp32(&PWMB->CCR0, (inp32(&PWMB->CCR0) & ~(BIT4 | BIT20)) | (sPt->i32Inverter? BIT16 : 0));
0002a2  4861              LDR      r0,|L18.1064|
0002a4  3040              ADDS     r0,r0,#0x40
0002a6  6900              LDR      r0,[r0,#0x10]
0002a8  4962              LDR      r1,|L18.1076|
0002aa  4008              ANDS     r0,r0,r1
0002ac  68e1              LDR      r1,[r4,#0xc]
0002ae  2900              CMP      r1,#0
0002b0  d002              BEQ      |L18.696|
0002b2  2101              MOVS     r1,#1
0002b4  0409              LSLS     r1,r1,#16
0002b6  e000              B        |L18.698|
                  |L18.696|
0002b8  2100              MOVS     r1,#0
                  |L18.698|
0002ba  4308              ORRS     r0,r0,r1
0002bc  495a              LDR      r1,|L18.1064|
0002be  3140              ADDS     r1,r1,#0x40
0002c0  6108              STR      r0,[r1,#0x10]
                  |L18.706|
;;;1354               break;
0002c2  e049              B        |L18.856|
                  |L18.708|
;;;1355           case DRVPWM_CAP6:
;;;1356               if (s_i32Option)
0002c4  4859              LDR      r0,|L18.1068|
0002c6  6800              LDR      r0,[r0,#0]  ; s_i32Option
0002c8  2800              CMP      r0,#0
0002ca  d00f              BEQ      |L18.748|
;;;1357                   outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & CCR_MASK) | (sPt->i32Inverter? BIT0 : 0));
0002cc  4856              LDR      r0,|L18.1064|
0002ce  3040              ADDS     r0,r0,#0x40
0002d0  6940              LDR      r0,[r0,#0x14]
0002d2  4957              LDR      r1,|L18.1072|
0002d4  4008              ANDS     r0,r0,r1
0002d6  68e1              LDR      r1,[r4,#0xc]
0002d8  2900              CMP      r1,#0
0002da  d001              BEQ      |L18.736|
0002dc  2101              MOVS     r1,#1
0002de  e000              B        |L18.738|
                  |L18.736|
0002e0  2100              MOVS     r1,#0
                  |L18.738|
0002e2  4308              ORRS     r0,r0,r1
0002e4  4950              LDR      r1,|L18.1064|
0002e6  3140              ADDS     r1,r1,#0x40
0002e8  6148              STR      r0,[r1,#0x14]
0002ea  e00e              B        |L18.778|
                  |L18.748|
;;;1358               else
;;;1359                   outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & ~(BIT4 | BIT20)) | (sPt->i32Inverter? BIT0 : 0));
0002ec  484e              LDR      r0,|L18.1064|
0002ee  3040              ADDS     r0,r0,#0x40
0002f0  6940              LDR      r0,[r0,#0x14]
0002f2  4950              LDR      r1,|L18.1076|
0002f4  4008              ANDS     r0,r0,r1
0002f6  68e1              LDR      r1,[r4,#0xc]
0002f8  2900              CMP      r1,#0
0002fa  d001              BEQ      |L18.768|
0002fc  2101              MOVS     r1,#1
0002fe  e000              B        |L18.770|
                  |L18.768|
000300  2100              MOVS     r1,#0
                  |L18.770|
000302  4308              ORRS     r0,r0,r1
000304  4948              LDR      r1,|L18.1064|
000306  3140              ADDS     r1,r1,#0x40
000308  6148              STR      r0,[r1,#0x14]
                  |L18.778|
;;;1360               break;
00030a  e025              B        |L18.856|
                  |L18.780|
;;;1361           case DRVPWM_CAP7:
;;;1362               if (s_i32Option)
00030c  4847              LDR      r0,|L18.1068|
00030e  6800              LDR      r0,[r0,#0]  ; s_i32Option
000310  2800              CMP      r0,#0
000312  d010              BEQ      |L18.822|
;;;1363                   outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & CCR_MASK) | (sPt->i32Inverter? BIT16 : 0));
000314  4844              LDR      r0,|L18.1064|
000316  3040              ADDS     r0,r0,#0x40
000318  6940              LDR      r0,[r0,#0x14]
00031a  4945              LDR      r1,|L18.1072|
00031c  4008              ANDS     r0,r0,r1
00031e  68e1              LDR      r1,[r4,#0xc]
000320  2900              CMP      r1,#0
000322  d002              BEQ      |L18.810|
000324  2101              MOVS     r1,#1
000326  0409              LSLS     r1,r1,#16
000328  e000              B        |L18.812|
                  |L18.810|
00032a  2100              MOVS     r1,#0
                  |L18.812|
00032c  4308              ORRS     r0,r0,r1
00032e  493e              LDR      r1,|L18.1064|
000330  3140              ADDS     r1,r1,#0x40
000332  6148              STR      r0,[r1,#0x14]
000334  e00f              B        |L18.854|
                  |L18.822|
;;;1364               else
;;;1365                   outp32(&PWMB->CCR2, (inp32(&PWMB->CCR2) & ~(BIT4 | BIT20)) | (sPt->i32Inverter? BIT16 : 0));
000336  483c              LDR      r0,|L18.1064|
000338  3040              ADDS     r0,r0,#0x40
00033a  6940              LDR      r0,[r0,#0x14]
00033c  493d              LDR      r1,|L18.1076|
00033e  4008              ANDS     r0,r0,r1
000340  68e1              LDR      r1,[r4,#0xc]
000342  2900              CMP      r1,#0
000344  d002              BEQ      |L18.844|
000346  2101              MOVS     r1,#1
000348  0409              LSLS     r1,r1,#16
00034a  e000              B        |L18.846|
                  |L18.844|
00034c  2100              MOVS     r1,#0
                  |L18.846|
00034e  4308              ORRS     r0,r0,r1
000350  4935              LDR      r1,|L18.1064|
000352  3140              ADDS     r1,r1,#0x40
000354  6148              STR      r0,[r1,#0x14]
                  |L18.854|
;;;1366               break;
000356  bf00              NOP      
                  |L18.856|
000358  bf00              NOP                            ;1311
;;;1367       } 
;;;1368   
;;;1369       switch (u8Timer & 0x07)
00035a  0768              LSLS     r0,r5,#29
00035c  0f40              LSRS     r0,r0,#29
00035e  0003              MOVS     r3,r0
000360  f7fffffe          BL       __ARM_common_switch8
000364  08050607          DCB      0x08,0x05,0x06,0x07
000368  081f2021          DCB      0x08,0x1f,0x20,0x21
00036c  223d              DCB      0x22,0x3d
;;;1370       {
;;;1371           case DRVPWM_TIMER0:
;;;1372           case DRVPWM_TIMER1:
00036e  bf00              NOP      
;;;1373           case DRVPWM_TIMER2:
000370  bf00              NOP      
;;;1374           case DRVPWM_TIMER3:
000372  bf00              NOP      
;;;1375               outp32(&PWMA->PCR, (inp32(&PWMA->PCR) & ~(1 <<(((u8Timer & 0x07) << 3) + 3))) | ( sPt->u8Mode? (1 <<(((u8Timer & 0x07) << 3) + 3)):0));
000374  482b              LDR      r0,|L18.1060|
000376  6882              LDR      r2,[r0,#8]
000378  0768              LSLS     r0,r5,#29
00037a  0e80              LSRS     r0,r0,#26
00037c  1cc0              ADDS     r0,r0,#3
00037e  2101              MOVS     r1,#1
000380  4081              LSLS     r1,r1,r0
000382  4610              MOV      r0,r2
000384  4388              BICS     r0,r0,r1
000386  7821              LDRB     r1,[r4,#0]
000388  2900              CMP      r1,#0
00038a  d005              BEQ      |L18.920|
00038c  0769              LSLS     r1,r5,#29
00038e  0e8a              LSRS     r2,r1,#26
000390  1cd2              ADDS     r2,r2,#3
000392  2101              MOVS     r1,#1
000394  4091              LSLS     r1,r1,r2
000396  e000              B        |L18.922|
                  |L18.920|
000398  2100              MOVS     r1,#0
                  |L18.922|
00039a  4308              ORRS     r0,r0,r1
00039c  4921              LDR      r1,|L18.1060|
00039e  6088              STR      r0,[r1,#8]
;;;1376               break;
0003a0  e01d              B        |L18.990|
;;;1377           case DRVPWM_TIMER4:
;;;1378           case DRVPWM_TIMER5:
0003a2  bf00              NOP      
;;;1379           case DRVPWM_TIMER6:
0003a4  bf00              NOP      
;;;1380           case DRVPWM_TIMER7:
0003a6  bf00              NOP      
;;;1381               outp32(&PWMB->PCR, (inp32(&PWMB->PCR) & ~(1 <<((((u8Timer & 0x07)-DRVPWM_TIMER4) << 3) + 3))) | ( sPt->u8Mode? (1 <<((((u8Timer & 0x07)-DRVPWM_TIMER4) << 3) + 3)):0));         
0003a8  481f              LDR      r0,|L18.1064|
0003aa  6882              LDR      r2,[r0,#8]
0003ac  0768              LSLS     r0,r5,#29
0003ae  0f40              LSRS     r0,r0,#29
0003b0  1f00              SUBS     r0,r0,#4
0003b2  00c0              LSLS     r0,r0,#3
0003b4  1cc0              ADDS     r0,r0,#3
0003b6  2101              MOVS     r1,#1
0003b8  4081              LSLS     r1,r1,r0
0003ba  4610              MOV      r0,r2
0003bc  4388              BICS     r0,r0,r1
0003be  7821              LDRB     r1,[r4,#0]
0003c0  2900              CMP      r1,#0
0003c2  d007              BEQ      |L18.980|
0003c4  0769              LSLS     r1,r5,#29
0003c6  0f49              LSRS     r1,r1,#29
0003c8  1f09              SUBS     r1,r1,#4
0003ca  00ca              LSLS     r2,r1,#3
0003cc  1cd2              ADDS     r2,r2,#3
0003ce  2101              MOVS     r1,#1
0003d0  4091              LSLS     r1,r1,r2
0003d2  e000              B        |L18.982|
                  |L18.980|
0003d4  2100              MOVS     r1,#0
                  |L18.982|
0003d6  4308              ORRS     r0,r0,r1
0003d8  4913              LDR      r1,|L18.1064|
0003da  6088              STR      r0,[r1,#8]
;;;1382               break;
0003dc  bf00              NOP      
                  |L18.990|
0003de  bf00              NOP                            ;1376
;;;1383       } 
;;;1384               
;;;1385       
;;;1386       if (sPt->u32Frequency == 0)
0003e0  6860              LDR      r0,[r4,#4]
0003e2  2800              CMP      r0,#0
0003e4  d17e              BNE      |L18.1252|
;;;1387       {   
;;;1388           uint8_t u8Divider = 1;
0003e6  2001              MOVS     r0,#1
0003e8  9002              STR      r0,[sp,#8]
;;;1389           uint32_t u32duty;
;;;1390           
;;;1391           switch (u8Timer & 0x07)
0003ea  0768              LSLS     r0,r5,#29
0003ec  0f40              LSRS     r0,r0,#29
0003ee  0003              MOVS     r3,r0
0003f0  f7fffffe          BL       __ARM_common_switch8
0003f4  08050622          DCB      0x08,0x05,0x06,0x22
0003f8  2331323b          DCB      0x23,0x31,0x32,0x3b
0003fc  3c4a              DCB      0x3c,0x4a
;;;1392           {
;;;1393               case DRVPWM_TIMER0:
;;;1394               case DRVPWM_TIMER1:
0003fe  bf00              NOP      
;;;1395                   PWMA->PPR.CP01 = sPt->u8PreScale;
000400  4808              LDR      r0,|L18.1060|
000402  6800              LDR      r0,[r0,#0]
000404  0a00              LSRS     r0,r0,#8
000406  0200              LSLS     r0,r0,#8
000408  78e1              LDRB     r1,[r4,#3]
00040a  4308              ORRS     r0,r0,r1
00040c  4905              LDR      r1,|L18.1060|
00040e  6008              STR      r0,[r1,#0]
;;;1396                   break;
000410  e03a              B        |L18.1160|
000412  0000              DCW      0x0000
                  |L18.1044|
                          DCD      0x50000200
                  |L18.1048|
                          DCD      0x00b71b00
                  |L18.1052|
                          DCD      SystemCoreClock
                  |L18.1056|
                          DCD      0x01518000
                  |L18.1060|
                          DCD      0x40040000
                  |L18.1064|
                          DCD      0x40140000
                  |L18.1068|
                          DCD      s_i32Option
                  |L18.1072|
                          DCD      0x000f000f
                  |L18.1076|
                          DCD      0xffefffef
;;;1397               case DRVPWM_TIMER2:
;;;1398               case DRVPWM_TIMER3:
000438  bf00              NOP      
;;;1399                   PWMA->PPR.CP23 = sPt->u8PreScale;
00043a  48f6              LDR      r0,|L18.2068|
00043c  6800              LDR      r0,[r0,#0]
00043e  21ff              MOVS     r1,#0xff
000440  0209              LSLS     r1,r1,#8
000442  4388              BICS     r0,r0,r1
000444  78e1              LDRB     r1,[r4,#3]
000446  0209              LSLS     r1,r1,#8
000448  22ff              MOVS     r2,#0xff
00044a  0212              LSLS     r2,r2,#8
00044c  4011              ANDS     r1,r1,r2
00044e  4308              ORRS     r0,r0,r1
000450  49f0              LDR      r1,|L18.2068|
000452  6008              STR      r0,[r1,#0]
;;;1400                   break;
000454  e018              B        |L18.1160|
;;;1401               case DRVPWM_TIMER4:
;;;1402               case DRVPWM_TIMER5:
000456  bf00              NOP      
;;;1403                   PWMB->PPR.CP01 = sPt->u8PreScale;
000458  48ef              LDR      r0,|L18.2072|
00045a  6800              LDR      r0,[r0,#0]
00045c  0a00              LSRS     r0,r0,#8
00045e  0200              LSLS     r0,r0,#8
000460  78e1              LDRB     r1,[r4,#3]
000462  4308              ORRS     r0,r0,r1
000464  49ec              LDR      r1,|L18.2072|
000466  6008              STR      r0,[r1,#0]
;;;1404                   break;
000468  e00e              B        |L18.1160|
;;;1405               case DRVPWM_TIMER6:
;;;1406               case DRVPWM_TIMER7:
00046a  bf00              NOP      
;;;1407                   PWMB->PPR.CP23 = sPt->u8PreScale;
00046c  48ea              LDR      r0,|L18.2072|
00046e  6800              LDR      r0,[r0,#0]
000470  21ff              MOVS     r1,#0xff
000472  0209              LSLS     r1,r1,#8
000474  4388              BICS     r0,r0,r1
000476  78e1              LDRB     r1,[r4,#3]
000478  0209              LSLS     r1,r1,#8
00047a  22ff              MOVS     r2,#0xff
00047c  0212              LSLS     r2,r2,#8
00047e  4011              ANDS     r1,r1,r2
000480  4308              ORRS     r0,r0,r1
000482  49e5              LDR      r1,|L18.2072|
000484  6008              STR      r0,[r1,#0]
;;;1408                   break;
000486  bf00              NOP      
                  |L18.1160|
000488  bf00              NOP                            ;1396
;;;1409           } 
;;;1410           
;;;1411           u32duty = sPt->u32Duty * sPt->u8HighPulseRatio / 100 - 1;
00048a  7862              LDRB     r2,[r4,#1]
00048c  68a1              LDR      r1,[r4,#8]
00048e  4351              MULS     r1,r2,r1
000490  4608              MOV      r0,r1
000492  2164              MOVS     r1,#0x64
000494  f7fffffe          BL       __aeabi_uidivmod
000498  1e46              SUBS     r6,r0,#1
;;;1412           
;;;1413           switch (u8Timer & 0x07)
00049a  0768              LSLS     r0,r5,#29
00049c  0f40              LSRS     r0,r0,#29
00049e  0003              MOVS     r3,r0
0004a0  f7fffffe          BL       __ARM_common_switch8
0004a4  08050607          DCB      0x08,0x05,0x06,0x07
0004a8  082b2c2d          DCB      0x08,0x2b,0x2c,0x2d
0004ac  2e55              DCB      0x2e,0x55
;;;1414           {
;;;1415               case DRVPWM_TIMER0:
;;;1416               case DRVPWM_TIMER1:
0004ae  bf00              NOP      
;;;1417               case DRVPWM_TIMER2:
0004b0  bf00              NOP      
;;;1418               case DRVPWM_TIMER3:
0004b2  bf00              NOP      
;;;1419                   outp32(&PWMA->CSR, (inp32(&PWMA->CSR) & ~(0x7 << ((u8Timer & 0x07)<<2) )) | ((sPt->u8ClockSelector & 0x7) << ((u8Timer & 0x07)<<2)));   
0004b4  48d7              LDR      r0,|L18.2068|
0004b6  6840              LDR      r0,[r0,#4]
0004b8  0769              LSLS     r1,r5,#29
0004ba  0eca              LSRS     r2,r1,#27
0004bc  2107              MOVS     r1,#7
0004be  4091              LSLS     r1,r1,r2
0004c0  4388              BICS     r0,r0,r1
0004c2  78a1              LDRB     r1,[r4,#2]
0004c4  0749              LSLS     r1,r1,#29
0004c6  0f49              LSRS     r1,r1,#29
0004c8  076a              LSLS     r2,r5,#29
0004ca  0ed2              LSRS     r2,r2,#27
0004cc  4091              LSLS     r1,r1,r2
0004ce  4308              ORRS     r0,r0,r1
0004d0  49d0              LDR      r1,|L18.2068|
0004d2  6048              STR      r0,[r1,#4]
;;;1420                   outp32(PWMA_CNR0 + (u8Timer & 0x07) * 12, (sPt->u32Duty - 1));
0004d4  68a0              LDR      r0,[r4,#8]
0004d6  1e40              SUBS     r0,r0,#1
0004d8  0769              LSLS     r1,r5,#29
0004da  0f49              LSRS     r1,r1,#29
0004dc  220c              MOVS     r2,#0xc
0004de  4351              MULS     r1,r2,r1
0004e0  4acc              LDR      r2,|L18.2068|
0004e2  e000              B        |L18.1254|
                  |L18.1252|
0004e4  e05b              B        |L18.1438|
                  |L18.1254|
0004e6  1889              ADDS     r1,r1,r2
0004e8  60c8              STR      r0,[r1,#0xc]
;;;1421                   outp32(PWMA_CMR0 + (u8Timer & 0x07) * 12, u32duty);
0004ea  0768              LSLS     r0,r5,#29
0004ec  0f40              LSRS     r0,r0,#29
0004ee  210c              MOVS     r1,#0xc
0004f0  4348              MULS     r0,r1,r0
0004f2  4611              MOV      r1,r2
0004f4  1840              ADDS     r0,r0,r1
0004f6  6106              STR      r6,[r0,#0x10]
;;;1422                   break;
0004f8  e029              B        |L18.1358|
;;;1423               case DRVPWM_TIMER4:
;;;1424               case DRVPWM_TIMER5:
0004fa  bf00              NOP      
;;;1425               case DRVPWM_TIMER6:
0004fc  bf00              NOP      
;;;1426               case DRVPWM_TIMER7:
0004fe  bf00              NOP      
;;;1427                   outp32(&PWMB->CSR, (inp32(&PWMB->CSR) & ~(0x7 << (((u8Timer & 0x07)-DRVPWM_TIMER4)<<2) )) | ((sPt->u8ClockSelector & 0x7) << (((u8Timer & 0x07)-DRVPWM_TIMER4)<<2)));   
000500  48c5              LDR      r0,|L18.2072|
000502  6840              LDR      r0,[r0,#4]
000504  0769              LSLS     r1,r5,#29
000506  0f49              LSRS     r1,r1,#29
000508  1f09              SUBS     r1,r1,#4
00050a  008a              LSLS     r2,r1,#2
00050c  2107              MOVS     r1,#7
00050e  4091              LSLS     r1,r1,r2
000510  4388              BICS     r0,r0,r1
000512  78a1              LDRB     r1,[r4,#2]
000514  0749              LSLS     r1,r1,#29
000516  0f49              LSRS     r1,r1,#29
000518  076a              LSLS     r2,r5,#29
00051a  0f52              LSRS     r2,r2,#29
00051c  1f12              SUBS     r2,r2,#4
00051e  0092              LSLS     r2,r2,#2
000520  4091              LSLS     r1,r1,r2
000522  4308              ORRS     r0,r0,r1
000524  49bc              LDR      r1,|L18.2072|
000526  6048              STR      r0,[r1,#4]
;;;1428                   outp32(PWMB_CNR0 + ((u8Timer & 0x07)-DRVPWM_TIMER4) * 12, (sPt->u32Duty - 1));
000528  68a1              LDR      r1,[r4,#8]
00052a  1e49              SUBS     r1,r1,#1
00052c  0768              LSLS     r0,r5,#29
00052e  0f40              LSRS     r0,r0,#29
000530  1f00              SUBS     r0,r0,#4
000532  220c              MOVS     r2,#0xc
000534  4350              MULS     r0,r2,r0
000536  4ab8              LDR      r2,|L18.2072|
000538  1880              ADDS     r0,r0,r2
00053a  60c1              STR      r1,[r0,#0xc]
;;;1429                   outp32(PWMB_CMR0 + ((u8Timer & 0x07)-DRVPWM_TIMER4) * 12, u32duty);
00053c  0768              LSLS     r0,r5,#29
00053e  0f40              LSRS     r0,r0,#29
000540  1f00              SUBS     r0,r0,#4
000542  210c              MOVS     r1,#0xc
000544  4348              MULS     r0,r1,r0
000546  4611              MOV      r1,r2
000548  1840              ADDS     r0,r0,r1
00054a  6106              STR      r6,[r0,#0x10]
;;;1430                   break;
00054c  bf00              NOP      
                  |L18.1358|
00054e  bf00              NOP                            ;1422
;;;1431           }
;;;1432                   
;;;1433           switch (sPt->u8ClockSelector)
000550  78a0              LDRB     r0,[r4,#2]
000552  0003              MOVS     r3,r0
000554  f7fffffe          BL       __ARM_common_switch8
000558  05070a0d          DCB      0x05,0x07,0x0a,0x0d
00055c  10041300          DCB      0x10,0x04,0x13,0x00
;;;1434           {
;;;1435               case DRVPWM_CLOCK_DIV_1:
;;;1436                   u8Divider = 1;
000560  2001              MOVS     r0,#1
000562  9002              STR      r0,[sp,#8]
;;;1437                   break;
000564  e00b              B        |L18.1406|
;;;1438               case DRVPWM_CLOCK_DIV_2:
;;;1439                   u8Divider = 2;          
000566  2002              MOVS     r0,#2
000568  9002              STR      r0,[sp,#8]
;;;1440                   break;          
00056a  e008              B        |L18.1406|
;;;1441               case DRVPWM_CLOCK_DIV_4:
;;;1442                   u8Divider = 4;          
00056c  2004              MOVS     r0,#4
00056e  9002              STR      r0,[sp,#8]
;;;1443                   break;          
000570  e005              B        |L18.1406|
;;;1444               case DRVPWM_CLOCK_DIV_8:
;;;1445                   u8Divider = 8;          
000572  2008              MOVS     r0,#8
000574  9002              STR      r0,[sp,#8]
;;;1446                   break;          
000576  e002              B        |L18.1406|
;;;1447               case DRVPWM_CLOCK_DIV_16: 
;;;1448                   u8Divider = 16;         
000578  2010              MOVS     r0,#0x10
00057a  9002              STR      r0,[sp,#8]
;;;1449                   break;      
00057c  bf00              NOP      
                  |L18.1406|
00057e  bf00              NOP                            ;1437
;;;1450           }       
;;;1451           
;;;1452           u32Frequency = u32Freqout / (sPt->u8PreScale + 1) / u8Divider / sPt->u32Duty;
000580  78e0              LDRB     r0,[r4,#3]
000582  1c41              ADDS     r1,r0,#1
000584  9807              LDR      r0,[sp,#0x1c]
000586  f7fffffe          BL       __aeabi_uidivmod
00058a  9001              STR      r0,[sp,#4]
00058c  9902              LDR      r1,[sp,#8]
00058e  f7fffffe          BL       __aeabi_uidivmod
000592  4607              MOV      r7,r0
000594  68a1              LDR      r1,[r4,#8]
000596  f7fffffe          BL       __aeabi_uidivmod
00059a  9008              STR      r0,[sp,#0x20]
;;;1453       }
00059c  e137              B        |L18.2062|
                  |L18.1438|
;;;1454       else
;;;1455       {
;;;1456           uint8_t  u8Divider;
;;;1457           uint16_t u16PreScale;
;;;1458           
;;;1459           u32Frequency =  u32Freqout / sPt->u32Frequency;     
00059e  6861              LDR      r1,[r4,#4]
0005a0  9807              LDR      r0,[sp,#0x1c]
0005a2  f7fffffe          BL       __aeabi_uidivmod
0005a6  9008              STR      r0,[sp,#0x20]
;;;1460           
;;;1461           if (u32Frequency > 0x10000000)
0005a8  2101              MOVS     r1,#1
0005aa  0709              LSLS     r1,r1,#28
0005ac  9808              LDR      r0,[sp,#0x20]
0005ae  4288              CMP      r0,r1
0005b0  d902              BLS      |L18.1464|
;;;1462               return 0;
0005b2  2000              MOVS     r0,#0
                  |L18.1460|
;;;1463               
;;;1464           u8Divider = 1;          
;;;1465               
;;;1466           if (u32Frequency < 0x20000)
;;;1467               u16PreScale = 2;    
;;;1468           else
;;;1469           {
;;;1470               u16PreScale = u32Frequency / 65536; 
;;;1471                               
;;;1472               if (u32Frequency / u16PreScale > 65536)
;;;1473                   u16PreScale++;
;;;1474               
;;;1475               if (u16PreScale > 256)
;;;1476               {
;;;1477                   uint8_t u8i = 0;
;;;1478                   
;;;1479                   u16PreScale = 256;
;;;1480                   u32Frequency = u32Frequency / u16PreScale;
;;;1481                   
;;;1482                   u8Divider = u32Frequency / 65536;
;;;1483                   
;;;1484                   if(u32Frequency / u8Divider > 65536)
;;;1485                       u8Divider++;
;;;1486                   
;;;1487                   while(1)    
;;;1488                   {
;;;1489                       if((1 << u8i++) > u8Divider)
;;;1490                           break;
;;;1491                   }
;;;1492                   
;;;1493                   u8Divider = 1 << (u8i - 1);
;;;1494                   
;;;1495                   if (u8Divider > 16)
;;;1496                       return 0;   
;;;1497                       
;;;1498                   u32Frequency = u32Frequency * u16PreScale;
;;;1499               }       
;;;1500                       
;;;1501           }
;;;1502           u16Duty = (uint16_t )(u32Frequency/u16PreScale/u8Divider);
;;;1503           
;;;1504           u32Frequency = (u32Freqout / u16PreScale / u8Divider) / u16Duty;    
;;;1505                   
;;;1506           switch (u8Timer & 0x07)
;;;1507           {
;;;1508               case DRVPWM_TIMER0:
;;;1509               case DRVPWM_TIMER1:
;;;1510                   PWMA->PPR.CP01 = u16PreScale - 1;
;;;1511                   break;
;;;1512               case DRVPWM_TIMER2:
;;;1513               case DRVPWM_TIMER3:
;;;1514                   PWMA->PPR.CP23 = u16PreScale - 1;
;;;1515                   break;
;;;1516               case DRVPWM_TIMER4:
;;;1517               case DRVPWM_TIMER5:
;;;1518                   PWMB->PPR.CP01 = u16PreScale - 1;
;;;1519                   break;
;;;1520               case DRVPWM_TIMER6:
;;;1521               case DRVPWM_TIMER7:
;;;1522                   PWMB->PPR.CP23 = u16PreScale - 1;
;;;1523                   break;
;;;1524           }
;;;1525           
;;;1526           switch(u8Divider)
;;;1527           {
;;;1528               case 1:
;;;1529                   u8Divider = DRVPWM_CLOCK_DIV_1;
;;;1530                   break;
;;;1531               case 2:
;;;1532                   u8Divider = DRVPWM_CLOCK_DIV_2;  
;;;1533                   break;          
;;;1534               case 4:
;;;1535                   u8Divider = DRVPWM_CLOCK_DIV_4;  
;;;1536                   break;          
;;;1537               case 8:
;;;1538                   u8Divider = DRVPWM_CLOCK_DIV_8;  
;;;1539                   break;          
;;;1540               case 16:
;;;1541                   u8Divider = DRVPWM_CLOCK_DIV_16; 
;;;1542                   break;      
;;;1543           }               
;;;1544                       
;;;1545           if (u8Timer & 0x10)
;;;1546           {
;;;1547               u16cnrData = sPt->u32Duty - 1; 
;;;1548               u16cmrData = sPt->u32Duty * sPt->u8HighPulseRatio / 100 - 1;        
;;;1549           }
;;;1550           else
;;;1551           {
;;;1552               u16cnrData = u16Duty - 1;
;;;1553               u16cmrData = u16Duty * sPt->u8HighPulseRatio / 100 - 1;
;;;1554           }
;;;1555           
;;;1556           switch (u8Timer & 0x07)
;;;1557           {
;;;1558               case DRVPWM_TIMER0:
;;;1559               case DRVPWM_TIMER1:
;;;1560               case DRVPWM_TIMER2:
;;;1561               case DRVPWM_TIMER3:
;;;1562                   outp32(&PWMA->CSR, (inp32(&PWMA->CSR) & ~(0x7 << ((u8Timer & 0x07)<<2) )) | ((u8Divider & 0x7) << ((u8Timer & 0x07)<<2)));  
;;;1563                   outp32(PWMA_CNR0 + (u8Timer & 0x07) * 12, u16cnrData);          
;;;1564                   outp32(PWMA_CMR0 + (u8Timer & 0x07) * 12, u16cmrData);    
;;;1565                   break;
;;;1566               case DRVPWM_TIMER4:
;;;1567               case DRVPWM_TIMER5:
;;;1568               case DRVPWM_TIMER6:
;;;1569               case DRVPWM_TIMER7:
;;;1570                   outp32(&PWMB->CSR, (inp32(&PWMB->CSR) & ~(0x7 << (((u8Timer & 0x07)-DRVPWM_TIMER4)<<2) )) | ((u8Divider & 0x7) << (((u8Timer & 0x07)-DRVPWM_TIMER4)<<2)));  
;;;1571                   outp32(PWMB_CNR0 + ((u8Timer & 0x07)-DRVPWM_TIMER4) * 12, u16cnrData);          
;;;1572                   outp32(PWMB_CMR0 + ((u8Timer & 0x07)-DRVPWM_TIMER4) * 12, u16cmrData);  
;;;1573                   break;
;;;1574           }
;;;1575       }
;;;1576       
;;;1577       return u32Frequency;
;;;1578   }
0005b4  b009              ADD      sp,sp,#0x24
0005b6  bdf0              POP      {r4-r7,pc}
                  |L18.1464|
0005b8  2701              MOVS     r7,#1                 ;1464
0005ba  0479              LSLS     r1,r7,#17             ;1466
0005bc  9808              LDR      r0,[sp,#0x20]         ;1466
0005be  4288              CMP      r0,r1                 ;1466
0005c0  d201              BCS      |L18.1478|
0005c2  2602              MOVS     r6,#2                 ;1467
0005c4  e03d              B        |L18.1602|
                  |L18.1478|
0005c6  9808              LDR      r0,[sp,#0x20]         ;1470
0005c8  0c06              LSRS     r6,r0,#16             ;1470
0005ca  4631              MOV      r1,r6                 ;1472
0005cc  9808              LDR      r0,[sp,#0x20]         ;1472
0005ce  f7fffffe          BL       __aeabi_uidivmod
0005d2  2101              MOVS     r1,#1                 ;1472
0005d4  0409              LSLS     r1,r1,#16             ;1472
0005d6  4288              CMP      r0,r1                 ;1472
0005d8  d901              BLS      |L18.1502|
0005da  1c70              ADDS     r0,r6,#1              ;1473
0005dc  b286              UXTH     r6,r0                 ;1473
                  |L18.1502|
0005de  20ff              MOVS     r0,#0xff              ;1475
0005e0  3001              ADDS     r0,#1                 ;1475
0005e2  4286              CMP      r6,r0                 ;1475
0005e4  dd2d              BLE      |L18.1602|
0005e6  2000              MOVS     r0,#0                 ;1477
0005e8  9002              STR      r0,[sp,#8]            ;1477
0005ea  26ff              MOVS     r6,#0xff              ;1479
0005ec  3601              ADDS     r6,#1                 ;1479
0005ee  4631              MOV      r1,r6                 ;1480
0005f0  9808              LDR      r0,[sp,#0x20]         ;1480
0005f2  f7fffffe          BL       __aeabi_uidivmod
0005f6  9008              STR      r0,[sp,#0x20]         ;1480
0005f8  9808              LDR      r0,[sp,#0x20]         ;1482
0005fa  0200              LSLS     r0,r0,#8              ;1482
0005fc  0e07              LSRS     r7,r0,#24             ;1482
0005fe  4639              MOV      r1,r7                 ;1484
000600  9808              LDR      r0,[sp,#0x20]         ;1484
000602  f7fffffe          BL       __aeabi_uidivmod
000606  0231              LSLS     r1,r6,#8              ;1484
000608  4288              CMP      r0,r1                 ;1484
00060a  d901              BLS      |L18.1552|
00060c  1c78              ADDS     r0,r7,#1              ;1485
00060e  b2c7              UXTB     r7,r0                 ;1485
                  |L18.1552|
000610  e008              B        |L18.1572|
                  |L18.1554|
000612  9802              LDR      r0,[sp,#8]            ;1489
000614  1c41              ADDS     r1,r0,#1              ;1489
000616  b2c9              UXTB     r1,r1                 ;1489
000618  9102              STR      r1,[sp,#8]            ;1489
00061a  2101              MOVS     r1,#1                 ;1489
00061c  4081              LSLS     r1,r1,r0              ;1489
00061e  42b9              CMP      r1,r7                 ;1489
000620  dd00              BLE      |L18.1572|
000622  e000              B        |L18.1574|
                  |L18.1572|
000624  e7f5              B        |L18.1554|
                  |L18.1574|
000626  bf00              NOP                            ;1490
000628  9802              LDR      r0,[sp,#8]            ;1493
00062a  1e40              SUBS     r0,r0,#1              ;1493
00062c  2101              MOVS     r1,#1                 ;1493
00062e  4081              LSLS     r1,r1,r0              ;1493
000630  b2cf              UXTB     r7,r1                 ;1493
000632  2f10              CMP      r7,#0x10              ;1495
000634  dd01              BLE      |L18.1594|
000636  2000              MOVS     r0,#0                 ;1496
000638  e7bc              B        |L18.1460|
                  |L18.1594|
00063a  9808              LDR      r0,[sp,#0x20]         ;1498
00063c  4370              MULS     r0,r6,r0              ;1498
00063e  9008              STR      r0,[sp,#0x20]         ;1498
000640  bf00              NOP                            ;1499
                  |L18.1602|
000642  4631              MOV      r1,r6                 ;1502
000644  9808              LDR      r0,[sp,#0x20]         ;1502
000646  f7fffffe          BL       __aeabi_uidivmod
00064a  4639              MOV      r1,r7                 ;1502
00064c  9002              STR      r0,[sp,#8]            ;1502
00064e  f7fffffe          BL       __aeabi_uidivmod
000652  b280              UXTH     r0,r0                 ;1502
000654  9006              STR      r0,[sp,#0x18]         ;1502
000656  4631              MOV      r1,r6                 ;1504
000658  9807              LDR      r0,[sp,#0x1c]         ;1504
00065a  f7fffffe          BL       __aeabi_uidivmod
00065e  4639              MOV      r1,r7                 ;1504
000660  9001              STR      r0,[sp,#4]            ;1504
000662  f7fffffe          BL       __aeabi_uidivmod
000666  9002              STR      r0,[sp,#8]            ;1504
000668  9906              LDR      r1,[sp,#0x18]         ;1504
00066a  f7fffffe          BL       __aeabi_uidivmod
00066e  9008              STR      r0,[sp,#0x20]         ;1504
000670  0768              LSLS     r0,r5,#29             ;1506
000672  0f40              LSRS     r0,r0,#29             ;1506
000674  0003              MOVS     r3,r0                 ;1506
000676  f7fffffe          BL       __ARM_common_switch8
00067a  0805              DCB      0x08,0x05
00067c  0610111f          DCB      0x06,0x10,0x11,0x1f
000680  202a2b39          DCB      0x20,0x2a,0x2b,0x39
000684  bf00              NOP                            ;1509
000686  4863              LDR      r0,|L18.2068|
000688  6800              LDR      r0,[r0,#0]            ;1510
00068a  0a00              LSRS     r0,r0,#8              ;1510
00068c  0200              LSLS     r0,r0,#8              ;1510
00068e  1e71              SUBS     r1,r6,#1              ;1510
000690  b2c9              UXTB     r1,r1                 ;1510
000692  4308              ORRS     r0,r0,r1              ;1510
000694  495f              LDR      r1,|L18.2068|
000696  6008              STR      r0,[r1,#0]            ;1510
000698  e028              B        |L18.1772|
00069a  bf00              NOP                            ;1513
00069c  485d              LDR      r0,|L18.2068|
00069e  6800              LDR      r0,[r0,#0]            ;1514
0006a0  21ff              MOVS     r1,#0xff              ;1514
0006a2  0209              LSLS     r1,r1,#8              ;1514
0006a4  4388              BICS     r0,r0,r1              ;1514
0006a6  1e71              SUBS     r1,r6,#1              ;1514
0006a8  0209              LSLS     r1,r1,#8              ;1514
0006aa  22ff              MOVS     r2,#0xff              ;1514
0006ac  0212              LSLS     r2,r2,#8              ;1514
0006ae  4011              ANDS     r1,r1,r2              ;1514
0006b0  4308              ORRS     r0,r0,r1              ;1514
0006b2  4958              LDR      r1,|L18.2068|
0006b4  6008              STR      r0,[r1,#0]            ;1514
0006b6  e019              B        |L18.1772|
0006b8  bf00              NOP                            ;1517
0006ba  4857              LDR      r0,|L18.2072|
0006bc  6800              LDR      r0,[r0,#0]            ;1518
0006be  0a00              LSRS     r0,r0,#8              ;1518
0006c0  0200              LSLS     r0,r0,#8              ;1518
0006c2  1e71              SUBS     r1,r6,#1              ;1518
0006c4  b2c9              UXTB     r1,r1                 ;1518
0006c6  4308              ORRS     r0,r0,r1              ;1518
0006c8  4953              LDR      r1,|L18.2072|
0006ca  6008              STR      r0,[r1,#0]            ;1518
0006cc  e00e              B        |L18.1772|
0006ce  bf00              NOP                            ;1521
0006d0  4851              LDR      r0,|L18.2072|
0006d2  6800              LDR      r0,[r0,#0]            ;1522
0006d4  21ff              MOVS     r1,#0xff              ;1522
0006d6  0209              LSLS     r1,r1,#8              ;1522
0006d8  4388              BICS     r0,r0,r1              ;1522
0006da  1e71              SUBS     r1,r6,#1              ;1522
0006dc  0209              LSLS     r1,r1,#8              ;1522
0006de  22ff              MOVS     r2,#0xff              ;1522
0006e0  0212              LSLS     r2,r2,#8              ;1522
0006e2  4011              ANDS     r1,r1,r2              ;1522
0006e4  4308              ORRS     r0,r0,r1              ;1522
0006e6  494c              LDR      r1,|L18.2072|
0006e8  6008              STR      r0,[r1,#0]            ;1522
0006ea  bf00              NOP                            ;1523
                  |L18.1772|
0006ec  bf00              NOP                            ;1511
0006ee  2f04              CMP      r7,#4                 ;1526
0006f0  d00e              BEQ      |L18.1808|
0006f2  dc04              BGT      |L18.1790|
0006f4  2f01              CMP      r7,#1                 ;1526
0006f6  d007              BEQ      |L18.1800|
0006f8  2f02              CMP      r7,#2                 ;1526
0006fa  d10f              BNE      |L18.1820|
0006fc  e006              B        |L18.1804|
                  |L18.1790|
0006fe  2f08              CMP      r7,#8                 ;1526
000700  d008              BEQ      |L18.1812|
000702  2f10              CMP      r7,#0x10              ;1526
000704  d10a              BNE      |L18.1820|
000706  e007              B        |L18.1816|
                  |L18.1800|
000708  2704              MOVS     r7,#4                 ;1529
00070a  e007              B        |L18.1820|
                  |L18.1804|
00070c  2700              MOVS     r7,#0                 ;1532
00070e  e005              B        |L18.1820|
                  |L18.1808|
000710  2701              MOVS     r7,#1                 ;1535
000712  e003              B        |L18.1820|
                  |L18.1812|
000714  2702              MOVS     r7,#2                 ;1538
000716  e001              B        |L18.1820|
                  |L18.1816|
000718  2703              MOVS     r7,#3                 ;1541
00071a  bf00              NOP                            ;1542
                  |L18.1820|
00071c  bf00              NOP                            ;1530
00071e  2010              MOVS     r0,#0x10              ;1545
000720  4205              TST      r5,r0                 ;1545
000722  d00e              BEQ      |L18.1858|
000724  8920              LDRH     r0,[r4,#8]            ;1547
000726  1e40              SUBS     r0,r0,#1              ;1547
000728  b280              UXTH     r0,r0                 ;1547
00072a  9005              STR      r0,[sp,#0x14]         ;1547
00072c  7862              LDRB     r2,[r4,#1]            ;1548
00072e  68a1              LDR      r1,[r4,#8]            ;1548
000730  4351              MULS     r1,r2,r1              ;1548
000732  4608              MOV      r0,r1                 ;1548
000734  2164              MOVS     r1,#0x64              ;1548
000736  f7fffffe          BL       __aeabi_uidivmod
00073a  1e40              SUBS     r0,r0,#1              ;1548
00073c  b280              UXTH     r0,r0                 ;1548
00073e  9004              STR      r0,[sp,#0x10]         ;1548
000740  e00d              B        |L18.1886|
                  |L18.1858|
000742  9806              LDR      r0,[sp,#0x18]         ;1552
000744  1e40              SUBS     r0,r0,#1              ;1552
000746  b280              UXTH     r0,r0                 ;1552
000748  9005              STR      r0,[sp,#0x14]         ;1552
00074a  7861              LDRB     r1,[r4,#1]            ;1553
00074c  9a06              LDR      r2,[sp,#0x18]         ;1553
00074e  4351              MULS     r1,r2,r1              ;1553
000750  4608              MOV      r0,r1                 ;1553
000752  2164              MOVS     r1,#0x64              ;1553
000754  f7fffffe          BL       __aeabi_idivmod
000758  1e40              SUBS     r0,r0,#1              ;1553
00075a  b280              UXTH     r0,r0                 ;1553
00075c  9004              STR      r0,[sp,#0x10]         ;1553
                  |L18.1886|
00075e  0768              LSLS     r0,r5,#29             ;1556
000760  0f40              LSRS     r0,r0,#29             ;1556
000762  0003              MOVS     r3,r0                 ;1556
000764  f7fffffe          BL       __ARM_common_switch8
000768  08050607          DCB      0x08,0x05,0x06,0x07
00076c  0828292a          DCB      0x08,0x28,0x29,0x2a
000770  2b51              DCB      0x2b,0x51
000772  bf00              NOP                            ;1559
000774  bf00              NOP                            ;1560
000776  bf00              NOP                            ;1561
000778  4826              LDR      r0,|L18.2068|
00077a  6840              LDR      r0,[r0,#4]            ;1562
00077c  0769              LSLS     r1,r5,#29             ;1562
00077e  0eca              LSRS     r2,r1,#27             ;1562
000780  2107              MOVS     r1,#7                 ;1562
000782  4091              LSLS     r1,r1,r2              ;1562
000784  4388              BICS     r0,r0,r1              ;1562
000786  0779              LSLS     r1,r7,#29             ;1562
000788  0f49              LSRS     r1,r1,#29             ;1562
00078a  076a              LSLS     r2,r5,#29             ;1562
00078c  0ed2              LSRS     r2,r2,#27             ;1562
00078e  4091              LSLS     r1,r1,r2              ;1562
000790  4308              ORRS     r0,r0,r1              ;1562
000792  4920              LDR      r1,|L18.2068|
000794  6048              STR      r0,[r1,#4]            ;1562
000796  0769              LSLS     r1,r5,#29             ;1563
000798  0f49              LSRS     r1,r1,#29             ;1563
00079a  220c              MOVS     r2,#0xc               ;1563
00079c  4351              MULS     r1,r2,r1              ;1563
00079e  4a1d              LDR      r2,|L18.2068|
0007a0  1889              ADDS     r1,r1,r2              ;1563
0007a2  9805              LDR      r0,[sp,#0x14]         ;1563
0007a4  60c8              STR      r0,[r1,#0xc]          ;1563
0007a6  0769              LSLS     r1,r5,#29             ;1564
0007a8  0f49              LSRS     r1,r1,#29             ;1564
0007aa  220c              MOVS     r2,#0xc               ;1564
0007ac  4351              MULS     r1,r2,r1              ;1564
0007ae  4a19              LDR      r2,|L18.2068|
0007b0  1889              ADDS     r1,r1,r2              ;1564
0007b2  9804              LDR      r0,[sp,#0x10]         ;1564
0007b4  6108              STR      r0,[r1,#0x10]         ;1564
0007b6  e028              B        |L18.2058|
0007b8  bf00              NOP                            ;1567
0007ba  bf00              NOP                            ;1568
0007bc  bf00              NOP                            ;1569
0007be  4816              LDR      r0,|L18.2072|
0007c0  6840              LDR      r0,[r0,#4]            ;1570
0007c2  0769              LSLS     r1,r5,#29             ;1570
0007c4  0f49              LSRS     r1,r1,#29             ;1570
0007c6  1f09              SUBS     r1,r1,#4              ;1570
0007c8  008a              LSLS     r2,r1,#2              ;1570
0007ca  2107              MOVS     r1,#7                 ;1570
0007cc  4091              LSLS     r1,r1,r2              ;1570
0007ce  4388              BICS     r0,r0,r1              ;1570
0007d0  0779              LSLS     r1,r7,#29             ;1570
0007d2  0f49              LSRS     r1,r1,#29             ;1570
0007d4  076a              LSLS     r2,r5,#29             ;1570
0007d6  0f52              LSRS     r2,r2,#29             ;1570
0007d8  1f12              SUBS     r2,r2,#4              ;1570
0007da  0092              LSLS     r2,r2,#2              ;1570
0007dc  4091              LSLS     r1,r1,r2              ;1570
0007de  4308              ORRS     r0,r0,r1              ;1570
0007e0  490d              LDR      r1,|L18.2072|
0007e2  6048              STR      r0,[r1,#4]            ;1570
0007e4  0768              LSLS     r0,r5,#29             ;1571
0007e6  0f40              LSRS     r0,r0,#29             ;1571
0007e8  1f00              SUBS     r0,r0,#4              ;1571
0007ea  220c              MOVS     r2,#0xc               ;1571
0007ec  4350              MULS     r0,r2,r0              ;1571
0007ee  4a0a              LDR      r2,|L18.2072|
0007f0  1880              ADDS     r0,r0,r2              ;1571
0007f2  9905              LDR      r1,[sp,#0x14]         ;1571
0007f4  60c1              STR      r1,[r0,#0xc]          ;1571
0007f6  0768              LSLS     r0,r5,#29             ;1572
0007f8  0f40              LSRS     r0,r0,#29             ;1572
0007fa  1f00              SUBS     r0,r0,#4              ;1572
0007fc  220c              MOVS     r2,#0xc               ;1572
0007fe  4350              MULS     r0,r2,r0              ;1572
000800  4a05              LDR      r2,|L18.2072|
000802  1880              ADDS     r0,r0,r2              ;1572
000804  9904              LDR      r1,[sp,#0x10]         ;1572
000806  6101              STR      r1,[r0,#0x10]         ;1572
000808  bf00              NOP                            ;1573
                  |L18.2058|
00080a  bf00              NOP                            ;1565
00080c  bf00              NOP                            ;1575
                  |L18.2062|
00080e  9808              LDR      r0,[sp,#0x20]         ;1577
000810  e6d0              B        |L18.1460|
;;;1579   
                          ENDP

000812  0000              DCW      0x0000
                  |L18.2068|
                          DCD      0x40040000
                  |L18.2072|
                          DCD      0x40140000

                          AREA ||i.DrvPWM_SetTimerCounter||, CODE, READONLY, ALIGN=2

                  DrvPWM_SetTimerCounter PROC
;;;327    /*---------------------------------------------------------------------------------------------------------*/
;;;328    void DrvPWM_SetTimerCounter(uint8_t u8Timer, uint16_t u16Counter)
000000  0700              LSLS     r0,r0,#28
;;;329    {   
;;;330        u8Timer &= 0x0F;
000002  0f00              LSRS     r0,r0,#28
;;;331        
;;;332        if (u8Timer >= DRVPWM_TIMER4)
000004  2804              CMP      r0,#4
000006  db06              BLT      |L19.22|
;;;333        {
;;;334            *((__IO uint32_t *) (PWMB_CNR0 + (u8Timer - DRVPWM_TIMER4) * 12)) = u16Counter;
000008  1f02              SUBS     r2,r0,#4
00000a  230c              MOVS     r3,#0xc
00000c  435a              MULS     r2,r3,r2
00000e  4b06              LDR      r3,|L19.40|
000010  18d2              ADDS     r2,r2,r3
000012  60d1              STR      r1,[r2,#0xc]
000014  e006              B        |L19.36|
                  |L19.22|
;;;335        }
;;;336        else
;;;337        {
;;;338            *((__IO uint32_t *) (PWMA_CNR0 + (u8Timer & 0x7) * 12)) = u16Counter;   
000016  0742              LSLS     r2,r0,#29
000018  0f52              LSRS     r2,r2,#29
00001a  230c              MOVS     r3,#0xc
00001c  435a              MULS     r2,r3,r2
00001e  4b03              LDR      r3,|L19.44|
000020  18d2              ADDS     r2,r2,r3
000022  60d1              STR      r1,[r2,#0xc]
                  |L19.36|
;;;339        }
;;;340    }
000024  4770              BX       lr
;;;341    
                          ENDP

000026  0000              DCW      0x0000
                  |L19.40|
                          DCD      0x40140000
                  |L19.44|
                          DCD      0x40040000

                          AREA ||i.DrvPWM_SetTimerIO||, CODE, READONLY, ALIGN=2

                  DrvPWM_SetTimerIO PROC
;;;1595   /*---------------------------------------------------------------------------------------------------------*/
;;;1596   void DrvPWM_SetTimerIO(uint8_t u8Timer, int32_t i32Enable)
000000  b510              PUSH     {r4,lr}
;;;1597   {
;;;1598       if (i32Enable)
000002  2900              CMP      r1,#0
000004  d02d              BEQ      |L20.98|
;;;1599       {
;;;1600           if (u8Timer & 0x10)
000006  2210              MOVS     r2,#0x10
000008  4210              TST      r0,r2
00000a  d016              BEQ      |L20.58|
;;;1601           {
;;;1602               if (u8Timer & 0x04)
00000c  2204              MOVS     r2,#4
00000e  4210              TST      r0,r2
000010  d009              BEQ      |L20.38|
;;;1603                   PWMB->CAPENR = PWMB->CAPENR | (1 << (u8Timer - DRVPWM_CAP4));
000012  4a2b              LDR      r2,|L20.192|
000014  6b92              LDR      r2,[r2,#0x38]
000016  4603              MOV      r3,r0
000018  3b14              SUBS     r3,r3,#0x14
00001a  2401              MOVS     r4,#1
00001c  409c              LSLS     r4,r4,r3
00001e  4322              ORRS     r2,r2,r4
000020  4b27              LDR      r3,|L20.192|
000022  639a              STR      r2,[r3,#0x38]
000024  e04a              B        |L20.188|
                  |L20.38|
;;;1604               else
;;;1605                   PWMA->CAPENR = PWMA->CAPENR | (1 << (u8Timer & 0x07));          
000026  4a27              LDR      r2,|L20.196|
000028  6b92              LDR      r2,[r2,#0x38]
00002a  0744              LSLS     r4,r0,#29
00002c  0f64              LSRS     r4,r4,#29
00002e  2301              MOVS     r3,#1
000030  40a3              LSLS     r3,r3,r4
000032  431a              ORRS     r2,r2,r3
000034  4b23              LDR      r3,|L20.196|
000036  639a              STR      r2,[r3,#0x38]
000038  e040              B        |L20.188|
                  |L20.58|
;;;1606           }
;;;1607           else
;;;1608           {
;;;1609               if (u8Timer & 0x04)
00003a  2204              MOVS     r2,#4
00003c  4210              TST      r0,r2
00003e  d008              BEQ      |L20.82|
;;;1610                   outp32(&PWMB->POE, inp32(&PWMB->POE)  | (1 << (u8Timer-DRVPWM_TIMER4)));
000040  4a1f              LDR      r2,|L20.192|
000042  6bd2              LDR      r2,[r2,#0x3c]
000044  1f03              SUBS     r3,r0,#4
000046  2401              MOVS     r4,#1
000048  409c              LSLS     r4,r4,r3
00004a  4322              ORRS     r2,r2,r4
00004c  4b1c              LDR      r3,|L20.192|
00004e  63da              STR      r2,[r3,#0x3c]
000050  e034              B        |L20.188|
                  |L20.82|
;;;1611               else
;;;1612                   outp32(&PWMA->POE, inp32(&PWMA->POE)  | (1 << u8Timer));    
000052  4a1c              LDR      r2,|L20.196|
000054  6bd2              LDR      r2,[r2,#0x3c]
000056  2301              MOVS     r3,#1
000058  4083              LSLS     r3,r3,r0
00005a  431a              ORRS     r2,r2,r3
00005c  4b19              LDR      r3,|L20.196|
00005e  63da              STR      r2,[r3,#0x3c]
000060  e02c              B        |L20.188|
                  |L20.98|
;;;1613           }
;;;1614       }
;;;1615       else
;;;1616       {
;;;1617           if (u8Timer & 0x10)         
000062  2210              MOVS     r2,#0x10
000064  4210              TST      r0,r2
000066  d016              BEQ      |L20.150|
;;;1618           {
;;;1619               if (u8Timer & 0x04)
000068  2204              MOVS     r2,#4
00006a  4210              TST      r0,r2
00006c  d009              BEQ      |L20.130|
;;;1620                   PWMB->CAPENR = PWMB->CAPENR & ~(1 << (u8Timer - DRVPWM_CAP4));
00006e  4a14              LDR      r2,|L20.192|
000070  6b92              LDR      r2,[r2,#0x38]
000072  4603              MOV      r3,r0
000074  3b14              SUBS     r3,r3,#0x14
000076  2401              MOVS     r4,#1
000078  409c              LSLS     r4,r4,r3
00007a  43a2              BICS     r2,r2,r4
00007c  4b10              LDR      r3,|L20.192|
00007e  639a              STR      r2,[r3,#0x38]
000080  e01c              B        |L20.188|
                  |L20.130|
;;;1621               else
;;;1622                   PWMA->CAPENR = PWMA->CAPENR & ~(1 << (u8Timer & 0x07));         
000082  4a10              LDR      r2,|L20.196|
000084  6b92              LDR      r2,[r2,#0x38]
000086  0744              LSLS     r4,r0,#29
000088  0f64              LSRS     r4,r4,#29
00008a  2301              MOVS     r3,#1
00008c  40a3              LSLS     r3,r3,r4
00008e  439a              BICS     r2,r2,r3
000090  4b0c              LDR      r3,|L20.196|
000092  639a              STR      r2,[r3,#0x38]
000094  e012              B        |L20.188|
                  |L20.150|
;;;1623           }
;;;1624           else
;;;1625           {
;;;1626               if (u8Timer & 0x04)
000096  2204              MOVS     r2,#4
000098  4210              TST      r0,r2
00009a  d008              BEQ      |L20.174|
;;;1627                   outp32(&PWMB->POE, inp32(&PWMB->POE)  & ~(1 << (u8Timer-DRVPWM_TIMER4)));
00009c  4a08              LDR      r2,|L20.192|
00009e  6bd3              LDR      r3,[r2,#0x3c]
0000a0  1f04              SUBS     r4,r0,#4
0000a2  2201              MOVS     r2,#1
0000a4  40a2              LSLS     r2,r2,r4
0000a6  4393              BICS     r3,r3,r2
0000a8  4a05              LDR      r2,|L20.192|
0000aa  63d3              STR      r3,[r2,#0x3c]
0000ac  e006              B        |L20.188|
                  |L20.174|
;;;1628               else
;;;1629                   outp32(&PWMA->POE, inp32(&PWMA->POE)  & ~(1 << u8Timer));           
0000ae  4a05              LDR      r2,|L20.196|
0000b0  6bd2              LDR      r2,[r2,#0x3c]
0000b2  2301              MOVS     r3,#1
0000b4  4083              LSLS     r3,r3,r0
0000b6  439a              BICS     r2,r2,r3
0000b8  4b02              LDR      r3,|L20.196|
0000ba  63da              STR      r2,[r3,#0x3c]
                  |L20.188|
;;;1630           }
;;;1631       }
;;;1632   }
0000bc  bd10              POP      {r4,pc}
;;;1633   
                          ENDP

0000be  0000              DCW      0x0000
                  |L20.192|
                          DCD      0x40140040
                  |L20.196|
                          DCD      0x40040040

                          AREA ||i.NVIC_DisableIRQ||, CODE, READONLY, ALIGN=2

                  NVIC_DisableIRQ PROC
;;;809     */
;;;810    static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
000000  06c2              LSLS     r2,r0,#27
;;;811    {
;;;812      NVIC->ICER[0] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
000002  0ed2              LSRS     r2,r2,#27
000004  2101              MOVS     r1,#1
000006  4091              LSLS     r1,r1,r2
000008  4a01              LDR      r2,|L21.16|
00000a  6011              STR      r1,[r2,#0]
;;;813    }
00000c  4770              BX       lr
;;;814    
                          ENDP

00000e  0000              DCW      0x0000
                  |L21.16|
                          DCD      0xe000e180

                          AREA ||i.NVIC_EnableIRQ||, CODE, READONLY, ALIGN=2

                  NVIC_EnableIRQ PROC
;;;796     */
;;;797    static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
000000  06c2              LSLS     r2,r0,#27
;;;798    {
;;;799      NVIC->ISER[0] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
000002  0ed2              LSRS     r2,r2,#27
000004  2101              MOVS     r1,#1
000006  4091              LSLS     r1,r1,r2
000008  4a01              LDR      r2,|L22.16|
00000a  6011              STR      r1,[r2,#0]
;;;800    }
00000c  4770              BX       lr
;;;801    
                          ENDP

00000e  0000              DCW      0x0000
                  |L22.16|
                          DCD      0xe000e100

                          AREA ||i.NVIC_SetPriority||, CODE, READONLY, ALIGN=2

                  NVIC_SetPriority PROC
;;;866     */
;;;867    static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
000000  b510              PUSH     {r4,lr}
;;;868    {
;;;869      if(IRQn < 0) {
000002  2800              CMP      r0,#0
000004  da19              BGE      |L23.58|
;;;870        SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) | 
000006  4a1a              LDR      r2,|L23.112|
000008  0703              LSLS     r3,r0,#28
00000a  0f1b              LSRS     r3,r3,#28
00000c  3b08              SUBS     r3,r3,#8
00000e  089b              LSRS     r3,r3,#2
000010  009b              LSLS     r3,r3,#2
000012  58d2              LDR      r2,[r2,r3]
000014  0783              LSLS     r3,r0,#30
000016  0edc              LSRS     r4,r3,#27
000018  23ff              MOVS     r3,#0xff
00001a  40a3              LSLS     r3,r3,r4
00001c  439a              BICS     r2,r2,r3
00001e  078b              LSLS     r3,r1,#30
000020  0e1b              LSRS     r3,r3,#24
000022  0784              LSLS     r4,r0,#30
000024  0ee4              LSRS     r4,r4,#27
000026  40a3              LSLS     r3,r3,r4
000028  431a              ORRS     r2,r2,r3
00002a  4b11              LDR      r3,|L23.112|
00002c  0704              LSLS     r4,r0,#28
00002e  0f24              LSRS     r4,r4,#28
000030  3c08              SUBS     r4,r4,#8
000032  08a4              LSRS     r4,r4,#2
000034  00a4              LSLS     r4,r4,#2
000036  511a              STR      r2,[r3,r4]
000038  e018              B        |L23.108|
                  |L23.58|
;;;871            (((priority << (8 - __NVIC_PRIO_BITS)) & 0xFF) << _BIT_SHIFT(IRQn)); }
;;;872      else {
;;;873        NVIC->IPR[_IP_IDX(IRQn)] = (NVIC->IPR[_IP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
00003a  4a0e              LDR      r2,|L23.116|
00003c  2303              MOVS     r3,#3
00003e  021b              LSLS     r3,r3,#8
000040  18d2              ADDS     r2,r2,r3
000042  0883              LSRS     r3,r0,#2
000044  009b              LSLS     r3,r3,#2
000046  58d2              LDR      r2,[r2,r3]
000048  0783              LSLS     r3,r0,#30
00004a  0edc              LSRS     r4,r3,#27
00004c  23ff              MOVS     r3,#0xff
00004e  40a3              LSLS     r3,r3,r4
000050  439a              BICS     r2,r2,r3
000052  078b              LSLS     r3,r1,#30
000054  0e1b              LSRS     r3,r3,#24
000056  0784              LSLS     r4,r0,#30
000058  0ee4              LSRS     r4,r4,#27
00005a  40a3              LSLS     r3,r3,r4
00005c  431a              ORRS     r2,r2,r3
00005e  4b05              LDR      r3,|L23.116|
000060  2403              MOVS     r4,#3
000062  0224              LSLS     r4,r4,#8
000064  191b              ADDS     r3,r3,r4
000066  0884              LSRS     r4,r0,#2
000068  00a4              LSLS     r4,r4,#2
00006a  511a              STR      r2,[r3,r4]
                  |L23.108|
;;;874            (((priority << (8 - __NVIC_PRIO_BITS)) & 0xFF) << _BIT_SHIFT(IRQn)); }
;;;875    }
00006c  bd10              POP      {r4,pc}
;;;876    
                          ENDP

00006e  0000              DCW      0x0000
                  |L23.112|
                          DCD      0xe000ed1c
                  |L23.116|
                          DCD      0xe000e100

                          AREA ||i.PWMA_IRQHandler||, CODE, READONLY, ALIGN=2

                  PWMA_IRQHandler PROC
;;;65     /*---------------------------------------------------------------------------------------------------------*/
;;;66     void PWMA_IRQHandler(void)
000000  b570              PUSH     {r4-r6,lr}
;;;67     {    
;;;68         uint32_t u32pwmIntFlag, u32CapIntFlag0, u32CapIntFlag1;
;;;69         
;;;70         /* Handle PWMA Timer function */    
;;;71         u32pwmIntFlag = *((__IO uint32_t *) &PWMA->PIIR);
000002  4853              LDR      r0,|L24.336|
000004  6844              LDR      r4,[r0,#4]
;;;72         
;;;73         if (u32pwmIntFlag & BIT0)
000006  07e0              LSLS     r0,r4,#31
000008  0fc0              LSRS     r0,r0,#31
00000a  d009              BEQ      |L24.32|
;;;74         {
;;;75             *((__IO uint32_t *) &PWMA->PIIR) = BIT0;         
00000c  2001              MOVS     r0,#1
00000e  4950              LDR      r1,|L24.336|
000010  6048              STR      r0,[r1,#4]
;;;76             if (g_sDrvPWMAHandler.pfnPWM0CallBack != NULL)
000012  4850              LDR      r0,|L24.340|
000014  6800              LDR      r0,[r0,#0]  ; g_sDrvPWMAHandler
000016  2800              CMP      r0,#0
000018  d002              BEQ      |L24.32|
;;;77             {                           
;;;78                 g_sDrvPWMAHandler.pfnPWM0CallBack();
00001a  494e              LDR      r1,|L24.340|
00001c  6808              LDR      r0,[r1,#0]  ; g_sDrvPWMAHandler
00001e  4780              BLX      r0
                  |L24.32|
;;;79             }   
;;;80         }   
;;;81     
;;;82         if (u32pwmIntFlag & BIT1)
000020  2002              MOVS     r0,#2
000022  4204              TST      r4,r0
000024  d008              BEQ      |L24.56|
;;;83         {
;;;84             *((__IO uint32_t *) &PWMA->PIIR) = BIT1;         
000026  494a              LDR      r1,|L24.336|
000028  6048              STR      r0,[r1,#4]
;;;85             if (g_sDrvPWMAHandler.pfnPWM1CallBack != NULL)
00002a  484a              LDR      r0,|L24.340|
00002c  6880              LDR      r0,[r0,#8]  ; g_sDrvPWMAHandler
00002e  2800              CMP      r0,#0
000030  d002              BEQ      |L24.56|
;;;86             {
;;;87                 g_sDrvPWMAHandler.pfnPWM1CallBack();
000032  4948              LDR      r1,|L24.340|
000034  6888              LDR      r0,[r1,#8]  ; g_sDrvPWMAHandler
000036  4780              BLX      r0
                  |L24.56|
;;;88             }   
;;;89         }   
;;;90         
;;;91         if (u32pwmIntFlag & BIT2)
000038  2004              MOVS     r0,#4
00003a  4204              TST      r4,r0
00003c  d008              BEQ      |L24.80|
;;;92         {
;;;93             *((__IO uint32_t *) &PWMA->PIIR) = BIT2;         
00003e  4944              LDR      r1,|L24.336|
000040  6048              STR      r0,[r1,#4]
;;;94             if (g_sDrvPWMAHandler.pfnPWM2CallBack != NULL)
000042  4844              LDR      r0,|L24.340|
000044  6900              LDR      r0,[r0,#0x10]  ; g_sDrvPWMAHandler
000046  2800              CMP      r0,#0
000048  d002              BEQ      |L24.80|
;;;95             {
;;;96                 g_sDrvPWMAHandler.pfnPWM2CallBack();
00004a  4942              LDR      r1,|L24.340|
00004c  6908              LDR      r0,[r1,#0x10]  ; g_sDrvPWMAHandler
00004e  4780              BLX      r0
                  |L24.80|
;;;97             }   
;;;98         }
;;;99     
;;;100        if (u32pwmIntFlag & BIT3)
000050  2008              MOVS     r0,#8
000052  4204              TST      r4,r0
000054  d008              BEQ      |L24.104|
;;;101        {
;;;102            *((__IO uint32_t *) &PWMA->PIIR) = BIT3;         
000056  493e              LDR      r1,|L24.336|
000058  6048              STR      r0,[r1,#4]
;;;103            if (g_sDrvPWMAHandler.pfnPWM3CallBack != NULL)
00005a  483e              LDR      r0,|L24.340|
00005c  6980              LDR      r0,[r0,#0x18]  ; g_sDrvPWMAHandler
00005e  2800              CMP      r0,#0
000060  d002              BEQ      |L24.104|
;;;104            {
;;;105                g_sDrvPWMAHandler.pfnPWM3CallBack();
000062  493c              LDR      r1,|L24.340|
000064  6988              LDR      r0,[r1,#0x18]  ; g_sDrvPWMAHandler
000066  4780              BLX      r0
                  |L24.104|
;;;106            }   
;;;107        }
;;;108        
;;;109        /* Handle PWMA Capture function */
;;;110        u32CapIntFlag0 = *((__IO uint32_t *) &PWMA->CCR0);
000068  4839              LDR      r0,|L24.336|
00006a  6905              LDR      r5,[r0,#0x10]
;;;111        u32CapIntFlag1 = *((__IO uint32_t *) &PWMA->CCR2);
00006c  6946              LDR      r6,[r0,#0x14]
;;;112    
;;;113        if (u32CapIntFlag0 & BIT4) 
00006e  2010              MOVS     r0,#0x10
000070  4205              TST      r5,r0
000072  d018              BEQ      |L24.166|
;;;114        {
;;;115            if (s_i32Option)
000074  4838              LDR      r0,|L24.344|
000076  6800              LDR      r0,[r0,#0]  ; s_i32Option
000078  2800              CMP      r0,#0
00007a  d006              BEQ      |L24.138|
;;;116                outp32(&PWMA->CCR0, inp32(&PWMA->CCR0) & (CCR_MASK | BIT4));
00007c  4834              LDR      r0,|L24.336|
00007e  6900              LDR      r0,[r0,#0x10]
000080  4936              LDR      r1,|L24.348|
000082  4008              ANDS     r0,r0,r1
000084  4932              LDR      r1,|L24.336|
000086  6108              STR      r0,[r1,#0x10]
000088  e006              B        |L24.152|
                  |L24.138|
;;;117            else
;;;118                outp32(&PWMA->CCR0, inp32(&PWMA->CCR0) & ~BIT20);   
00008a  4831              LDR      r0,|L24.336|
00008c  6900              LDR      r0,[r0,#0x10]
00008e  2101              MOVS     r1,#1
000090  0509              LSLS     r1,r1,#20
000092  4388              BICS     r0,r0,r1
000094  492e              LDR      r1,|L24.336|
000096  6108              STR      r0,[r1,#0x10]
                  |L24.152|
;;;119    
;;;120            if (g_sDrvPWMAHandler.pfnCAP0CallBack != NULL)
000098  482e              LDR      r0,|L24.340|
00009a  6840              LDR      r0,[r0,#4]  ; g_sDrvPWMAHandler
00009c  2800              CMP      r0,#0
00009e  d002              BEQ      |L24.166|
;;;121            {
;;;122                g_sDrvPWMAHandler.pfnCAP0CallBack();
0000a0  492c              LDR      r1,|L24.340|
0000a2  6848              LDR      r0,[r1,#4]  ; g_sDrvPWMAHandler
0000a4  4780              BLX      r0
                  |L24.166|
;;;123            }
;;;124        }
;;;125        
;;;126        if (u32CapIntFlag0 & BIT20) 
0000a6  2001              MOVS     r0,#1
0000a8  0500              LSLS     r0,r0,#20
0000aa  4205              TST      r5,r0
0000ac  d017              BEQ      |L24.222|
;;;127        {
;;;128            if (s_i32Option)
0000ae  482a              LDR      r0,|L24.344|
0000b0  6800              LDR      r0,[r0,#0]  ; s_i32Option
0000b2  2800              CMP      r0,#0
0000b4  d006              BEQ      |L24.196|
;;;129                outp32(&PWMA->CCR0, inp32(&PWMA->CCR0) & (CCR_MASK | BIT20));
0000b6  4826              LDR      r0,|L24.336|
0000b8  6900              LDR      r0,[r0,#0x10]
0000ba  4929              LDR      r1,|L24.352|
0000bc  4008              ANDS     r0,r0,r1
0000be  4924              LDR      r1,|L24.336|
0000c0  6108              STR      r0,[r1,#0x10]
0000c2  e005              B        |L24.208|
                  |L24.196|
;;;130            else
;;;131                outp32(&PWMA->CCR0, inp32(&PWMA->CCR0) & ~BIT4);        
0000c4  4822              LDR      r0,|L24.336|
0000c6  6900              LDR      r0,[r0,#0x10]
0000c8  2110              MOVS     r1,#0x10
0000ca  4388              BICS     r0,r0,r1
0000cc  4920              LDR      r1,|L24.336|
0000ce  6108              STR      r0,[r1,#0x10]
                  |L24.208|
;;;132    
;;;133            if (g_sDrvPWMAHandler.pfnCAP1CallBack != NULL)
0000d0  4820              LDR      r0,|L24.340|
0000d2  68c0              LDR      r0,[r0,#0xc]  ; g_sDrvPWMAHandler
0000d4  2800              CMP      r0,#0
0000d6  d002              BEQ      |L24.222|
;;;134            {
;;;135                g_sDrvPWMAHandler.pfnCAP1CallBack();
0000d8  491e              LDR      r1,|L24.340|
0000da  68c8              LDR      r0,[r1,#0xc]  ; g_sDrvPWMAHandler
0000dc  4780              BLX      r0
                  |L24.222|
;;;136            }
;;;137        }
;;;138    
;;;139        if (u32CapIntFlag1 & BIT4) 
0000de  2010              MOVS     r0,#0x10
0000e0  4206              TST      r6,r0
0000e2  d018              BEQ      |L24.278|
;;;140        {
;;;141            if (s_i32Option)
0000e4  481c              LDR      r0,|L24.344|
0000e6  6800              LDR      r0,[r0,#0]  ; s_i32Option
0000e8  2800              CMP      r0,#0
0000ea  d006              BEQ      |L24.250|
;;;142                outp32(&PWMA->CCR2, inp32(&PWMA->CCR2) & (CCR_MASK | BIT4));
0000ec  4818              LDR      r0,|L24.336|
0000ee  6940              LDR      r0,[r0,#0x14]
0000f0  491a              LDR      r1,|L24.348|
0000f2  4008              ANDS     r0,r0,r1
0000f4  4916              LDR      r1,|L24.336|
0000f6  6148              STR      r0,[r1,#0x14]
0000f8  e006              B        |L24.264|
                  |L24.250|
;;;143            else
;;;144                outp32(&PWMA->CCR2, inp32(&PWMA->CCR2) & ~BIT20);
0000fa  4815              LDR      r0,|L24.336|
0000fc  6940              LDR      r0,[r0,#0x14]
0000fe  2101              MOVS     r1,#1
000100  0509              LSLS     r1,r1,#20
000102  4388              BICS     r0,r0,r1
000104  4912              LDR      r1,|L24.336|
000106  6148              STR      r0,[r1,#0x14]
                  |L24.264|
;;;145    
;;;146            if (g_sDrvPWMAHandler.pfnCAP2CallBack != NULL)
000108  4812              LDR      r0,|L24.340|
00010a  6940              LDR      r0,[r0,#0x14]  ; g_sDrvPWMAHandler
00010c  2800              CMP      r0,#0
00010e  d002              BEQ      |L24.278|
;;;147            {
;;;148                g_sDrvPWMAHandler.pfnCAP2CallBack();
000110  4910              LDR      r1,|L24.340|
000112  6948              LDR      r0,[r1,#0x14]  ; g_sDrvPWMAHandler
000114  4780              BLX      r0
                  |L24.278|
;;;149            }
;;;150        }
;;;151        
;;;152        if (u32CapIntFlag1 & BIT20) 
000116  2001              MOVS     r0,#1
000118  0500              LSLS     r0,r0,#20
00011a  4206              TST      r6,r0
00011c  d017              BEQ      |L24.334|
;;;153        {
;;;154            if (s_i32Option)
00011e  480e              LDR      r0,|L24.344|
000120  6800              LDR      r0,[r0,#0]  ; s_i32Option
000122  2800              CMP      r0,#0
000124  d006              BEQ      |L24.308|
;;;155                outp32(&PWMA->CCR2, inp32(&PWMA->CCR2) & (CCR_MASK | BIT20));
000126  480a              LDR      r0,|L24.336|
000128  6940              LDR      r0,[r0,#0x14]
00012a  490d              LDR      r1,|L24.352|
00012c  4008              ANDS     r0,r0,r1
00012e  4908              LDR      r1,|L24.336|
000130  6148              STR      r0,[r1,#0x14]
000132  e005              B        |L24.320|
                  |L24.308|
;;;156            else
;;;157                outp32(&PWMA->CCR2, inp32(&PWMA->CCR2) & ~BIT4);
000134  4806              LDR      r0,|L24.336|
000136  6940              LDR      r0,[r0,#0x14]
000138  2110              MOVS     r1,#0x10
00013a  4388              BICS     r0,r0,r1
00013c  4904              LDR      r1,|L24.336|
00013e  6148              STR      r0,[r1,#0x14]
                  |L24.320|
;;;158    
;;;159            if (g_sDrvPWMAHandler.pfnCAP3CallBack != NULL)
000140  4804              LDR      r0,|L24.340|
000142  69c0              LDR      r0,[r0,#0x1c]  ; g_sDrvPWMAHandler
000144  2800              CMP      r0,#0
000146  d002              BEQ      |L24.334|
;;;160            {
;;;161                g_sDrvPWMAHandler.pfnCAP3CallBack();
000148  4902              LDR      r1,|L24.340|
00014a  69c8              LDR      r0,[r1,#0x1c]  ; g_sDrvPWMAHandler
00014c  4780              BLX      r0
                  |L24.334|
;;;162            }
;;;163        }
;;;164    }
00014e  bd70              POP      {r4-r6,pc}
;;;165    
                          ENDP

                  |L24.336|
                          DCD      0x40040040
                  |L24.340|
                          DCD      g_sDrvPWMAHandler
                  |L24.344|
                          DCD      s_i32Option
                  |L24.348|
                          DCD      0x000f001f
                  |L24.352|
                          DCD      0x001f000f

                          AREA ||i.PWMB_IRQHandler||, CODE, READONLY, ALIGN=2

                  PWMB_IRQHandler PROC
;;;176    /*---------------------------------------------------------------------------------------------------------*/
;;;177    void PWMB_IRQHandler(void)
000000  b570              PUSH     {r4-r6,lr}
;;;178    {    
;;;179        uint32_t u32pwmIntFlag, u32CapIntFlag0, u32CapIntFlag1;
;;;180    
;;;181        /* Handle PWMB Timer function */
;;;182        u32pwmIntFlag = *((__IO uint32_t *) &PWMB->PIIR);
000002  4853              LDR      r0,|L25.336|
000004  6844              LDR      r4,[r0,#4]
;;;183        
;;;184        if (u32pwmIntFlag & BIT0)
000006  07e0              LSLS     r0,r4,#31
000008  0fc0              LSRS     r0,r0,#31
00000a  d009              BEQ      |L25.32|
;;;185        {
;;;186            *((__IO uint32_t *) &PWMB->PIIR) = BIT0;         
00000c  2001              MOVS     r0,#1
00000e  4950              LDR      r1,|L25.336|
000010  6048              STR      r0,[r1,#4]
;;;187            if (g_sDrvPWMBHandler.pfnPWM0CallBack != NULL)
000012  4850              LDR      r0,|L25.340|
000014  6800              LDR      r0,[r0,#0]  ; g_sDrvPWMBHandler
000016  2800              CMP      r0,#0
000018  d002              BEQ      |L25.32|
;;;188            {
;;;189                g_sDrvPWMBHandler.pfnPWM0CallBack();
00001a  494e              LDR      r1,|L25.340|
00001c  6808              LDR      r0,[r1,#0]  ; g_sDrvPWMBHandler
00001e  4780              BLX      r0
                  |L25.32|
;;;190            }   
;;;191        }   
;;;192    
;;;193        if (u32pwmIntFlag & BIT1)
000020  2002              MOVS     r0,#2
000022  4204              TST      r4,r0
000024  d008              BEQ      |L25.56|
;;;194        {
;;;195            *((__IO uint32_t *) &PWMB->PIIR) = BIT1;         
000026  494a              LDR      r1,|L25.336|
000028  6048              STR      r0,[r1,#4]
;;;196            if (g_sDrvPWMBHandler.pfnPWM1CallBack != NULL)
00002a  484a              LDR      r0,|L25.340|
00002c  6880              LDR      r0,[r0,#8]  ; g_sDrvPWMBHandler
00002e  2800              CMP      r0,#0
000030  d002              BEQ      |L25.56|
;;;197            {
;;;198                g_sDrvPWMBHandler.pfnPWM1CallBack();
000032  4948              LDR      r1,|L25.340|
000034  6888              LDR      r0,[r1,#8]  ; g_sDrvPWMBHandler
000036  4780              BLX      r0
                  |L25.56|
;;;199            }   
;;;200        }   
;;;201        
;;;202        if (u32pwmIntFlag & BIT2)
000038  2004              MOVS     r0,#4
00003a  4204              TST      r4,r0
00003c  d008              BEQ      |L25.80|
;;;203        {
;;;204            *((__IO uint32_t *) &PWMB->PIIR) = BIT2;         
00003e  4944              LDR      r1,|L25.336|
000040  6048              STR      r0,[r1,#4]
;;;205            if (g_sDrvPWMBHandler.pfnPWM2CallBack != NULL)
000042  4844              LDR      r0,|L25.340|
000044  6900              LDR      r0,[r0,#0x10]  ; g_sDrvPWMBHandler
000046  2800              CMP      r0,#0
000048  d002              BEQ      |L25.80|
;;;206            {
;;;207                g_sDrvPWMBHandler.pfnPWM2CallBack();
00004a  4942              LDR      r1,|L25.340|
00004c  6908              LDR      r0,[r1,#0x10]  ; g_sDrvPWMBHandler
00004e  4780              BLX      r0
                  |L25.80|
;;;208            }   
;;;209        }
;;;210    
;;;211        if (u32pwmIntFlag & BIT3)
000050  2008              MOVS     r0,#8
000052  4204              TST      r4,r0
000054  d008              BEQ      |L25.104|
;;;212        {
;;;213            *((__IO uint32_t *) &PWMB->PIIR) = BIT3;         
000056  493e              LDR      r1,|L25.336|
000058  6048              STR      r0,[r1,#4]
;;;214            if (g_sDrvPWMBHandler.pfnPWM3CallBack != NULL)
00005a  483e              LDR      r0,|L25.340|
00005c  6980              LDR      r0,[r0,#0x18]  ; g_sDrvPWMBHandler
00005e  2800              CMP      r0,#0
000060  d002              BEQ      |L25.104|
;;;215            {
;;;216                g_sDrvPWMBHandler.pfnPWM3CallBack();
000062  493c              LDR      r1,|L25.340|
000064  6988              LDR      r0,[r1,#0x18]  ; g_sDrvPWMBHandler
000066  4780              BLX      r0
                  |L25.104|
;;;217            }   
;;;218        }
;;;219    
;;;220        /* Handle PWMB Capture function */
;;;221        u32CapIntFlag0 = *((__IO uint32_t *) &PWMB->CCR0);
000068  4839              LDR      r0,|L25.336|
00006a  6905              LDR      r5,[r0,#0x10]
;;;222        u32CapIntFlag1 = *((__IO uint32_t *) &PWMB->CCR2);
00006c  6946              LDR      r6,[r0,#0x14]
;;;223    
;;;224        if (u32CapIntFlag0 & BIT4) 
00006e  2010              MOVS     r0,#0x10
000070  4205              TST      r5,r0
000072  d018              BEQ      |L25.166|
;;;225        {
;;;226            if (s_i32Option)
000074  4838              LDR      r0,|L25.344|
000076  6800              LDR      r0,[r0,#0]  ; s_i32Option
000078  2800              CMP      r0,#0
00007a  d006              BEQ      |L25.138|
;;;227                outp32(&PWMB->CCR0, inp32(&PWMB->CCR0) & (CCR_MASK | BIT4));
00007c  4834              LDR      r0,|L25.336|
00007e  6900              LDR      r0,[r0,#0x10]
000080  4936              LDR      r1,|L25.348|
000082  4008              ANDS     r0,r0,r1
000084  4932              LDR      r1,|L25.336|
000086  6108              STR      r0,[r1,#0x10]
000088  e006              B        |L25.152|
                  |L25.138|
;;;228            else
;;;229                outp32(&PWMB->CCR0, inp32(&PWMB->CCR0) & ~BIT20); 
00008a  4831              LDR      r0,|L25.336|
00008c  6900              LDR      r0,[r0,#0x10]
00008e  2101              MOVS     r1,#1
000090  0509              LSLS     r1,r1,#20
000092  4388              BICS     r0,r0,r1
000094  492e              LDR      r1,|L25.336|
000096  6108              STR      r0,[r1,#0x10]
                  |L25.152|
;;;230            
;;;231            if (g_sDrvPWMBHandler.pfnCAP0CallBack != NULL)
000098  482e              LDR      r0,|L25.340|
00009a  6840              LDR      r0,[r0,#4]  ; g_sDrvPWMBHandler
00009c  2800              CMP      r0,#0
00009e  d002              BEQ      |L25.166|
;;;232            {
;;;233                g_sDrvPWMBHandler.pfnCAP0CallBack();
0000a0  492c              LDR      r1,|L25.340|
0000a2  6848              LDR      r0,[r1,#4]  ; g_sDrvPWMBHandler
0000a4  4780              BLX      r0
                  |L25.166|
;;;234            }
;;;235        }
;;;236        
;;;237        if (u32CapIntFlag0 & BIT20) 
0000a6  2001              MOVS     r0,#1
0000a8  0500              LSLS     r0,r0,#20
0000aa  4205              TST      r5,r0
0000ac  d017              BEQ      |L25.222|
;;;238        {
;;;239            if (s_i32Option)
0000ae  482a              LDR      r0,|L25.344|
0000b0  6800              LDR      r0,[r0,#0]  ; s_i32Option
0000b2  2800              CMP      r0,#0
0000b4  d006              BEQ      |L25.196|
;;;240                outp32(&PWMB->CCR0, inp32(&PWMB->CCR0) & (CCR_MASK | BIT20));
0000b6  4826              LDR      r0,|L25.336|
0000b8  6900              LDR      r0,[r0,#0x10]
0000ba  4929              LDR      r1,|L25.352|
0000bc  4008              ANDS     r0,r0,r1
0000be  4924              LDR      r1,|L25.336|
0000c0  6108              STR      r0,[r1,#0x10]
0000c2  e005              B        |L25.208|
                  |L25.196|
;;;241            else
;;;242                outp32(&PWMB->CCR0, inp32(&PWMB->CCR0) & ~BIT4);  
0000c4  4822              LDR      r0,|L25.336|
0000c6  6900              LDR      r0,[r0,#0x10]
0000c8  2110              MOVS     r1,#0x10
0000ca  4388              BICS     r0,r0,r1
0000cc  4920              LDR      r1,|L25.336|
0000ce  6108              STR      r0,[r1,#0x10]
                  |L25.208|
;;;243                        
;;;244            if (g_sDrvPWMBHandler.pfnCAP1CallBack != NULL)
0000d0  4820              LDR      r0,|L25.340|
0000d2  68c0              LDR      r0,[r0,#0xc]  ; g_sDrvPWMBHandler
0000d4  2800              CMP      r0,#0
0000d6  d002              BEQ      |L25.222|
;;;245            {
;;;246                g_sDrvPWMBHandler.pfnCAP1CallBack();
0000d8  491e              LDR      r1,|L25.340|
0000da  68c8              LDR      r0,[r1,#0xc]  ; g_sDrvPWMBHandler
0000dc  4780              BLX      r0
                  |L25.222|
;;;247            }
;;;248        }
;;;249    
;;;250        if (u32CapIntFlag1 & BIT4) 
0000de  2010              MOVS     r0,#0x10
0000e0  4206              TST      r6,r0
0000e2  d018              BEQ      |L25.278|
;;;251        {
;;;252            if (s_i32Option)
0000e4  481c              LDR      r0,|L25.344|
0000e6  6800              LDR      r0,[r0,#0]  ; s_i32Option
0000e8  2800              CMP      r0,#0
0000ea  d006              BEQ      |L25.250|
;;;253                outp32(&PWMB->CCR2, inp32(&PWMB->CCR2) & (CCR_MASK | BIT4));
0000ec  4818              LDR      r0,|L25.336|
0000ee  6940              LDR      r0,[r0,#0x14]
0000f0  491a              LDR      r1,|L25.348|
0000f2  4008              ANDS     r0,r0,r1
0000f4  4916              LDR      r1,|L25.336|
0000f6  6148              STR      r0,[r1,#0x14]
0000f8  e006              B        |L25.264|
                  |L25.250|
;;;254            else
;;;255                outp32(&PWMB->CCR2, inp32(&PWMB->CCR2) & ~BIT20);
0000fa  4815              LDR      r0,|L25.336|
0000fc  6940              LDR      r0,[r0,#0x14]
0000fe  2101              MOVS     r1,#1
000100  0509              LSLS     r1,r1,#20
000102  4388              BICS     r0,r0,r1
000104  4912              LDR      r1,|L25.336|
000106  6148              STR      r0,[r1,#0x14]
                  |L25.264|
;;;256                       
;;;257            if (g_sDrvPWMBHandler.pfnCAP2CallBack != NULL)
000108  4812              LDR      r0,|L25.340|
00010a  6940              LDR      r0,[r0,#0x14]  ; g_sDrvPWMBHandler
00010c  2800              CMP      r0,#0
00010e  d002              BEQ      |L25.278|
;;;258            {
;;;259                g_sDrvPWMBHandler.pfnCAP2CallBack();
000110  4910              LDR      r1,|L25.340|
000112  6948              LDR      r0,[r1,#0x14]  ; g_sDrvPWMBHandler
000114  4780              BLX      r0
                  |L25.278|
;;;260            }
;;;261        }
;;;262        
;;;263        if (u32CapIntFlag1 & BIT20) 
000116  2001              MOVS     r0,#1
000118  0500              LSLS     r0,r0,#20
00011a  4206              TST      r6,r0
00011c  d017              BEQ      |L25.334|
;;;264        {
;;;265            if (s_i32Option)
00011e  480e              LDR      r0,|L25.344|
000120  6800              LDR      r0,[r0,#0]  ; s_i32Option
000122  2800              CMP      r0,#0
000124  d006              BEQ      |L25.308|
;;;266                outp32(&PWMB->CCR2, inp32(&PWMB->CCR2) & (CCR_MASK | BIT20));
000126  480a              LDR      r0,|L25.336|
000128  6940              LDR      r0,[r0,#0x14]
00012a  490d              LDR      r1,|L25.352|
00012c  4008              ANDS     r0,r0,r1
00012e  4908              LDR      r1,|L25.336|
000130  6148              STR      r0,[r1,#0x14]
000132  e005              B        |L25.320|
                  |L25.308|
;;;267            else
;;;268                outp32(&PWMB->CCR2, inp32(&PWMB->CCR2) & ~BIT4);
000134  4806              LDR      r0,|L25.336|
000136  6940              LDR      r0,[r0,#0x14]
000138  2110              MOVS     r1,#0x10
00013a  4388              BICS     r0,r0,r1
00013c  4904              LDR      r1,|L25.336|
00013e  6148              STR      r0,[r1,#0x14]
                  |L25.320|
;;;269                        
;;;270            if (g_sDrvPWMBHandler.pfnCAP3CallBack != NULL)
000140  4804              LDR      r0,|L25.340|
000142  69c0              LDR      r0,[r0,#0x1c]  ; g_sDrvPWMBHandler
000144  2800              CMP      r0,#0
000146  d002              BEQ      |L25.334|
;;;271            {
;;;272                g_sDrvPWMBHandler.pfnCAP3CallBack();
000148  4902              LDR      r1,|L25.340|
00014a  69c8              LDR      r0,[r1,#0x1c]  ; g_sDrvPWMBHandler
00014c  4780              BLX      r0
                  |L25.334|
;;;273            }
;;;274        }
;;;275    }
00014e  bd70              POP      {r4-r6,pc}
;;;276    
                          ENDP

                  |L25.336|
                          DCD      0x40140040
                  |L25.340|
                          DCD      g_sDrvPWMBHandler
                  |L25.344|
                          DCD      s_i32Option
                  |L25.348|
                          DCD      0x000f001f
                  |L25.352|
                          DCD      0x001f000f

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  g_sDrvPWMAHandler
                          %        32
                  g_sDrvPWMBHandler
                          %        32

                          AREA ||.data||, DATA, ALIGN=2

                  s_i32Option
                          DCD      0x00000000

                          AREA ||i.__ARM_common_switch8||, COMGROUP=__ARM_common_switch8, CODE, READONLY, ALIGN=1

                  __ARM_common_switch8 PROC
000000  b430              PUSH     {r4,r5}
000002  4674              MOV      r4,lr
000004  1e64              SUBS     r4,r4,#1
000006  7825              LDRB     r5,[r4,#0]
000008  1c64              ADDS     r4,r4,#1
00000a  42ab              CMP      r3,r5
00000c  d304              BCC      |L157.24|
                  |L157.14|
00000e  5d63              LDRB     r3,[r4,r5]
000010  005b              LSLS     r3,r3,#1
000012  18e3              ADDS     r3,r4,r3
000014  bc30              POP      {r4,r5}
000016  4718              BX       r3
                  |L157.24|
000018  461d              MOV      r5,r3
00001a  e7f8              B        |L157.14|
                          ENDP

