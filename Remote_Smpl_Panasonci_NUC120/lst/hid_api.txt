; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\hid_api.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\hid_api.d --cpu=Cortex-M0 --apcs=interwork -O0 -Otime -I.\ -I..\..\..\..\CMSIS\CM0\CoreSupport -I..\..\..\..\CMSIS\CM0\DeviceSupport\Nuvoton\NUC1xx -I..\..\..\Include -I..\..\..\Include\Driver -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\Nuvoton\NUC1xx -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\hid_api.crf HID_API.c]
                          THUMB

                          AREA ||i.DrvUSB_BusResumeCallback||, CODE, READONLY, ALIGN=1

                  DrvUSB_BusResumeCallback PROC
;;;713    
;;;714    void DrvUSB_BusResumeCallback(void * pVoid)
000000  b570              PUSH     {r4-r6,lr}
;;;715    {
000002  4605              MOV      r5,r0
;;;716    	DrvUSB_SetUsbState((E_DRVUSB_STATE)((uint32_t)DrvUSB_GetUsbState() & (uint32_t)(~eDRVUSB_SUSPENDED)));
000004  f7fffffe          BL       DrvUSB_GetUsbState
000008  2120              MOVS     r1,#0x20
00000a  4388              BICS     r0,r0,r1
00000c  4604              MOV      r4,r0
00000e  f7fffffe          BL       DrvUSB_SetUsbState
;;;717     }
000012  bd70              POP      {r4-r6,pc}
;;;718    
                          ENDP


                          AREA ||i.DrvUSB_BusSuspendCallback||, CODE, READONLY, ALIGN=1

                  DrvUSB_BusSuspendCallback PROC
;;;705    
;;;706    void DrvUSB_BusSuspendCallback(void * pVoid)
000000  b570              PUSH     {r4-r6,lr}
;;;707    {
000002  4605              MOV      r5,r0
;;;708    
;;;709    	/* Note!! We should not power down or idel in Handler mode */
;;;710    	DrvUSB_SetUsbState((E_DRVUSB_STATE)((uint32_t)DrvUSB_GetUsbState() | (uint32_t)eDRVUSB_SUSPENDED));
000004  f7fffffe          BL       DrvUSB_GetUsbState
000008  2120              MOVS     r1,#0x20
00000a  4308              ORRS     r0,r0,r1
00000c  4604              MOV      r4,r0
00000e  f7fffffe          BL       DrvUSB_SetUsbState
;;;711    
;;;712    }
000012  bd70              POP      {r4-r6,pc}
;;;713    
                          ENDP


                          AREA ||i.HID_GetOutReportAck||, CODE, READONLY, ALIGN=1

                  HID_GetOutReportAck PROC
;;;602       Therefore, we could prepare next out report here. */
;;;603    void HID_GetOutReportAck(uint8_t *buf, uint32_t size)
000000  4770              BX       lr
;;;604    {
;;;605        
;;;606    }
;;;607    
                          ENDP


                          AREA ||i.HID_Init||, CODE, READONLY, ALIGN=2

                  HID_Init PROC
;;;397    
;;;398    void HID_Init(void)
000000  b510              PUSH     {r4,lr}
;;;399    {
;;;400    	/* Open HID to initial the descriptors and control handlers */
;;;401    	HID_Open();
000002  f7fffffe          BL       HID_Open
;;;402    	
;;;403    #if(HID_FUNCTION == HID_MOUSE)
;;;404    
;;;405        /* Set the HID report descriptor */
;;;406    	HID_SetReportDescriptor(g_HID_au8MouseReportDescriptor, g_HID_u32MouseReportDescriptorSize);
;;;407    
;;;408        /* Set the HID report buffer */
;;;409    	HID_SetReportBuf(g_au8MouseReport, g_u32MouseReportSize);
;;;410    
;;;411    #elif(HID_FUNCTION == HID_DIGITIZER)
;;;412        /* Set the HID report descriptor */
;;;413    	HID_SetReportDescriptor(g_HID_au8DigitizerReportDescriptor, g_HID_u32DigitizerReportDescriptorSize);
000006  21ba              MOVS     r1,#0xba
000008  4803              LDR      r0,|L4.24|
00000a  f7fffffe          BL       HID_SetReportDescriptor
;;;414    
;;;415        /* Set the HID report buffer */
;;;416    	HID_SetReportBuf(g_au8DigitizerReport, g_u32DigitizerReportSize);
00000e  2108              MOVS     r1,#8
000010  4802              LDR      r0,|L4.28|
000012  f7fffffe          BL       HID_SetReportBuf
;;;417    #else
;;;418        /* Set the HID report descriptor */
;;;419    	HID_SetReportDescriptor(g_HID_au8KeyboardReportDescriptor, g_HID_u32KeyboardReportDescriptorSize);
;;;420    
;;;421        /* Set the HID report buffer */
;;;422    	HID_SetReportBuf(g_au8KeyboardReport, g_u32KeyboardReportSize);
;;;423    #endif
;;;424    
;;;425    }
000016  bd10              POP      {r4,pc}
;;;426    
                          ENDP

                  |L4.24|
                          DCD      g_HID_au8DigitizerReportDescriptor
                  |L4.28|
                          DCD      g_au8DigitizerReport

                          AREA ||i.HID_MainProcess||, CODE, READONLY, ALIGN=2

                  HID_MainProcess PROC
;;;643    
;;;644    int32_t HID_MainProcess(void)
000000  b570              PUSH     {r4-r6,lr}
;;;645    {
;;;646        int32_t i32Ret = 0;
000002  2500              MOVS     r5,#0
;;;647    	E_DRVUSB_STATE eUsbState;
;;;648    
;;;649    	GPIOB->IEN = (1 << 15);
000004  2001              MOVS     r0,#1
000006  03c0              LSLS     r0,r0,#15
000008  491d              LDR      r1,|L5.128|
00000a  61c8              STR      r0,[r1,#0x1c]
;;;650        NVIC_EnableIRQ(EINT1_IRQn);
00000c  2003              MOVS     r0,#3
00000e  2101              MOVS     r1,#1
000010  4081              LSLS     r1,r1,r0
000012  4a1c              LDR      r2,|L5.132|
000014  6011              STR      r1,[r2,#0]
000016  bf00              NOP      
;;;651    
;;;652    
;;;653    	    
;;;654        i32Ret = DrvUSB_Open((void *)DrvUSB_DispatchEvent);
000018  481b              LDR      r0,|L5.136|
00001a  f7fffffe          BL       DrvUSB_Open
00001e  4605              MOV      r5,r0
;;;655        if(i32Ret != 0)
000020  2d00              CMP      r5,#0
000022  d001              BEQ      |L5.40|
;;;656            return i32Ret;
000024  4628              MOV      r0,r5
;;;657        
;;;658    	while(1)
;;;659    	{
;;;660    		/* Disable USB-related interrupts. */
;;;661    		_DRVUSB_ENABLE_MISC_INT(0);
;;;662    
;;;663    		/* Enable float-detection interrupt. */
;;;664    		_DRVUSB_ENABLE_FLDET_INT();
;;;665    
;;;666    
;;;667    		
;;;668    		/* Start HID and install the callback functions to handle in/out report */
;;;669    		HID_Init();
;;;670    
;;;671    		/* Enable USB-related interrupts. */
;;;672    		_DRVUSB_ENABLE_MISC_INT(INTEN_WAKEUP | INTEN_WAKEUPEN | INTEN_FLDET | INTEN_USB | INTEN_BUS);
;;;673    
;;;674    		/* Enter power down to wait USB attached */
;;;675    		PowerDown();
;;;676    
;;;677    		/* Poll and handle USB events. */
;;;678    		while(1)
;;;679    		{
;;;680    			eUsbState = DrvUSB_GetUsbState();
;;;681    
;;;682    			if (eUsbState == eDRVUSB_DETACHED)
;;;683    			{
;;;684    				DBG_PRINTF("USB Detached!\n");
;;;685    				break;
;;;686    			}
;;;687    			
;;;688    			if(eUsbState & eDRVUSB_SUSPENDED)
;;;689    			{
;;;690    				/* Enter suspend here */
;;;691    				PowerDown();
;;;692    			}
;;;693    			if (eUsbState == eDRVUSB_CONFIGURED)
;;;694    			{
;;;695    				/* Set HID IN report for interrupt IN transfer */
;;;696    				HID_SetInReport();
;;;697    			}
;;;698    		}
;;;699    
;;;700    		/* Disable USB-related interrupts. */
;;;701    		_DRVUSB_ENABLE_MISC_INT(0);		
;;;702        }
;;;703    }
000026  bd70              POP      {r4-r6,pc}
                  |L5.40|
000028  e028              B        |L5.124|
                  |L5.42|
00002a  2000              MOVS     r0,#0                 ;661
00002c  4917              LDR      r1,|L5.140|
00002e  6008              STR      r0,[r1,#0]            ;661
000030  4608              MOV      r0,r1                 ;664
000032  6800              LDR      r0,[r0,#0]            ;664
000034  2104              MOVS     r1,#4                 ;664
000036  4388              BICS     r0,r0,r1              ;664
000038  1d00              ADDS     r0,r0,#4              ;664
00003a  4914              LDR      r1,|L5.140|
00003c  6008              STR      r0,[r1,#0]            ;664
00003e  f7fffffe          BL       HID_Init
000042  200f              MOVS     r0,#0xf               ;672
000044  4911              LDR      r1,|L5.140|
000046  6008              STR      r0,[r1,#0]            ;672
000048  f7fffffe          BL       PowerDown
00004c  e011              B        |L5.114|
                  |L5.78|
00004e  f7fffffe          BL       DrvUSB_GetUsbState
000052  4604              MOV      r4,r0                 ;680
000054  2c00              CMP      r4,#0                 ;682
000056  d103              BNE      |L5.96|
000058  a00d              ADR      r0,|L5.144|
00005a  f7fffffe          BL       __2printf
00005e  e009              B        |L5.116|
                  |L5.96|
000060  2020              MOVS     r0,#0x20              ;688
000062  4204              TST      r4,r0                 ;688
000064  d001              BEQ      |L5.106|
000066  f7fffffe          BL       PowerDown
                  |L5.106|
00006a  2c1f              CMP      r4,#0x1f              ;693
00006c  d101              BNE      |L5.114|
00006e  f7fffffe          BL       HID_SetInReport
                  |L5.114|
000072  e7ec              B        |L5.78|
                  |L5.116|
000074  bf00              NOP                            ;685
000076  2000              MOVS     r0,#0                 ;701
000078  4904              LDR      r1,|L5.140|
00007a  6008              STR      r0,[r1,#0]            ;701
                  |L5.124|
00007c  e7d5              B        |L5.42|
;;;704    
                          ENDP

00007e  0000              DCW      0x0000
                  |L5.128|
                          DCD      0x50004040
                  |L5.132|
                          DCD      0xe000e100
                  |L5.136|
                          DCD      DrvUSB_DispatchEvent
                  |L5.140|
                          DCD      0x40060000
                  |L5.144|
000090  55534220          DCB      "USB Detached!\n",0
000094  44657461
000098  63686564
00009c  210a00  
00009f  00                DCB      0

                          AREA ||i.HID_SetFirstInReport||, CODE, READONLY, ALIGN=2

                  HID_SetFirstInReport PROC
;;;592    /* This function is used to prepare the first in report */
;;;593    void HID_SetFirstInReport(void)
000000  b510              PUSH     {r4,lr}
;;;594    {
;;;595    	DrvUSB_DataIn(INT_IN_EP_NUM, g_HID_sDevice.pu8Report, g_HID_sDevice.u32ReportSize);				  
000002  4803              LDR      r0,|L6.16|
000004  6a82              LDR      r2,[r0,#0x28]  ; g_HID_sDevice
000006  6a41              LDR      r1,[r0,#0x24]  ; g_HID_sDevice
000008  2001              MOVS     r0,#1
00000a  f7fffffe          BL       DrvUSB_DataIn
;;;596    }
00000e  bd10              POP      {r4,pc}
;;;597    
                          ENDP

                  |L6.16|
                          DCD      g_HID_sDevice

                          AREA ||i.HID_SetFirstOutReport||, CODE, READONLY, ALIGN=1

                  HID_SetFirstOutReport PROC
;;;586    /* This function is used to prepare the first out report. */
;;;587    void HID_SetFirstOutReport(void)
000000  4770              BX       lr
;;;588    {
;;;589    
;;;590    }
;;;591    
                          ENDP


                          AREA ||i.HID_SetInReport||, CODE, READONLY, ALIGN=2

                  HID_SetInReport PROC
;;;458    
;;;459    void HID_SetInReport()
000000  b570              PUSH     {r4-r6,lr}
;;;460    {
;;;461        uint8_t *buf;
;;;462        uint32_t key=0;
000002  2600              MOVS     r6,#0
;;;463        static int16_t x = 0, y = 700, z = 0;
;;;464        static int16_t xinc = 1, yinc = 1;
;;;465        int16_t tmp;
;;;466        
;;;467        
;;;468        if(g_HID_sDevice.isReportReady)
000004  4859              LDR      r0,|L8.364|
000006  7b00              LDRB     r0,[r0,#0xc]
000008  2800              CMP      r0,#0
00000a  d000              BEQ      |L8.14|
                  |L8.12|
;;;469            return;
;;;470    
;;;471        buf = g_HID_sDevice.pu8Report;
;;;472        
;;;473    	//key = (GPIOB->PIN & (1 << 15))?0:1;
;;;474    		key = MIDIDataFor;
;;;475        {
;;;476    	    /* No any key pressed */
;;;477    	    if(key == 0)
;;;478    	    {
;;;479                if(z)
;;;480                {
;;;481                    if(buf[1] == 0x07)
;;;482                        buf[1] = 0x04;
;;;483    		        z = 0;
;;;484                    g_HID_sDevice.isReportReady = 1;
;;;485                    DrvUSB_DataIn(INT_IN_EP_NUM, g_HID_sDevice.pu8Report, g_HID_sDevice.u32ReportSize);
;;;486    
;;;487                }
;;;488                else
;;;489                {
;;;490                    buf[3] = buf[4] = buf[5] = buf[6] = 0;
;;;491                }
;;;492     	    }
;;;493    	    else
;;;494    	    {
;;;495    	        z++;
;;;496    	    }
;;;497    
;;;498    	    if(key)
;;;499            {
;;;500                    g_HID_sDevice.isReportReady = 1;
;;;501                    
;;;502                    buf[0] = 0x01;
;;;503                    
;;;504                    buf[1] = (z > 4)?0x07:0x00;
;;;505                    buf[2] = 0x00;
;;;506                    
;;;507    
;;;508                    if(z > 4)
;;;509                    {
;;;510                        if(z > 8)
;;;511                            x+=xinc;
;;;512                        if(x >= 5091){ x = 5091; xinc =-1;}
;;;513                        if(x < 0){x = 0;xinc = 1;}
;;;514                        tmp = x >> 0;
;;;515                        buf[3] = tmp & 0xFF;
;;;516                        buf[4] = tmp >> 8;
;;;517                        
;;;518                        y+=yinc;
;;;519                        if(y >= 2863){ y = 2863; yinc = -1;}
;;;520                        if(y < 0){y = 0; yinc = 1;}
;;;521                        tmp = y >> 1;
;;;522                        buf[5] = tmp & 0xFF;
;;;523                        buf[6] = tmp >> 8;
;;;524                    }
;;;525                    
;;;526                    buf[7] = 0x00;
;;;527                    buf[8] = 0x01;
;;;528                    buf[9] = 0x00;
;;;529    
;;;530                    buf[10]= 0x00;
;;;531                    buf[11]= 0x00;
;;;532    
;;;533                    buf[12]= 0x00;
;;;534                    buf[13]= (z > 4)?1:0;
;;;535                    
;;;536                    DrvUSB_DataIn(INT_IN_EP_NUM, g_HID_sDevice.pu8Report, g_HID_sDevice.u32ReportSize);
;;;537    	    }
;;;538    	}
;;;539    }
00000c  bd70              POP      {r4-r6,pc}
                  |L8.14|
00000e  4857              LDR      r0,|L8.364|
000010  3820              SUBS     r0,r0,#0x20           ;471
000012  6a44              LDR      r4,[r0,#0x24]         ;471  ; g_HID_sDevice
000014  4856              LDR      r0,|L8.368|
000016  7806              LDRB     r6,[r0,#0]            ;474  ; MIDIDataFor
000018  2e00              CMP      r6,#0                 ;477
00001a  d11b              BNE      |L8.84|
00001c  4855              LDR      r0,|L8.372|
00001e  8800              LDRH     r0,[r0,#0]            ;479  ; z
000020  2800              CMP      r0,#0                 ;479
000022  d011              BEQ      |L8.72|
000024  7860              LDRB     r0,[r4,#1]            ;481
000026  2807              CMP      r0,#7                 ;481
000028  d101              BNE      |L8.46|
00002a  2004              MOVS     r0,#4                 ;482
00002c  7060              STRB     r0,[r4,#1]            ;482
                  |L8.46|
00002e  2000              MOVS     r0,#0                 ;483
000030  4950              LDR      r1,|L8.372|
000032  8008              STRH     r0,[r1,#0]            ;483
000034  2101              MOVS     r1,#1                 ;484
000036  484d              LDR      r0,|L8.364|
000038  7301              STRB     r1,[r0,#0xc]          ;484
00003a  3820              SUBS     r0,r0,#0x20           ;485
00003c  6a82              LDR      r2,[r0,#0x28]         ;485  ; g_HID_sDevice
00003e  6a41              LDR      r1,[r0,#0x24]         ;485  ; g_HID_sDevice
000040  2001              MOVS     r0,#1                 ;485
000042  f7fffffe          BL       DrvUSB_DataIn
000046  e00b              B        |L8.96|
                  |L8.72|
000048  2000              MOVS     r0,#0                 ;490
00004a  71a0              STRB     r0,[r4,#6]            ;490
00004c  7160              STRB     r0,[r4,#5]            ;490
00004e  7120              STRB     r0,[r4,#4]            ;490
000050  70e0              STRB     r0,[r4,#3]            ;490
000052  e005              B        |L8.96|
                  |L8.84|
000054  4847              LDR      r0,|L8.372|
000056  8800              LDRH     r0,[r0,#0]            ;495  ; z
000058  1c40              ADDS     r0,r0,#1              ;495
00005a  b200              SXTH     r0,r0                 ;495
00005c  4945              LDR      r1,|L8.372|
00005e  8008              STRH     r0,[r1,#0]            ;495
                  |L8.96|
000060  2e00              CMP      r6,#0                 ;498
000062  d076              BEQ      |L8.338|
000064  2101              MOVS     r1,#1                 ;500
000066  4841              LDR      r0,|L8.364|
000068  7301              STRB     r1,[r0,#0xc]          ;500
00006a  2001              MOVS     r0,#1                 ;502
00006c  7020              STRB     r0,[r4,#0]            ;502
00006e  4841              LDR      r0,|L8.372|
000070  2100              MOVS     r1,#0                 ;504
000072  5e41              LDRSH    r1,[r0,r1]            ;504  ; z
000074  2904              CMP      r1,#4                 ;504
000076  dd01              BLE      |L8.124|
000078  2007              MOVS     r0,#7                 ;504
00007a  e000              B        |L8.126|
                  |L8.124|
00007c  2000              MOVS     r0,#0                 ;504
                  |L8.126|
00007e  7060              STRB     r0,[r4,#1]            ;504
000080  2000              MOVS     r0,#0                 ;505
000082  70a0              STRB     r0,[r4,#2]            ;505
000084  483b              LDR      r0,|L8.372|
000086  2100              MOVS     r1,#0                 ;508
000088  5e41              LDRSH    r1,[r0,r1]            ;508  ; z
00008a  2904              CMP      r1,#4                 ;508
00008c  dd51              BLE      |L8.306|
00008e  2100              MOVS     r1,#0                 ;510
000090  5e41              LDRSH    r1,[r0,r1]            ;510  ; z
000092  2908              CMP      r1,#8                 ;510
000094  dd07              BLE      |L8.166|
000096  4838              LDR      r0,|L8.376|
000098  8800              LDRH     r0,[r0,#0]            ;511  ; x
00009a  4938              LDR      r1,|L8.380|
00009c  8809              LDRH     r1,[r1,#0]            ;511  ; xinc
00009e  1840              ADDS     r0,r0,r1              ;511
0000a0  b200              SXTH     r0,r0                 ;511
0000a2  4935              LDR      r1,|L8.376|
0000a4  8008              STRH     r0,[r1,#0]            ;511
                  |L8.166|
0000a6  4934              LDR      r1,|L8.376|
0000a8  2000              MOVS     r0,#0                 ;512
0000aa  5e08              LDRSH    r0,[r1,r0]            ;512  ; x
0000ac  4934              LDR      r1,|L8.384|
0000ae  4288              CMP      r0,r1                 ;512
0000b0  db06              BLT      |L8.192|
0000b2  4608              MOV      r0,r1                 ;512
0000b4  4930              LDR      r1,|L8.376|
0000b6  8008              STRH     r0,[r1,#0]            ;512
0000b8  2000              MOVS     r0,#0                 ;512
0000ba  43c0              MVNS     r0,r0                 ;512
0000bc  492f              LDR      r1,|L8.380|
0000be  8008              STRH     r0,[r1,#0]            ;512
                  |L8.192|
0000c0  482d              LDR      r0,|L8.376|
0000c2  2100              MOVS     r1,#0                 ;513
0000c4  5e41              LDRSH    r1,[r0,r1]            ;513  ; x
0000c6  2900              CMP      r1,#0                 ;513
0000c8  da05              BGE      |L8.214|
0000ca  2000              MOVS     r0,#0                 ;513
0000cc  492a              LDR      r1,|L8.376|
0000ce  8008              STRH     r0,[r1,#0]            ;513
0000d0  2001              MOVS     r0,#1                 ;513
0000d2  492a              LDR      r1,|L8.380|
0000d4  8008              STRH     r0,[r1,#0]            ;513
                  |L8.214|
0000d6  4828              LDR      r0,|L8.376|
0000d8  2500              MOVS     r5,#0                 ;514
0000da  5f45              LDRSH    r5,[r0,r5]            ;514  ; x
0000dc  70e5              STRB     r5,[r4,#3]            ;515
0000de  0428              LSLS     r0,r5,#16             ;516
0000e0  0e00              LSRS     r0,r0,#24             ;516
0000e2  7120              STRB     r0,[r4,#4]            ;516
0000e4  4827              LDR      r0,|L8.388|
0000e6  8800              LDRH     r0,[r0,#0]            ;518  ; y
0000e8  4927              LDR      r1,|L8.392|
0000ea  8809              LDRH     r1,[r1,#0]            ;518  ; yinc
0000ec  1840              ADDS     r0,r0,r1              ;518
0000ee  b200              SXTH     r0,r0                 ;518
0000f0  4924              LDR      r1,|L8.388|
0000f2  8008              STRH     r0,[r1,#0]            ;518
0000f4  2000              MOVS     r0,#0                 ;519
0000f6  5e08              LDRSH    r0,[r1,r0]            ;519  ; y
0000f8  4924              LDR      r1,|L8.396|
0000fa  4288              CMP      r0,r1                 ;519
0000fc  db06              BLT      |L8.268|
0000fe  4608              MOV      r0,r1                 ;519
000100  4920              LDR      r1,|L8.388|
000102  8008              STRH     r0,[r1,#0]            ;519
000104  2000              MOVS     r0,#0                 ;519
000106  43c0              MVNS     r0,r0                 ;519
000108  491f              LDR      r1,|L8.392|
00010a  8008              STRH     r0,[r1,#0]            ;519
                  |L8.268|
00010c  481d              LDR      r0,|L8.388|
00010e  2100              MOVS     r1,#0                 ;520
000110  5e41              LDRSH    r1,[r0,r1]            ;520  ; y
000112  2900              CMP      r1,#0                 ;520
000114  da05              BGE      |L8.290|
000116  2000              MOVS     r0,#0                 ;520
000118  491a              LDR      r1,|L8.388|
00011a  8008              STRH     r0,[r1,#0]            ;520
00011c  2001              MOVS     r0,#1                 ;520
00011e  491a              LDR      r1,|L8.392|
000120  8008              STRH     r0,[r1,#0]            ;520
                  |L8.290|
000122  4818              LDR      r0,|L8.388|
000124  2100              MOVS     r1,#0                 ;521
000126  5e41              LDRSH    r1,[r0,r1]            ;521  ; y
000128  104d              ASRS     r5,r1,#1              ;521
00012a  7165              STRB     r5,[r4,#5]            ;522
00012c  0428              LSLS     r0,r5,#16             ;523
00012e  0e00              LSRS     r0,r0,#24             ;523
000130  71a0              STRB     r0,[r4,#6]            ;523
                  |L8.306|
000132  2000              MOVS     r0,#0                 ;526
000134  71e0              STRB     r0,[r4,#7]            ;526
000136  2001              MOVS     r0,#1                 ;527
000138  7220              STRB     r0,[r4,#8]            ;527
00013a  2000              MOVS     r0,#0                 ;528
00013c  7260              STRB     r0,[r4,#9]            ;528
00013e  72a0              STRB     r0,[r4,#0xa]          ;530
000140  72e0              STRB     r0,[r4,#0xb]          ;531
000142  7320              STRB     r0,[r4,#0xc]          ;533
000144  480b              LDR      r0,|L8.372|
000146  2100              MOVS     r1,#0                 ;534
000148  5e41              LDRSH    r1,[r0,r1]            ;534  ; z
00014a  2904              CMP      r1,#4                 ;534
00014c  dd02              BLE      |L8.340|
00014e  2001              MOVS     r0,#1                 ;534
000150  e001              B        |L8.342|
                  |L8.338|
000152  e008              B        |L8.358|
                  |L8.340|
000154  2000              MOVS     r0,#0                 ;534
                  |L8.342|
000156  7360              STRB     r0,[r4,#0xd]          ;534
000158  4804              LDR      r0,|L8.364|
00015a  3820              SUBS     r0,r0,#0x20           ;536
00015c  6a82              LDR      r2,[r0,#0x28]         ;536  ; g_HID_sDevice
00015e  6a41              LDR      r1,[r0,#0x24]         ;536  ; g_HID_sDevice
000160  2001              MOVS     r0,#1                 ;536
000162  f7fffffe          BL       DrvUSB_DataIn
                  |L8.358|
000166  bf00              NOP      
000168  e750              B        |L8.12|
;;;540    #else
                          ENDP

00016a  0000              DCW      0x0000
                  |L8.364|
                          DCD      g_HID_sDevice+0x20
                  |L8.368|
                          DCD      MIDIDataFor
                  |L8.372|
                          DCD      z
                  |L8.376|
                          DCD      x
                  |L8.380|
                          DCD      xinc
                  |L8.384|
                          DCD      0x000013e3
                  |L8.388|
                          DCD      y
                  |L8.392|
                          DCD      yinc
                  |L8.396|
                          DCD      0x00000b2f

                          AREA ||i.PowerDown||, CODE, READONLY, ALIGN=2

                  PowerDown PROC
;;;607    
;;;608    void PowerDown()
000000  b510              PUSH     {r4,lr}
;;;609    {
;;;610    	DBG_PRINTF("Enter power down ...\n");
000002  a028              ADR      r0,|L9.164|
000004  f7fffffe          BL       __2printf
;;;611    
;;;612        UNLOCKREG();
000008  2059              MOVS     r0,#0x59
00000a  492c              LDR      r1,|L9.188|
00000c  6008              STR      r0,[r1,#0]
00000e  2016              MOVS     r0,#0x16
000010  6008              STR      r0,[r1,#0]
000012  2088              MOVS     r0,#0x88
000014  6008              STR      r0,[r1,#0]
;;;613    
;;;614        /* Wakeup Enable */
;;;615        USBD->INTEN.WAKEUP_EN = 1;
000016  482a              LDR      r0,|L9.192|
000018  6800              LDR      r0,[r0,#0]
00001a  21ff              MOVS     r1,#0xff
00001c  3101              ADDS     r1,#1
00001e  4388              BICS     r0,r0,r1
000020  1840              ADDS     r0,r0,r1
000022  4927              LDR      r1,|L9.192|
000024  6008              STR      r0,[r1,#0]
;;;616    
;;;617        /* Deep sleep */
;;;618        outp32(0xE000ED10, 4);
000026  2004              MOVS     r0,#4
000028  4926              LDR      r1,|L9.196|
00002a  6108              STR      r0,[r1,#0x10]
;;;619        SYSCLK->PWRCON.PD_WAIT_CPU = 1;
00002c  4826              LDR      r0,|L9.200|
00002e  6800              LDR      r0,[r0,#0]
000030  21ff              MOVS     r1,#0xff
000032  3101              ADDS     r1,#1
000034  4388              BICS     r0,r0,r1
000036  1840              ADDS     r0,r0,r1
000038  4923              LDR      r1,|L9.200|
00003a  6008              STR      r0,[r1,#0]
;;;620        SYSCLK->PWRCON.PWR_DOWN_EN = 1;
00003c  4608              MOV      r0,r1
00003e  6800              LDR      r0,[r0,#0]
000040  2180              MOVS     r1,#0x80
000042  4388              BICS     r0,r0,r1
000044  3080              ADDS     r0,r0,#0x80
000046  4920              LDR      r1,|L9.200|
000048  6008              STR      r0,[r1,#0]
;;;621    	__WFI();
00004a  bf30              WFI      
;;;622        SYSCLK->PWRCON.PWR_DOWN_EN = 0;
00004c  4608              MOV      r0,r1
00004e  6800              LDR      r0,[r0,#0]
000050  2180              MOVS     r1,#0x80
000052  4388              BICS     r0,r0,r1
000054  491c              LDR      r1,|L9.200|
000056  6008              STR      r0,[r1,#0]
;;;623    
;;;624    	if(DrvUSB_GetUsbState() & eDRVUSB_SUSPENDED)
000058  f7fffffe          BL       DrvUSB_GetUsbState
00005c  2120              MOVS     r1,#0x20
00005e  4208              TST      r0,r1
000060  d01b              BEQ      |L9.154|
;;;625    	{
;;;626    		/* Note HOST to resume USB tree if it is suspended and remote wakeup enabled */
;;;627    		if(DrvUSB_IsRemoteWakeupEnabled())
000062  f7fffffe          BL       DrvUSB_IsRemoteWakeupEnabled
000066  2800              CMP      r0,#0
000068  d017              BEQ      |L9.154|
;;;628    		{
;;;629    			/* Enable PHY before sending Resume('K') state */
;;;630    			USBD->ATTR.PHY_EN = 1;
00006a  4815              LDR      r0,|L9.192|
00006c  6900              LDR      r0,[r0,#0x10]
00006e  2110              MOVS     r1,#0x10
000070  4388              BICS     r0,r0,r1
000072  3010              ADDS     r0,r0,#0x10
000074  4912              LDR      r1,|L9.192|
000076  6108              STR      r0,[r1,#0x10]
;;;631    
;;;632    			/* Keep remote wakeup for 1 ms */
;;;633    			USBD->ATTR.RWAKEUP = 1;
000078  4608              MOV      r0,r1
00007a  6900              LDR      r0,[r0,#0x10]
00007c  2120              MOVS     r1,#0x20
00007e  4388              BICS     r0,r0,r1
000080  3020              ADDS     r0,r0,#0x20
000082  490f              LDR      r1,|L9.192|
000084  6108              STR      r0,[r1,#0x10]
;;;634    			DrvSYS_Delay(1000);	/* Delay 1ms */
000086  207d              MOVS     r0,#0x7d
000088  00c0              LSLS     r0,r0,#3
00008a  f7fffffe          BL       DrvSYS_Delay
;;;635    			USBD->ATTR.RWAKEUP = 0;
00008e  480c              LDR      r0,|L9.192|
000090  6900              LDR      r0,[r0,#0x10]
000092  2120              MOVS     r1,#0x20
000094  4388              BICS     r0,r0,r1
000096  490a              LDR      r1,|L9.192|
000098  6108              STR      r0,[r1,#0x10]
                  |L9.154|
;;;636    		}
;;;637    	}
;;;638    
;;;639    	DBG_PRINTF("device wakeup!\n");
00009a  a00c              ADR      r0,|L9.204|
00009c  f7fffffe          BL       __2printf
;;;640    	
;;;641    }
0000a0  bd10              POP      {r4,pc}
;;;642    
                          ENDP

0000a2  0000              DCW      0x0000
                  |L9.164|
0000a4  456e7465          DCB      "Enter power down ...\n",0
0000a8  7220706f
0000ac  77657220
0000b0  646f776e
0000b4  202e2e2e
0000b8  0a00    
0000ba  00                DCB      0
0000bb  00                DCB      0
                  |L9.188|
                          DCD      0x50000100
                  |L9.192|
                          DCD      0x40060000
                  |L9.196|
                          DCD      0xe000ed00
                  |L9.200|
                          DCD      0x50000200
                  |L9.204|
0000cc  64657669          DCB      "device wakeup!\n",0
0000d0  63652077
0000d4  616b6575
0000d8  70210a00

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  g_sVendorStringDesc
000000  1003              DCB      0x10,0x03
000002  004e              DCW      0x004e
000004  00550056          DCW      0x0055,0x0056
000008  004f0054          DCW      0x004f,0x0054
00000c  004f004e          DCW      0x004f,0x004e
                          %        184
0000c8  0000              DCB      0x00,0x00
                  g_sProductStringDesc
0000ca  1603              DCB      0x16,0x03
0000cc  00410052          DCW      0x0041,0x0052
0000d0  004d0020          DCW      0x004d,0x0020
0000d4  00730065          DCW      0x0073,0x0065
0000d8  00720069          DCW      0x0072,0x0069
0000dc  00650073          DCW      0x0065,0x0073
                          %        180
                  g_HID_au8DigitizerReportDescriptor
000194  050d0904          DCB      0x05,0x0d,0x09,0x04
000198  a1018501          DCB      0xa1,0x01,0x85,0x01
00019c  0922a100          DCB      0x09,0x22,0xa1,0x00
0001a0  09421500          DCB      0x09,0x42,0x15,0x00
0001a4  25017501          DCB      0x25,0x01,0x75,0x01
0001a8  95018102          DCB      0x95,0x01,0x81,0x02
0001ac  09327501          DCB      0x09,0x32,0x75,0x01
0001b0  95018102          DCB      0x95,0x01,0x81,0x02
0001b4  09517505          DCB      0x09,0x51,0x75,0x05
0001b8  95011500          DCB      0x95,0x01,0x15,0x00
0001bc  26200081          DCB      0x26,0x20,0x00,0x81
0001c0  02094775          DCB      0x02,0x09,0x47,0x75
0001c4  01950181          DCB      0x01,0x95,0x01,0x81
0001c8  02050109          DCB      0x02,0x05,0x01,0x09
0001cc  30751095          DCB      0x30,0x75,0x10,0x95
0001d0  01550d65          DCB      0x01,0x55,0x0d,0x65
0001d4  33360000          DCB      0x33,0x36,0x00,0x00
0001d8  469a2226          DCB      0x46,0x9a,0x22,0x26
0001dc  ff7f8102          DCB      0xff,0x7f,0x81,0x02
0001e0  09317510          DCB      0x09,0x31,0x75,0x10
0001e4  9501550d          DCB      0x95,0x01,0x55,0x0d
0001e8  65333600          DCB      0x65,0x33,0x36,0x00
0001ec  0046c214          DCB      0x00,0x46,0xc2,0x14
0001f0  26ff7f81          DCB      0x26,0xff,0x7f,0x81
0001f4  02050d09          DCB      0x02,0x05,0x0d,0x09
0001f8  30751095          DCB      0x30,0x75,0x10,0x95
0001fc  01650035          DCB      0x01,0x65,0x00,0x35
000200  0146ff07          DCB      0x01,0x46,0xff,0x07
000204  150126ff          DCB      0x15,0x01,0x26,0xff
000208  07810209          DCB      0x07,0x81,0x02,0x09
00020c  55250875          DCB      0x55,0x25,0x08,0x75
000210  089501b1          DCB      0x08,0x95,0x01,0xb1
000214  02c0c005          DCB      0x02,0xc0,0xc0,0x05
000218  0d090ea1          DCB      0x0d,0x09,0x0e,0xa1
00021c  01850209          DCB      0x01,0x85,0x02,0x09
000220  22a10009          DCB      0x22,0xa1,0x00,0x09
000224  52095315          DCB      0x52,0x09,0x53,0x15
000228  00250a75          DCB      0x00,0x25,0x0a,0x75
00022c  089502b1          DCB      0x08,0x95,0x02,0xb1
000230  02c0c006          DCB      0x02,0xc0,0xc0,0x06
000234  00ff0901          DCB      0x00,0xff,0x09,0x01
000238  a1018503          DCB      0xa1,0x01,0x85,0x03
00023c  953f7508          DCB      0x95,0x3f,0x75,0x08
000240  26ff0015          DCB      0x26,0xff,0x00,0x15
000244  00090191          DCB      0x00,0x09,0x01,0x91
000248  02090181          DCB      0x02,0x09,0x01,0x81
00024c  02c00000          DCB      0x02,0xc0,0x00,0x00
                  g_HID_u32DigitizerReportDescriptorSize
                          DCD      0x000000ba
                  g_u32DigitizerReportSize
                          DCD      0x00000008
                  g_HID_au8DeviceDescriptor
000258  12011001          DCB      0x12,0x01,0x10,0x01
00025c  00000008          DCB      0x00,0x00,0x00,0x08
000260  160443c1          DCB      0x16,0x04,0x43,0xc1
000264  00000102          DCB      0x00,0x00,0x01,0x02
000268  0001              DCB      0x00,0x01
                  g_HID_au8ConfigDescriptor
00026a  0902              DCB      0x09,0x02
00026c  22000101          DCB      0x22,0x00,0x01,0x01
000270  00a03209          DCB      0x00,0xa0,0x32,0x09
000274  04000001          DCB      0x04,0x00,0x00,0x01
000278  03010300          DCB      0x03,0x01,0x03,0x00
00027c  09211001          DCB      0x09,0x21,0x10,0x01
000280  000122ba          DCB      0x00,0x01,0x22,0xba
000284  00070581          DCB      0x00,0x07,0x05,0x81
000288  03400014          DCB      0x03,0x40,0x00,0x14
                  g_HID_au8StringLang
00028c  04030904          DCB      0x04,0x03,0x09,0x04
                  g_HID_sVendorStringDesc
000290  1003              DCB      0x10,0x03
000292  004e              DCW      0x004e
000294  00550056          DCW      0x0055,0x0056
000298  004f0054          DCW      0x004f,0x0054
00029c  004f004e          DCW      0x004f,0x004e
                          %        184
000358  0000              DCB      0x00,0x00
                  g_HID_sProductStringDesc
00035a  1003              DCB      0x10,0x03
00035c  00570050          DCW      0x0057,0x0050
000360  004d0020          DCW      0x004d,0x0020
000364  00550053          DCW      0x0055,0x0053
000368  0042              DCW      0x0042
00036a  0000              DCB      0x00,0x00
                          %        184
                  g_HID_au8StringSerial
000424  1a034200          DCB      0x1a,0x03,0x42,0x00
000428  30003200          DCB      0x30,0x00,0x32,0x00
00042c  30003000          DCB      0x30,0x00,0x30,0x00
000430  36003000          DCB      0x36,0x00,0x30,0x00
000434  39003200          DCB      0x39,0x00,0x32,0x00
000438  31003100          DCB      0x31,0x00,0x31,0x00
00043c  3400              DCB      0x34,0x00

                          AREA ||.data||, DATA, ALIGN=2

                  MIDIDataFor
000000  0000              DCB      0x00,0x00
                  x
000002  0000              DCW      0x0000
                  y
000004  02bc              DCW      0x02bc
                  z
000006  0000              DCW      0x0000
                  xinc
000008  0001              DCW      0x0001
                  yinc
00000a  0001              DCW      0x0001
                  g_au8DigitizerReport
                          %        8
